/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.telnyx.sdk.models;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.v3.oas.annotations.media.Schema;
import com.google.gson.annotations.SerializedName;
import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * &#x60;Latency&#x60; directs Telnyx to route media through the site with the lowest round-trip time to the user&#x27;s connection. Telnyx calculates this time using ICMP ping messages. This can be disabled by specifying a site to handle all media.
 */
@JsonAdapter(AnchorsiteOverride.Adapter.class)
public enum AnchorsiteOverride {
  LATENCY("Latency"),
  CHICAGO_IL("Chicago, IL"),
  ASHBURN_VA("Ashburn, VA"),
  SAN_JOSE_CA("San Jose, CA"),
  SYDNEY_AUSTRALIA("Sydney, Australia"),
  AMSTERDAM_NETHERLANDS("Amsterdam, Netherlands"),
  LONDON_UK("London, UK"),
  TORONTO_CANADA("Toronto, Canada"),
  VANCOUVER_CANADA("Vancouver, Canada"),
  FRANKFURT_GERMANY("Frankfurt, Germany");

  private String value;

  AnchorsiteOverride(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static AnchorsiteOverride fromValue(String text) {
    for (AnchorsiteOverride b : AnchorsiteOverride.values()) {
      if (String.valueOf(b.value).equals(text)) {
        return b;
      }
    }
    return null;
  }

  public static class Adapter extends TypeAdapter<AnchorsiteOverride> {
    @Override
    public void write(final JsonWriter jsonWriter, final AnchorsiteOverride enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public AnchorsiteOverride read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return AnchorsiteOverride.fromValue(String.valueOf(value));
    }
  }
}
