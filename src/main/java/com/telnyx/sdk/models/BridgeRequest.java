/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.telnyx.sdk.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * BridgeRequest
 */


public class BridgeRequest {
  @SerializedName("call_control_id")
  private String callControlId = null;

  @SerializedName("client_state")
  private String clientState = null;

  @SerializedName("command_id")
  private String commandId = null;

  @SerializedName("park_after_unbridge")
  private String parkAfterUnbridge = null;

  public BridgeRequest callControlId(String callControlId) {
    this.callControlId = callControlId;
    return this;
  }

   /**
   * The Call Control ID of the call you want to bridge with.
   * @return callControlId
  **/
  @Schema(example = "v2:T02llQxIyaRkhfRKxgAP8nY511EhFLizdvdUKJiSw8d6A9BborherQ", required = true, description = "The Call Control ID of the call you want to bridge with.")
  public String getCallControlId() {
    return callControlId;
  }

  public void setCallControlId(String callControlId) {
    this.callControlId = callControlId;
  }

  public BridgeRequest clientState(String clientState) {
    this.clientState = clientState;
    return this;
  }

   /**
   * Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.
   * @return clientState
  **/
  @Schema(example = "aGF2ZSBhIG5pY2UgZGF5ID1d", description = "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.")
  public String getClientState() {
    return clientState;
  }

  public void setClientState(String clientState) {
    this.clientState = clientState;
  }

  public BridgeRequest commandId(String commandId) {
    this.commandId = commandId;
    return this;
  }

   /**
   * Use this field to avoid duplicate commands. Telnyx will ignore commands with the same &#x60;command_id&#x60;.
   * @return commandId
  **/
  @Schema(example = "891510ac-f3e4-11e8-af5b-de00688a4901", description = "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same `command_id`.")
  public String getCommandId() {
    return commandId;
  }

  public void setCommandId(String commandId) {
    this.commandId = commandId;
  }

  public BridgeRequest parkAfterUnbridge(String parkAfterUnbridge) {
    this.parkAfterUnbridge = parkAfterUnbridge;
    return this;
  }

   /**
   * Specifies behavior after the bridge ends (i.e. the opposite leg either hangs up or is transferred). If supplied with the value &#x60;self&#x60;, the current leg will be parked after unbridge. If not set, the default behavior is to hang up the leg.
   * @return parkAfterUnbridge
  **/
  @Schema(example = "self", description = "Specifies behavior after the bridge ends (i.e. the opposite leg either hangs up or is transferred). If supplied with the value `self`, the current leg will be parked after unbridge. If not set, the default behavior is to hang up the leg.")
  public String getParkAfterUnbridge() {
    return parkAfterUnbridge;
  }

  public void setParkAfterUnbridge(String parkAfterUnbridge) {
    this.parkAfterUnbridge = parkAfterUnbridge;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BridgeRequest bridgeRequest = (BridgeRequest) o;
    return Objects.equals(this.callControlId, bridgeRequest.callControlId) &&
        Objects.equals(this.clientState, bridgeRequest.clientState) &&
        Objects.equals(this.commandId, bridgeRequest.commandId) &&
        Objects.equals(this.parkAfterUnbridge, bridgeRequest.parkAfterUnbridge);
  }

  @Override
  public int hashCode() {
    return Objects.hash(callControlId, clientState, commandId, parkAfterUnbridge);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BridgeRequest {\n");
    
    sb.append("    callControlId: ").append(toIndentedString(callControlId)).append("\n");
    sb.append("    clientState: ").append(toIndentedString(clientState)).append("\n");
    sb.append("    commandId: ").append(toIndentedString(commandId)).append("\n");
    sb.append("    parkAfterUnbridge: ").append(toIndentedString(parkAfterUnbridge)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
