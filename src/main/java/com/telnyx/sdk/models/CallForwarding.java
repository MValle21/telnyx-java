/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.telnyx.sdk.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * The call forwarding settings for a phone number.
 */
@Schema(description = "The call forwarding settings for a phone number.")

public class CallForwarding {
  @SerializedName("call_forwarding_enabled")
  private Boolean callForwardingEnabled = true;

  @SerializedName("forwards_to")
  private String forwardsTo = null;

  /**
   * Call forwarding type. &#x27;forwards_to&#x27; must be set for this to have an effect.
   */
  @JsonAdapter(ForwardingTypeEnum.Adapter.class)
  public enum ForwardingTypeEnum {
    ALWAYS("always"),
    ON_FAILURE("on_failure");

    private String value;

    ForwardingTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static ForwardingTypeEnum fromValue(String text) {
      for (ForwardingTypeEnum b : ForwardingTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<ForwardingTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ForwardingTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ForwardingTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return ForwardingTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("forwarding_type")
  private ForwardingTypeEnum forwardingType = null;

  public CallForwarding callForwardingEnabled(Boolean callForwardingEnabled) {
    this.callForwardingEnabled = callForwardingEnabled;
    return this;
  }

   /**
   * Indicates if call forwarding will be enabled for this number if forwards_to and forwarding_type are filled in. Defaults to true for backwards compatibility with APIV1 use of numbers endpoints.
   * @return callForwardingEnabled
  **/
  @Schema(example = "true", description = "Indicates if call forwarding will be enabled for this number if forwards_to and forwarding_type are filled in. Defaults to true for backwards compatibility with APIV1 use of numbers endpoints.")
  public Boolean isCallForwardingEnabled() {
    return callForwardingEnabled;
  }

  public void setCallForwardingEnabled(Boolean callForwardingEnabled) {
    this.callForwardingEnabled = callForwardingEnabled;
  }

  public CallForwarding forwardsTo(String forwardsTo) {
    this.forwardsTo = forwardsTo;
    return this;
  }

   /**
   * The phone number to which inbound calls to this number are forwarded. Inbound calls will not be forwarded if this field is left blank. If set, must be a +E.164-formatted phone number.
   * @return forwardsTo
  **/
  @Schema(description = "The phone number to which inbound calls to this number are forwarded. Inbound calls will not be forwarded if this field is left blank. If set, must be a +E.164-formatted phone number.")
  public String getForwardsTo() {
    return forwardsTo;
  }

  public void setForwardsTo(String forwardsTo) {
    this.forwardsTo = forwardsTo;
  }

  public CallForwarding forwardingType(ForwardingTypeEnum forwardingType) {
    this.forwardingType = forwardingType;
    return this;
  }

   /**
   * Call forwarding type. &#x27;forwards_to&#x27; must be set for this to have an effect.
   * @return forwardingType
  **/
  @Schema(example = "always", description = "Call forwarding type. 'forwards_to' must be set for this to have an effect.")
  public ForwardingTypeEnum getForwardingType() {
    return forwardingType;
  }

  public void setForwardingType(ForwardingTypeEnum forwardingType) {
    this.forwardingType = forwardingType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CallForwarding callForwarding = (CallForwarding) o;
    return Objects.equals(this.callForwardingEnabled, callForwarding.callForwardingEnabled) &&
        Objects.equals(this.forwardsTo, callForwarding.forwardsTo) &&
        Objects.equals(this.forwardingType, callForwarding.forwardingType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(callForwardingEnabled, forwardsTo, forwardingType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CallForwarding {\n");
    
    sb.append("    callForwardingEnabled: ").append(toIndentedString(callForwardingEnabled)).append("\n");
    sb.append("    forwardsTo: ").append(toIndentedString(forwardsTo)).append("\n");
    sb.append("    forwardingType: ").append(toIndentedString(forwardingType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
