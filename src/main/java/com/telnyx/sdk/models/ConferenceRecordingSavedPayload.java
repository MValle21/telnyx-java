/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.telnyx.sdk.models;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.telnyx.sdk.models.CallRecordingSavedPayloadPublicRecordingUrls;
import com.telnyx.sdk.models.CallRecordingSavedPayloadRecordingUrls;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * ConferenceRecordingSavedPayload
 */
@JsonPropertyOrder({
  ConferenceRecordingSavedPayload.JSON_PROPERTY_CONFERENCE_ID,
  ConferenceRecordingSavedPayload.JSON_PROPERTY_CONNECTION_ID,
  ConferenceRecordingSavedPayload.JSON_PROPERTY_RECORDING_ID,
  ConferenceRecordingSavedPayload.JSON_PROPERTY_RECORDING_STARTED_AT,
  ConferenceRecordingSavedPayload.JSON_PROPERTY_RECORDING_ENDED_AT,
  ConferenceRecordingSavedPayload.JSON_PROPERTY_CHANNELS,
  ConferenceRecordingSavedPayload.JSON_PROPERTY_RECORDING_URLS,
  ConferenceRecordingSavedPayload.JSON_PROPERTY_PUBLIC_RECORDING_URLS
})
@JsonTypeName("ConferenceRecordingSaved_payload")
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ConferenceRecordingSavedPayload implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_CONFERENCE_ID = "conference_id";
  private String conferenceId;

  public static final String JSON_PROPERTY_CONNECTION_ID = "connection_id";
  private String connectionId;

  public static final String JSON_PROPERTY_RECORDING_ID = "recording_id";
  private String recordingId;

  public static final String JSON_PROPERTY_RECORDING_STARTED_AT = "recording_started_at";
  private OffsetDateTime recordingStartedAt;

  public static final String JSON_PROPERTY_RECORDING_ENDED_AT = "recording_ended_at";
  private OffsetDateTime recordingEndedAt;

  /**
   * Whether recording was recorded in &#x60;single&#x60; or &#x60;dual&#x60; channel.
   */
  public enum ChannelsEnum {
    SINGLE("single"),
    
    DUAL("dual");

    private String value;

    ChannelsEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ChannelsEnum fromValue(String value) {
      for (ChannelsEnum b : ChannelsEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_CHANNELS = "channels";
  private ChannelsEnum channels;

  public static final String JSON_PROPERTY_RECORDING_URLS = "recording_urls";
  private CallRecordingSavedPayloadRecordingUrls recordingUrls;

  public static final String JSON_PROPERTY_PUBLIC_RECORDING_URLS = "public_recording_urls";
  private CallRecordingSavedPayloadPublicRecordingUrls publicRecordingUrls;


  public ConferenceRecordingSavedPayload conferenceId(String conferenceId) {
    
    this.conferenceId = conferenceId;
    return this;
  }

   /**
   * ID that is unique to the conference and can be used to correlate webhook events.
   * @return conferenceId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "428c31b6-7af4-4bcb-b7f5-5013ef9657c1", value = "ID that is unique to the conference and can be used to correlate webhook events.")
  @JsonProperty(JSON_PROPERTY_CONFERENCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getConferenceId() {
    return conferenceId;
  }


  public void setConferenceId(String conferenceId) {
    this.conferenceId = conferenceId;
  }


  public ConferenceRecordingSavedPayload connectionId(String connectionId) {
    
    this.connectionId = connectionId;
    return this;
  }

   /**
   * Telnyx connection ID used in the call.
   * @return connectionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "7267xxxxxxxxxxxxxx", value = "Telnyx connection ID used in the call.")
  @JsonProperty(JSON_PROPERTY_CONNECTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getConnectionId() {
    return connectionId;
  }


  public void setConnectionId(String connectionId) {
    this.connectionId = connectionId;
  }


  public ConferenceRecordingSavedPayload recordingId(String recordingId) {
    
    this.recordingId = recordingId;
    return this;
  }

   /**
   * ID of the recording.
   * @return recordingId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "11111111-1111-1111-1111-111111111112", value = "ID of the recording.")
  @JsonProperty(JSON_PROPERTY_RECORDING_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRecordingId() {
    return recordingId;
  }


  public void setRecordingId(String recordingId) {
    this.recordingId = recordingId;
  }


  public ConferenceRecordingSavedPayload recordingStartedAt(OffsetDateTime recordingStartedAt) {
    
    this.recordingStartedAt = recordingStartedAt;
    return this;
  }

   /**
   * ISO 8601 datetime of when recording started.
   * @return recordingStartedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2018-02-02T22:20:27.521992Z", value = "ISO 8601 datetime of when recording started.")
  @JsonProperty(JSON_PROPERTY_RECORDING_STARTED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getRecordingStartedAt() {
    return recordingStartedAt;
  }


  public void setRecordingStartedAt(OffsetDateTime recordingStartedAt) {
    this.recordingStartedAt = recordingStartedAt;
  }


  public ConferenceRecordingSavedPayload recordingEndedAt(OffsetDateTime recordingEndedAt) {
    
    this.recordingEndedAt = recordingEndedAt;
    return this;
  }

   /**
   * ISO 8601 datetime of when recording ended.
   * @return recordingEndedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2018-02-02T22:25:27.521992Z", value = "ISO 8601 datetime of when recording ended.")
  @JsonProperty(JSON_PROPERTY_RECORDING_ENDED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getRecordingEndedAt() {
    return recordingEndedAt;
  }


  public void setRecordingEndedAt(OffsetDateTime recordingEndedAt) {
    this.recordingEndedAt = recordingEndedAt;
  }


  public ConferenceRecordingSavedPayload channels(ChannelsEnum channels) {
    
    this.channels = channels;
    return this;
  }

   /**
   * Whether recording was recorded in &#x60;single&#x60; or &#x60;dual&#x60; channel.
   * @return channels
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "single", value = "Whether recording was recorded in `single` or `dual` channel.")
  @JsonProperty(JSON_PROPERTY_CHANNELS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ChannelsEnum getChannels() {
    return channels;
  }


  public void setChannels(ChannelsEnum channels) {
    this.channels = channels;
  }


  public ConferenceRecordingSavedPayload recordingUrls(CallRecordingSavedPayloadRecordingUrls recordingUrls) {
    
    this.recordingUrls = recordingUrls;
    return this;
  }

   /**
   * Get recordingUrls
   * @return recordingUrls
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RECORDING_URLS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CallRecordingSavedPayloadRecordingUrls getRecordingUrls() {
    return recordingUrls;
  }


  public void setRecordingUrls(CallRecordingSavedPayloadRecordingUrls recordingUrls) {
    this.recordingUrls = recordingUrls;
  }


  public ConferenceRecordingSavedPayload publicRecordingUrls(CallRecordingSavedPayloadPublicRecordingUrls publicRecordingUrls) {
    
    this.publicRecordingUrls = publicRecordingUrls;
    return this;
  }

   /**
   * Get publicRecordingUrls
   * @return publicRecordingUrls
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PUBLIC_RECORDING_URLS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CallRecordingSavedPayloadPublicRecordingUrls getPublicRecordingUrls() {
    return publicRecordingUrls;
  }


  public void setPublicRecordingUrls(CallRecordingSavedPayloadPublicRecordingUrls publicRecordingUrls) {
    this.publicRecordingUrls = publicRecordingUrls;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConferenceRecordingSavedPayload conferenceRecordingSavedPayload = (ConferenceRecordingSavedPayload) o;
    return Objects.equals(this.conferenceId, conferenceRecordingSavedPayload.conferenceId) &&
        Objects.equals(this.connectionId, conferenceRecordingSavedPayload.connectionId) &&
        Objects.equals(this.recordingId, conferenceRecordingSavedPayload.recordingId) &&
        Objects.equals(this.recordingStartedAt, conferenceRecordingSavedPayload.recordingStartedAt) &&
        Objects.equals(this.recordingEndedAt, conferenceRecordingSavedPayload.recordingEndedAt) &&
        Objects.equals(this.channels, conferenceRecordingSavedPayload.channels) &&
        Objects.equals(this.recordingUrls, conferenceRecordingSavedPayload.recordingUrls) &&
        Objects.equals(this.publicRecordingUrls, conferenceRecordingSavedPayload.publicRecordingUrls);
  }

  @Override
  public int hashCode() {
    return Objects.hash(conferenceId, connectionId, recordingId, recordingStartedAt, recordingEndedAt, channels, recordingUrls, publicRecordingUrls);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConferenceRecordingSavedPayload {\n");
    sb.append("    conferenceId: ").append(toIndentedString(conferenceId)).append("\n");
    sb.append("    connectionId: ").append(toIndentedString(connectionId)).append("\n");
    sb.append("    recordingId: ").append(toIndentedString(recordingId)).append("\n");
    sb.append("    recordingStartedAt: ").append(toIndentedString(recordingStartedAt)).append("\n");
    sb.append("    recordingEndedAt: ").append(toIndentedString(recordingEndedAt)).append("\n");
    sb.append("    channels: ").append(toIndentedString(channels)).append("\n");
    sb.append("    recordingUrls: ").append(toIndentedString(recordingUrls)).append("\n");
    sb.append("    publicRecordingUrls: ").append(toIndentedString(publicRecordingUrls)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

