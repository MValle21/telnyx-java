/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.telnyx.sdk.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Connection
 */


public class Connection {
  @SerializedName("id")
  private String id = null;

  @SerializedName("record_type")
  private String recordType = null;

  @SerializedName("active")
  private Boolean active = null;

  /**
   * &#x60;Latency&#x60; directs Telnyx to route media through the site with the lowest round-trip time to the user&#x27;s connection. Telnyx calculates this time using ICMP ping messages. This can be disabled by specifying a site to handle all media.
   */
  @JsonAdapter(AnchorsiteOverrideEnum.Adapter.class)
  public enum AnchorsiteOverrideEnum {
    LATENCY("Latency"),
    CHICAGO_IL("Chicago, IL"),
    ASHBURN_VA("Ashburn, VA"),
    SAN_JOSE_CA("San Jose, CA"),
    SYDNEY_AUSTRALIA("Sydney, Australia"),
    AMSTERDAM_NETHERLANDS("Amsterdam, Netherlands"),
    LONDON_UK("London, UK"),
    TORONTO_CANADA("Toronto, Canada"),
    VANCOUVER_CANADA("Vancouver, Canada"),
    FRANKFURT_GERMANY("Frankfurt, Germany");

    private String value;

    AnchorsiteOverrideEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static AnchorsiteOverrideEnum fromValue(String text) {
      for (AnchorsiteOverrideEnum b : AnchorsiteOverrideEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<AnchorsiteOverrideEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AnchorsiteOverrideEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AnchorsiteOverrideEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return AnchorsiteOverrideEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("anchorsite_override")
  private AnchorsiteOverrideEnum anchorsiteOverride = null;

  @SerializedName("connection_name")
  private String connectionName = null;

  @SerializedName("created_at")
  private String createdAt = null;

  @SerializedName("updated_at")
  private String updatedAt = null;

  @SerializedName("webhook_event_url")
  private String webhookEventUrl = "";

  @SerializedName("webhook_event_failover_url")
  private String webhookEventFailoverUrl = "";

  /**
   * Determines which webhook format will be used, Telnyx API v1 or v2.
   */
  @JsonAdapter(WebhookApiVersionEnum.Adapter.class)
  public enum WebhookApiVersionEnum {
    _1("1"),
    _2("2");

    private String value;

    WebhookApiVersionEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static WebhookApiVersionEnum fromValue(String text) {
      for (WebhookApiVersionEnum b : WebhookApiVersionEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<WebhookApiVersionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final WebhookApiVersionEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public WebhookApiVersionEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return WebhookApiVersionEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("webhook_api_version")
  private WebhookApiVersionEnum webhookApiVersion = WebhookApiVersionEnum._1;

  @SerializedName("outbound_voice_profile_id")
  private String outboundVoiceProfileId = null;

  public Connection id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Identifies the specific resource.
   * @return id
  **/
  @Schema(example = "6a09cdc3-8948-47f0-aa62-74ac943d6c58", description = "Identifies the specific resource.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Connection recordType(String recordType) {
    this.recordType = recordType;
    return this;
  }

   /**
   * Identifies the type of the resource.
   * @return recordType
  **/
  @Schema(example = "ip_connection", description = "Identifies the type of the resource.")
  public String getRecordType() {
    return recordType;
  }

  public void setRecordType(String recordType) {
    this.recordType = recordType;
  }

  public Connection active(Boolean active) {
    this.active = active;
    return this;
  }

   /**
   * Defaults to true
   * @return active
  **/
  @Schema(example = "true", description = "Defaults to true")
  public Boolean isActive() {
    return active;
  }

  public void setActive(Boolean active) {
    this.active = active;
  }

  public Connection anchorsiteOverride(AnchorsiteOverrideEnum anchorsiteOverride) {
    this.anchorsiteOverride = anchorsiteOverride;
    return this;
  }

   /**
   * &#x60;Latency&#x60; directs Telnyx to route media through the site with the lowest round-trip time to the user&#x27;s connection. Telnyx calculates this time using ICMP ping messages. This can be disabled by specifying a site to handle all media.
   * @return anchorsiteOverride
  **/
  @Schema(example = "Latency", description = "`Latency` directs Telnyx to route media through the site with the lowest round-trip time to the user's connection. Telnyx calculates this time using ICMP ping messages. This can be disabled by specifying a site to handle all media.")
  public AnchorsiteOverrideEnum getAnchorsiteOverride() {
    return anchorsiteOverride;
  }

  public void setAnchorsiteOverride(AnchorsiteOverrideEnum anchorsiteOverride) {
    this.anchorsiteOverride = anchorsiteOverride;
  }

  public Connection connectionName(String connectionName) {
    this.connectionName = connectionName;
    return this;
  }

   /**
   * Get connectionName
   * @return connectionName
  **/
  @Schema(example = "string", description = "")
  public String getConnectionName() {
    return connectionName;
  }

  public void setConnectionName(String connectionName) {
    this.connectionName = connectionName;
  }

  public Connection createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * ISO 8601 formatted date indicating when the resource was created.
   * @return createdAt
  **/
  @Schema(example = "2018-02-02T22:25:27.521Z", description = "ISO 8601 formatted date indicating when the resource was created.")
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }

  public Connection updatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * ISO 8601 formatted date indicating when the resource was updated.
   * @return updatedAt
  **/
  @Schema(example = "2018-02-02T22:25:27.521Z", description = "ISO 8601 formatted date indicating when the resource was updated.")
  public String getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
  }

  public Connection webhookEventUrl(String webhookEventUrl) {
    this.webhookEventUrl = webhookEventUrl;
    return this;
  }

   /**
   * The URL where webhooks related to this connection will be sent.
   * @return webhookEventUrl
  **/
  @Schema(example = "https://example.com", description = "The URL where webhooks related to this connection will be sent.")
  public String getWebhookEventUrl() {
    return webhookEventUrl;
  }

  public void setWebhookEventUrl(String webhookEventUrl) {
    this.webhookEventUrl = webhookEventUrl;
  }

  public Connection webhookEventFailoverUrl(String webhookEventFailoverUrl) {
    this.webhookEventFailoverUrl = webhookEventFailoverUrl;
    return this;
  }

   /**
   * The failover URL where webhooks related to this connection will be sent if sending to the primary URL fails.
   * @return webhookEventFailoverUrl
  **/
  @Schema(example = "https://failover.example.com", description = "The failover URL where webhooks related to this connection will be sent if sending to the primary URL fails.")
  public String getWebhookEventFailoverUrl() {
    return webhookEventFailoverUrl;
  }

  public void setWebhookEventFailoverUrl(String webhookEventFailoverUrl) {
    this.webhookEventFailoverUrl = webhookEventFailoverUrl;
  }

  public Connection webhookApiVersion(WebhookApiVersionEnum webhookApiVersion) {
    this.webhookApiVersion = webhookApiVersion;
    return this;
  }

   /**
   * Determines which webhook format will be used, Telnyx API v1 or v2.
   * @return webhookApiVersion
  **/
  @Schema(example = "1", description = "Determines which webhook format will be used, Telnyx API v1 or v2.")
  public WebhookApiVersionEnum getWebhookApiVersion() {
    return webhookApiVersion;
  }

  public void setWebhookApiVersion(WebhookApiVersionEnum webhookApiVersion) {
    this.webhookApiVersion = webhookApiVersion;
  }

  public Connection outboundVoiceProfileId(String outboundVoiceProfileId) {
    this.outboundVoiceProfileId = outboundVoiceProfileId;
    return this;
  }

   /**
   * Get outboundVoiceProfileId
   * @return outboundVoiceProfileId
  **/
  @Schema(description = "")
  public String getOutboundVoiceProfileId() {
    return outboundVoiceProfileId;
  }

  public void setOutboundVoiceProfileId(String outboundVoiceProfileId) {
    this.outboundVoiceProfileId = outboundVoiceProfileId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Connection connection = (Connection) o;
    return Objects.equals(this.id, connection.id) &&
        Objects.equals(this.recordType, connection.recordType) &&
        Objects.equals(this.active, connection.active) &&
        Objects.equals(this.anchorsiteOverride, connection.anchorsiteOverride) &&
        Objects.equals(this.connectionName, connection.connectionName) &&
        Objects.equals(this.createdAt, connection.createdAt) &&
        Objects.equals(this.updatedAt, connection.updatedAt) &&
        Objects.equals(this.webhookEventUrl, connection.webhookEventUrl) &&
        Objects.equals(this.webhookEventFailoverUrl, connection.webhookEventFailoverUrl) &&
        Objects.equals(this.webhookApiVersion, connection.webhookApiVersion) &&
        Objects.equals(this.outboundVoiceProfileId, connection.outboundVoiceProfileId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, recordType, active, anchorsiteOverride, connectionName, createdAt, updatedAt, webhookEventUrl, webhookEventFailoverUrl, webhookApiVersion, outboundVoiceProfileId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Connection {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    recordType: ").append(toIndentedString(recordType)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    anchorsiteOverride: ").append(toIndentedString(anchorsiteOverride)).append("\n");
    sb.append("    connectionName: ").append(toIndentedString(connectionName)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    webhookEventUrl: ").append(toIndentedString(webhookEventUrl)).append("\n");
    sb.append("    webhookEventFailoverUrl: ").append(toIndentedString(webhookEventFailoverUrl)).append("\n");
    sb.append("    webhookApiVersion: ").append(toIndentedString(webhookApiVersion)).append("\n");
    sb.append("    outboundVoiceProfileId: ").append(toIndentedString(outboundVoiceProfileId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
