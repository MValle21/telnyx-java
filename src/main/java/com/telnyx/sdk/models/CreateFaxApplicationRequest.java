/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.telnyx.sdk.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.telnyx.sdk.models.AnchorsiteOverride;
import com.telnyx.sdk.models.FaxApplicationInbound;
import com.telnyx.sdk.models.FaxApplicationOutbound;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * CreateFaxApplicationRequest
 */


public class CreateFaxApplicationRequest {
  @SerializedName("application_name")
  private String applicationName = null;

  @SerializedName("active")
  private Boolean active = null;

  @SerializedName("anchorsite_override")
  private AnchorsiteOverride anchorsiteOverride = null;

  @SerializedName("webhook_event_url")
  private String webhookEventUrl = null;

  @SerializedName("webhook_event_failover_url")
  private String webhookEventFailoverUrl = null;

  @SerializedName("webhook_timeout_secs")
  private Integer webhookTimeoutSecs = null;

  @SerializedName("inbound")
  private FaxApplicationInbound inbound = null;

  @SerializedName("outbound")
  private FaxApplicationOutbound outbound = null;

  public CreateFaxApplicationRequest applicationName(String applicationName) {
    this.applicationName = applicationName;
    return this;
  }

   /**
   * Get applicationName
   * @return applicationName
  **/
  @Schema(required = true, description = "")
  public String getApplicationName() {
    return applicationName;
  }

  public void setApplicationName(String applicationName) {
    this.applicationName = applicationName;
  }

  public CreateFaxApplicationRequest active(Boolean active) {
    this.active = active;
    return this;
  }

   /**
   * Get active
   * @return active
  **/
  @Schema(description = "")
  public Boolean getActive() {
    return active;
  }

  public void setActive(Boolean active) {
    this.active = active;
  }

  public CreateFaxApplicationRequest anchorsiteOverride(AnchorsiteOverride anchorsiteOverride) {
    this.anchorsiteOverride = anchorsiteOverride;
    return this;
  }

   /**
   * Get anchorsiteOverride
   * @return anchorsiteOverride
  **/
  @Schema(description = "")
  public AnchorsiteOverride getAnchorsiteOverride() {
    return anchorsiteOverride;
  }

  public void setAnchorsiteOverride(AnchorsiteOverride anchorsiteOverride) {
    this.anchorsiteOverride = anchorsiteOverride;
  }

  public CreateFaxApplicationRequest webhookEventUrl(String webhookEventUrl) {
    this.webhookEventUrl = webhookEventUrl;
    return this;
  }

   /**
   * Get webhookEventUrl
   * @return webhookEventUrl
  **/
  @Schema(required = true, description = "")
  public String getWebhookEventUrl() {
    return webhookEventUrl;
  }

  public void setWebhookEventUrl(String webhookEventUrl) {
    this.webhookEventUrl = webhookEventUrl;
  }

  public CreateFaxApplicationRequest webhookEventFailoverUrl(String webhookEventFailoverUrl) {
    this.webhookEventFailoverUrl = webhookEventFailoverUrl;
    return this;
  }

   /**
   * Get webhookEventFailoverUrl
   * @return webhookEventFailoverUrl
  **/
  @Schema(description = "")
  public String getWebhookEventFailoverUrl() {
    return webhookEventFailoverUrl;
  }

  public void setWebhookEventFailoverUrl(String webhookEventFailoverUrl) {
    this.webhookEventFailoverUrl = webhookEventFailoverUrl;
  }

  public CreateFaxApplicationRequest webhookTimeoutSecs(Integer webhookTimeoutSecs) {
    this.webhookTimeoutSecs = webhookTimeoutSecs;
    return this;
  }

   /**
   * Get webhookTimeoutSecs
   * @return webhookTimeoutSecs
  **/
  @Schema(description = "")
  public Integer getWebhookTimeoutSecs() {
    return webhookTimeoutSecs;
  }

  public void setWebhookTimeoutSecs(Integer webhookTimeoutSecs) {
    this.webhookTimeoutSecs = webhookTimeoutSecs;
  }

  public CreateFaxApplicationRequest inbound(FaxApplicationInbound inbound) {
    this.inbound = inbound;
    return this;
  }

   /**
   * Get inbound
   * @return inbound
  **/
  @Schema(description = "")
  public FaxApplicationInbound getInbound() {
    return inbound;
  }

  public void setInbound(FaxApplicationInbound inbound) {
    this.inbound = inbound;
  }

  public CreateFaxApplicationRequest outbound(FaxApplicationOutbound outbound) {
    this.outbound = outbound;
    return this;
  }

   /**
   * Get outbound
   * @return outbound
  **/
  @Schema(description = "")
  public FaxApplicationOutbound getOutbound() {
    return outbound;
  }

  public void setOutbound(FaxApplicationOutbound outbound) {
    this.outbound = outbound;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateFaxApplicationRequest createFaxApplicationRequest = (CreateFaxApplicationRequest) o;
    return Objects.equals(this.applicationName, createFaxApplicationRequest.applicationName) &&
        Objects.equals(this.active, createFaxApplicationRequest.active) &&
        Objects.equals(this.anchorsiteOverride, createFaxApplicationRequest.anchorsiteOverride) &&
        Objects.equals(this.webhookEventUrl, createFaxApplicationRequest.webhookEventUrl) &&
        Objects.equals(this.webhookEventFailoverUrl, createFaxApplicationRequest.webhookEventFailoverUrl) &&
        Objects.equals(this.webhookTimeoutSecs, createFaxApplicationRequest.webhookTimeoutSecs) &&
        Objects.equals(this.inbound, createFaxApplicationRequest.inbound) &&
        Objects.equals(this.outbound, createFaxApplicationRequest.outbound);
  }

  @Override
  public int hashCode() {
    return Objects.hash(applicationName, active, anchorsiteOverride, webhookEventUrl, webhookEventFailoverUrl, webhookTimeoutSecs, inbound, outbound);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateFaxApplicationRequest {\n");
    
    sb.append("    applicationName: ").append(toIndentedString(applicationName)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    anchorsiteOverride: ").append(toIndentedString(anchorsiteOverride)).append("\n");
    sb.append("    webhookEventUrl: ").append(toIndentedString(webhookEventUrl)).append("\n");
    sb.append("    webhookEventFailoverUrl: ").append(toIndentedString(webhookEventFailoverUrl)).append("\n");
    sb.append("    webhookTimeoutSecs: ").append(toIndentedString(webhookTimeoutSecs)).append("\n");
    sb.append("    inbound: ").append(toIndentedString(inbound)).append("\n");
    sb.append("    outbound: ").append(toIndentedString(outbound)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
