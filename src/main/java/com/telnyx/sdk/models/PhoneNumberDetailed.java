/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.telnyx.sdk.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * PhoneNumberDetailed
 */


public class PhoneNumberDetailed {
  @SerializedName("id")
  private String id = null;

  @SerializedName("record_type")
  private String recordType = null;

  @SerializedName("phone_number")
  private String phoneNumber = null;

  /**
   * The phone number&#x27;s current status.
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    PURCHASE_PENDING("purchase-pending"),
    PURCHASE_FAILED("purchase-failed"),
    PORT_PENDING("port-pending"),
    PORT_FAILED("port-failed"),
    ACTIVE("active"),
    DELETED("deleted"),
    EMERGENCY_ONLY("emergency-only"),
    PORTED_OUT("ported-out"),
    PORT_OUT_PENDING("port-out-pending");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("tags")
  private List<String> tags = null;

  @SerializedName("external_pin")
  private String externalPin = null;

  @SerializedName("connection_name")
  private String connectionName = null;

  @SerializedName("connection_id")
  private String connectionId = null;

  @SerializedName("messaging_profile_id")
  private String messagingProfileId = null;

  @SerializedName("messaging_profile_name")
  private String messagingProfileName = null;

  @SerializedName("billing_group_id")
  private String billingGroupId = null;

  @SerializedName("emergency_enabled")
  private Boolean emergencyEnabled = null;

  @SerializedName("emergency_address_id")
  private String emergencyAddressId = null;

  @SerializedName("call_forwarding_enabled")
  private Boolean callForwardingEnabled = true;

  @SerializedName("cnam_listing_enabled")
  private Boolean cnamListingEnabled = null;

  @SerializedName("caller_id_name_enabled")
  private Boolean callerIdNameEnabled = null;

  @SerializedName("call_recording_enabled")
  private Boolean callRecordingEnabled = null;

  @SerializedName("t38_fax_gateway_enabled")
  private Boolean t38FaxGatewayEnabled = null;

  @SerializedName("purchased_at")
  private String purchasedAt = null;

  @SerializedName("created_at")
  private String createdAt = null;

  @SerializedName("updated_at")
  private String updatedAt = null;

  public PhoneNumberDetailed id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

   /**
   * Identifies the type of the resource.
   * @return recordType
  **/
  @Schema(example = "phone_number", description = "Identifies the type of the resource.")
  public String getRecordType() {
    return recordType;
  }

   /**
   * The +E.164-formatted phone number associated with this record.
   * @return phoneNumber
  **/
  @Schema(description = "The +E.164-formatted phone number associated with this record.")
  public String getPhoneNumber() {
    return phoneNumber;
  }

   /**
   * The phone number&#x27;s current status.
   * @return status
  **/
  @Schema(description = "The phone number's current status.")
  public StatusEnum getStatus() {
    return status;
  }

  public PhoneNumberDetailed tags(List<String> tags) {
    this.tags = tags;
    return this;
  }

  public PhoneNumberDetailed addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * A list of user-assigned tags to help manage the phone number.
   * @return tags
  **/
  @Schema(description = "A list of user-assigned tags to help manage the phone number.")
  public List<String> getTags() {
    return tags;
  }

  public void setTags(List<String> tags) {
    this.tags = tags;
  }

  public PhoneNumberDetailed externalPin(String externalPin) {
    this.externalPin = externalPin;
    return this;
  }

   /**
   * If someone attempts to port your phone number away from Telnyx and your phone number has an external PIN set, Telnyx will attempt to verify that you provided the correct external PIN to the winning carrier. Note that not all carriers cooperate with this security mechanism.
   * @return externalPin
  **/
  @Schema(description = "If someone attempts to port your phone number away from Telnyx and your phone number has an external PIN set, Telnyx will attempt to verify that you provided the correct external PIN to the winning carrier. Note that not all carriers cooperate with this security mechanism.")
  public String getExternalPin() {
    return externalPin;
  }

  public void setExternalPin(String externalPin) {
    this.externalPin = externalPin;
  }

   /**
   * The user-assigned name of the connection to be associated with this phone number.
   * @return connectionName
  **/
  @Schema(description = "The user-assigned name of the connection to be associated with this phone number.")
  public String getConnectionName() {
    return connectionName;
  }

  public PhoneNumberDetailed connectionId(String connectionId) {
    this.connectionId = connectionId;
    return this;
  }

   /**
   * Identifies the connection associated with the phone number.
   * @return connectionId
  **/
  @Schema(description = "Identifies the connection associated with the phone number.")
  public String getConnectionId() {
    return connectionId;
  }

  public void setConnectionId(String connectionId) {
    this.connectionId = connectionId;
  }

  public PhoneNumberDetailed messagingProfileId(String messagingProfileId) {
    this.messagingProfileId = messagingProfileId;
    return this;
  }

   /**
   * Identifies the messaging profile associated with the phone number.
   * @return messagingProfileId
  **/
  @Schema(description = "Identifies the messaging profile associated with the phone number.")
  public String getMessagingProfileId() {
    return messagingProfileId;
  }

  public void setMessagingProfileId(String messagingProfileId) {
    this.messagingProfileId = messagingProfileId;
  }

  public PhoneNumberDetailed messagingProfileName(String messagingProfileName) {
    this.messagingProfileName = messagingProfileName;
    return this;
  }

   /**
   * The name of the messaging profile associated with the phone number.
   * @return messagingProfileName
  **/
  @Schema(example = "regional-customers", description = "The name of the messaging profile associated with the phone number.")
  public String getMessagingProfileName() {
    return messagingProfileName;
  }

  public void setMessagingProfileName(String messagingProfileName) {
    this.messagingProfileName = messagingProfileName;
  }

  public PhoneNumberDetailed billingGroupId(String billingGroupId) {
    this.billingGroupId = billingGroupId;
    return this;
  }

   /**
   * Identifies the billing group associated with the phone number.
   * @return billingGroupId
  **/
  @Schema(description = "Identifies the billing group associated with the phone number.")
  public String getBillingGroupId() {
    return billingGroupId;
  }

  public void setBillingGroupId(String billingGroupId) {
    this.billingGroupId = billingGroupId;
  }

   /**
   * Indicates whether emergency services are enabled for this number.
   * @return emergencyEnabled
  **/
  @Schema(description = "Indicates whether emergency services are enabled for this number.")
  public Boolean isEmergencyEnabled() {
    return emergencyEnabled;
  }

   /**
   * Identifies the emergency address associated with the phone number.
   * @return emergencyAddressId
  **/
  @Schema(description = "Identifies the emergency address associated with the phone number.")
  public String getEmergencyAddressId() {
    return emergencyAddressId;
  }

   /**
   * Indicates if call forwarding will be enabled for this number if forwards_to and forwarding_type are filled in. Defaults to true for backwards compatibility with APIV1 use of numbers endpoints.
   * @return callForwardingEnabled
  **/
  @Schema(description = "Indicates if call forwarding will be enabled for this number if forwards_to and forwarding_type are filled in. Defaults to true for backwards compatibility with APIV1 use of numbers endpoints.")
  public Boolean isCallForwardingEnabled() {
    return callForwardingEnabled;
  }

   /**
   * Indicates whether a CNAM listing is enabled for this number.
   * @return cnamListingEnabled
  **/
  @Schema(description = "Indicates whether a CNAM listing is enabled for this number.")
  public Boolean isCnamListingEnabled() {
    return cnamListingEnabled;
  }

   /**
   * Indicates whether caller ID is enabled for this number.
   * @return callerIdNameEnabled
  **/
  @Schema(description = "Indicates whether caller ID is enabled for this number.")
  public Boolean isCallerIdNameEnabled() {
    return callerIdNameEnabled;
  }

   /**
   * Indicates whether call recording is enabled for this number.
   * @return callRecordingEnabled
  **/
  @Schema(description = "Indicates whether call recording is enabled for this number.")
  public Boolean isCallRecordingEnabled() {
    return callRecordingEnabled;
  }

   /**
   * Indicates whether T38 Fax Gateway for inbound calls to this number.
   * @return t38FaxGatewayEnabled
  **/
  @Schema(description = "Indicates whether T38 Fax Gateway for inbound calls to this number.")
  public Boolean isT38FaxGatewayEnabled() {
    return t38FaxGatewayEnabled;
  }

   /**
   * ISO 8601 formatted date indicating when the resource was purchased.
   * @return purchasedAt
  **/
  @Schema(description = "ISO 8601 formatted date indicating when the resource was purchased.")
  public String getPurchasedAt() {
    return purchasedAt;
  }

   /**
   * ISO 8601 formatted date indicating when the resource was created.
   * @return createdAt
  **/
  @Schema(description = "ISO 8601 formatted date indicating when the resource was created.")
  public String getCreatedAt() {
    return createdAt;
  }

   /**
   * ISO 8601 formatted date indicating when the resource was updated.
   * @return updatedAt
  **/
  @Schema(description = "ISO 8601 formatted date indicating when the resource was updated.")
  public String getUpdatedAt() {
    return updatedAt;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PhoneNumberDetailed phoneNumberDetailed = (PhoneNumberDetailed) o;
    return Objects.equals(this.id, phoneNumberDetailed.id) &&
        Objects.equals(this.recordType, phoneNumberDetailed.recordType) &&
        Objects.equals(this.phoneNumber, phoneNumberDetailed.phoneNumber) &&
        Objects.equals(this.status, phoneNumberDetailed.status) &&
        Objects.equals(this.tags, phoneNumberDetailed.tags) &&
        Objects.equals(this.externalPin, phoneNumberDetailed.externalPin) &&
        Objects.equals(this.connectionName, phoneNumberDetailed.connectionName) &&
        Objects.equals(this.connectionId, phoneNumberDetailed.connectionId) &&
        Objects.equals(this.messagingProfileId, phoneNumberDetailed.messagingProfileId) &&
        Objects.equals(this.messagingProfileName, phoneNumberDetailed.messagingProfileName) &&
        Objects.equals(this.billingGroupId, phoneNumberDetailed.billingGroupId) &&
        Objects.equals(this.emergencyEnabled, phoneNumberDetailed.emergencyEnabled) &&
        Objects.equals(this.emergencyAddressId, phoneNumberDetailed.emergencyAddressId) &&
        Objects.equals(this.callForwardingEnabled, phoneNumberDetailed.callForwardingEnabled) &&
        Objects.equals(this.cnamListingEnabled, phoneNumberDetailed.cnamListingEnabled) &&
        Objects.equals(this.callerIdNameEnabled, phoneNumberDetailed.callerIdNameEnabled) &&
        Objects.equals(this.callRecordingEnabled, phoneNumberDetailed.callRecordingEnabled) &&
        Objects.equals(this.t38FaxGatewayEnabled, phoneNumberDetailed.t38FaxGatewayEnabled) &&
        Objects.equals(this.purchasedAt, phoneNumberDetailed.purchasedAt) &&
        Objects.equals(this.createdAt, phoneNumberDetailed.createdAt) &&
        Objects.equals(this.updatedAt, phoneNumberDetailed.updatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, recordType, phoneNumber, status, tags, externalPin, connectionName, connectionId, messagingProfileId, messagingProfileName, billingGroupId, emergencyEnabled, emergencyAddressId, callForwardingEnabled, cnamListingEnabled, callerIdNameEnabled, callRecordingEnabled, t38FaxGatewayEnabled, purchasedAt, createdAt, updatedAt);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PhoneNumberDetailed {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    recordType: ").append(toIndentedString(recordType)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    externalPin: ").append(toIndentedString(externalPin)).append("\n");
    sb.append("    connectionName: ").append(toIndentedString(connectionName)).append("\n");
    sb.append("    connectionId: ").append(toIndentedString(connectionId)).append("\n");
    sb.append("    messagingProfileId: ").append(toIndentedString(messagingProfileId)).append("\n");
    sb.append("    messagingProfileName: ").append(toIndentedString(messagingProfileName)).append("\n");
    sb.append("    billingGroupId: ").append(toIndentedString(billingGroupId)).append("\n");
    sb.append("    emergencyEnabled: ").append(toIndentedString(emergencyEnabled)).append("\n");
    sb.append("    emergencyAddressId: ").append(toIndentedString(emergencyAddressId)).append("\n");
    sb.append("    callForwardingEnabled: ").append(toIndentedString(callForwardingEnabled)).append("\n");
    sb.append("    cnamListingEnabled: ").append(toIndentedString(cnamListingEnabled)).append("\n");
    sb.append("    callerIdNameEnabled: ").append(toIndentedString(callerIdNameEnabled)).append("\n");
    sb.append("    callRecordingEnabled: ").append(toIndentedString(callRecordingEnabled)).append("\n");
    sb.append("    t38FaxGatewayEnabled: ").append(toIndentedString(t38FaxGatewayEnabled)).append("\n");
    sb.append("    purchasedAt: ").append(toIndentedString(purchasedAt)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
