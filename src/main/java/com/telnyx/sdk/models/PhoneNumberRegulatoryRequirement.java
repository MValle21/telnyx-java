/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.telnyx.sdk.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.UUID;
/**
 * PhoneNumberRegulatoryRequirement
 */


public class PhoneNumberRegulatoryRequirement {
  @SerializedName("record_type")
  private String recordType = null;

  @SerializedName("requirement_id")
  private UUID requirementId = null;

  @SerializedName("field_value")
  private String fieldValue = null;

  /**
   * Gets or Sets fieldType
   */
  @JsonAdapter(FieldTypeEnum.Adapter.class)
  public enum FieldTypeEnum {
    STRING("string"),
    DATETIME("datetime"),
    ADDRESS_ID("address_id"),
    NUMBER_ORDER_DOCUMENT_ID("number_order_document_id");

    private String value;

    FieldTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static FieldTypeEnum fromValue(String text) {
      for (FieldTypeEnum b : FieldTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<FieldTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FieldTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public FieldTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return FieldTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("field_type")
  private FieldTypeEnum fieldType = null;

   /**
   * Get recordType
   * @return recordType
  **/
  @Schema(example = "phone_number_regulatory_requirement", description = "")
  public String getRecordType() {
    return recordType;
  }

  public PhoneNumberRegulatoryRequirement requirementId(UUID requirementId) {
    this.requirementId = requirementId;
    return this;
  }

   /**
   * Unique id for a requirement.
   * @return requirementId
  **/
  @Schema(example = "8ffb3622-7c6b-4ccc-b65f-7a3dc0099576", description = "Unique id for a requirement.")
  public UUID getRequirementId() {
    return requirementId;
  }

  public void setRequirementId(UUID requirementId) {
    this.requirementId = requirementId;
  }

  public PhoneNumberRegulatoryRequirement fieldValue(String fieldValue) {
    this.fieldValue = fieldValue;
    return this;
  }

   /**
   * The value of the requirement, this could be an id to a resource or a string value.
   * @return fieldValue
  **/
  @Schema(example = "45f45a04-b4be-4592-95b1-9306b9db2b21", description = "The value of the requirement, this could be an id to a resource or a string value.")
  public String getFieldValue() {
    return fieldValue;
  }

  public void setFieldValue(String fieldValue) {
    this.fieldValue = fieldValue;
  }

   /**
   * Get fieldType
   * @return fieldType
  **/
  @Schema(example = "address_id", description = "")
  public FieldTypeEnum getFieldType() {
    return fieldType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PhoneNumberRegulatoryRequirement phoneNumberRegulatoryRequirement = (PhoneNumberRegulatoryRequirement) o;
    return Objects.equals(this.recordType, phoneNumberRegulatoryRequirement.recordType) &&
        Objects.equals(this.requirementId, phoneNumberRegulatoryRequirement.requirementId) &&
        Objects.equals(this.fieldValue, phoneNumberRegulatoryRequirement.fieldValue) &&
        Objects.equals(this.fieldType, phoneNumberRegulatoryRequirement.fieldType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(recordType, requirementId, fieldValue, fieldType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PhoneNumberRegulatoryRequirement {\n");
    
    sb.append("    recordType: ").append(toIndentedString(recordType)).append("\n");
    sb.append("    requirementId: ").append(toIndentedString(requirementId)).append("\n");
    sb.append("    fieldValue: ").append(toIndentedString(fieldValue)).append("\n");
    sb.append("    fieldType: ").append(toIndentedString(fieldType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
