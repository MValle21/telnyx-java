/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.telnyx.sdk.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * PlayAudioUrlRequest
 */


public class PlayAudioUrlRequest {
  @SerializedName("audio_url")
  private String audioUrl = null;

  @SerializedName("loop")
  private String loop = "1";

  @SerializedName("overlay")
  private Boolean overlay = false;

  @SerializedName("stop")
  private String stop = null;

  @SerializedName("target_legs")
  private String targetLegs = "self";

  @SerializedName("client_state")
  private String clientState = null;

  @SerializedName("command_id")
  private String commandId = null;

  public PlayAudioUrlRequest audioUrl(String audioUrl) {
    this.audioUrl = audioUrl;
    return this;
  }

   /**
   * The URL of the file to be played back on the call. The URL can point to either a WAV or MP3 file.
   * @return audioUrl
  **/
  @Schema(example = "http://www.example.com/sounds/greeting.wav", required = true, description = "The URL of the file to be played back on the call. The URL can point to either a WAV or MP3 file.")
  public String getAudioUrl() {
    return audioUrl;
  }

  public void setAudioUrl(String audioUrl) {
    this.audioUrl = audioUrl;
  }

  public PlayAudioUrlRequest loop(String loop) {
    this.loop = loop;
    return this;
  }

   /**
   * The number of times the audio file should be played. If supplied, the value must be an integer between 1 and 100, or the special string &#x60;infinity&#x60; for an endless loop.
   * @return loop
  **/
  @Schema(example = "infinity", description = "The number of times the audio file should be played. If supplied, the value must be an integer between 1 and 100, or the special string `infinity` for an endless loop.")
  public String getLoop() {
    return loop;
  }

  public void setLoop(String loop) {
    this.loop = loop;
  }

  public PlayAudioUrlRequest overlay(Boolean overlay) {
    this.overlay = overlay;
    return this;
  }

   /**
   * When enabled, audio will be mixed on top of any other audio that is actively being played back. Note that &#x60;overlay: true&#x60; will only work if there is another audio file already being played on the call.
   * @return overlay
  **/
  @Schema(example = "true", description = "When enabled, audio will be mixed on top of any other audio that is actively being played back. Note that `overlay: true` will only work if there is another audio file already being played on the call.")
  public Boolean isOverlay() {
    return overlay;
  }

  public void setOverlay(Boolean overlay) {
    this.overlay = overlay;
  }

  public PlayAudioUrlRequest stop(String stop) {
    this.stop = stop;
    return this;
  }

   /**
   * When specified, it stops the current audio being played.  Specify &#x60;current&#x60; to stop the current audio being played, and to play the next file in the queue. Specify &#x60;all&#x60; to stop the current audio file being played and to also clear all audio files from the queue.
   * @return stop
  **/
  @Schema(example = "current", description = "When specified, it stops the current audio being played.  Specify `current` to stop the current audio being played, and to play the next file in the queue. Specify `all` to stop the current audio file being played and to also clear all audio files from the queue.")
  public String getStop() {
    return stop;
  }

  public void setStop(String stop) {
    this.stop = stop;
  }

  public PlayAudioUrlRequest targetLegs(String targetLegs) {
    this.targetLegs = targetLegs;
    return this;
  }

   /**
   * Specifies the leg or legs on which audio will be played. If supplied, the value must be either &#x60;self&#x60;, &#x60;opposite&#x60; or &#x60;both&#x60;.
   * @return targetLegs
  **/
  @Schema(example = "self", description = "Specifies the leg or legs on which audio will be played. If supplied, the value must be either `self`, `opposite` or `both`.")
  public String getTargetLegs() {
    return targetLegs;
  }

  public void setTargetLegs(String targetLegs) {
    this.targetLegs = targetLegs;
  }

  public PlayAudioUrlRequest clientState(String clientState) {
    this.clientState = clientState;
    return this;
  }

   /**
   * Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.
   * @return clientState
  **/
  @Schema(example = "aGF2ZSBhIG5pY2UgZGF5ID1d", description = "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.")
  public String getClientState() {
    return clientState;
  }

  public void setClientState(String clientState) {
    this.clientState = clientState;
  }

  public PlayAudioUrlRequest commandId(String commandId) {
    this.commandId = commandId;
    return this;
  }

   /**
   * Use this field to avoid duplicate commands. Telnyx will ignore commands with the same &#x60;command_id&#x60;.
   * @return commandId
  **/
  @Schema(example = "891510ac-f3e4-11e8-af5b-de00688a4901", description = "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same `command_id`.")
  public String getCommandId() {
    return commandId;
  }

  public void setCommandId(String commandId) {
    this.commandId = commandId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PlayAudioUrlRequest playAudioUrlRequest = (PlayAudioUrlRequest) o;
    return Objects.equals(this.audioUrl, playAudioUrlRequest.audioUrl) &&
        Objects.equals(this.loop, playAudioUrlRequest.loop) &&
        Objects.equals(this.overlay, playAudioUrlRequest.overlay) &&
        Objects.equals(this.stop, playAudioUrlRequest.stop) &&
        Objects.equals(this.targetLegs, playAudioUrlRequest.targetLegs) &&
        Objects.equals(this.clientState, playAudioUrlRequest.clientState) &&
        Objects.equals(this.commandId, playAudioUrlRequest.commandId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(audioUrl, loop, overlay, stop, targetLegs, clientState, commandId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PlayAudioUrlRequest {\n");
    
    sb.append("    audioUrl: ").append(toIndentedString(audioUrl)).append("\n");
    sb.append("    loop: ").append(toIndentedString(loop)).append("\n");
    sb.append("    overlay: ").append(toIndentedString(overlay)).append("\n");
    sb.append("    stop: ").append(toIndentedString(stop)).append("\n");
    sb.append("    targetLegs: ").append(toIndentedString(targetLegs)).append("\n");
    sb.append("    clientState: ").append(toIndentedString(clientState)).append("\n");
    sb.append("    commandId: ").append(toIndentedString(commandId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
