/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.telnyx.sdk.apis;

import com.telnyx.sdk.ApiException;
import com.telnyx.sdk.models.CallControlApplicationResponse;
import com.telnyx.sdk.models.CreateCallControlApplicationRequest;
import com.telnyx.sdk.models.ListCallControlApplicationsResponse;
import com.telnyx.sdk.models.UpdateCallControlApplicationRequest;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import java.util.concurrent.CompletableFuture;

/**
 * API tests for CallControlApplicationsApi
 */
@Ignore
public class CallControlApplicationsApiTest {

    private final CallControlApplicationsApi api = new CallControlApplicationsApi();

    
    /**
     * Create a call control application
     *
     * Create a call control application.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createCallControlApplicationTest() throws ApiException {
        CreateCallControlApplicationRequest createCallControlApplicationRequest = null;
        CompletableFuture<CallControlApplicationResponse> response = 
        api.createCallControlApplication(createCallControlApplicationRequest);
        
        // TODO: test validations
    }
    
    /**
     * Delete a call control application
     *
     * Deletes a call control application.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteCallControlApplicationTest() throws ApiException {
        String id = null;
        CompletableFuture<CallControlApplicationResponse> response = 
        api.deleteCallControlApplication(id);
        
        // TODO: test validations
    }
    
    /**
     * List call control applications
     *
     * Return a list of call control applications.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listCallControlApplicationsTest() throws ApiException {
        Integer pageNumber = null;
        Integer pageSize = null;
        String filterApplicationNameContains = null;
        String filterOutboundOutboundVoiceProfileId = null;
        String sort = null;
        
        CallControlApplicationsApi.APIlistCallControlApplicationsRequest request = CallControlApplicationsApi.APIlistCallControlApplicationsRequest.newBuilder()
          .pageNumber(pageNumber)
          .pageSize(pageSize)
          .filterApplicationNameContains(filterApplicationNameContains)
          .filterOutboundOutboundVoiceProfileId(filterOutboundOutboundVoiceProfileId)
          .sort(sort)
          .build();
        CompletableFuture<ListCallControlApplicationsResponse> response = 
        api.listCallControlApplications(request);

        // TODO: test validations
    }
    
    /**
     * Retrieve a call control application
     *
     * Retrieves the details of an existing call control application.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveCallControlApplicationTest() throws ApiException {
        String id = null;
        CompletableFuture<CallControlApplicationResponse> response = 
        api.retrieveCallControlApplication(id);
        
        // TODO: test validations
    }
    
    /**
     * Update a call control application
     *
     * Updates settings of an existing call control application.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateCallControlApplicationTest() throws ApiException {
        String id = null;
        UpdateCallControlApplicationRequest updateCallControlApplicationRequest = null;
        CompletableFuture<CallControlApplicationResponse> response = 
        api.updateCallControlApplication(id, updateCallControlApplicationRequest);
        
        // TODO: test validations
    }
    
}
