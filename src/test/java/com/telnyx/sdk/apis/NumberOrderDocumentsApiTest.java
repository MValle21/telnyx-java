/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.telnyx.sdk.apis;

import com.telnyx.sdk.ApiException;
import com.telnyx.sdk.models.CreateNumberOrderDocumentRequest;
import com.telnyx.sdk.models.Errors;
import com.telnyx.sdk.models.ListNumberOrderDocumentsResponse;
import com.telnyx.sdk.models.NumberOrderDocumentResponse;
import com.telnyx.sdk.models.UpdateNumberOrderDocumentRequest;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import java.util.concurrent.CompletableFuture;

/**
 * API tests for NumberOrderDocumentsApi
 */
@Ignore
public class NumberOrderDocumentsApiTest {

    private final NumberOrderDocumentsApi api = new NumberOrderDocumentsApi();

    
    /**
     * Create a number order document
     *
     * Upload a phone number order document.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createNumberOrderDocumentTest() throws ApiException {
        CreateNumberOrderDocumentRequest createNumberOrderDocumentRequest = null;
        CompletableFuture<NumberOrderDocumentResponse> response = 
        api.createNumberOrderDocument(createNumberOrderDocumentRequest);
        
        // TODO: test validations
    }
    
    /**
     * List number order documents
     *
     * Gets a paginated list of number order documents.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listNumberOrderDocumentsTest() throws ApiException {
        String filterRequirementId = null;
        String filterCreatedAtGt = null;
        String filterCreatedAtLt = null;
        
        NumberOrderDocumentsApi.APIlistNumberOrderDocumentsRequest request = NumberOrderDocumentsApi.APIlistNumberOrderDocumentsRequest.newBuilder()
          .filterRequirementId(filterRequirementId)
          .filterCreatedAtGt(filterCreatedAtGt)
          .filterCreatedAtLt(filterCreatedAtLt)
          .build();
        CompletableFuture<ListNumberOrderDocumentsResponse> response = 
        api.listNumberOrderDocuments(request);

        // TODO: test validations
    }
    
    /**
     * Retrieve a number order document
     *
     * Gets a single number order document.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveNumberOrderDocumentTest() throws ApiException {
        String numberOrderDocumentId = null;
        CompletableFuture<NumberOrderDocumentResponse> response = 
        api.retrieveNumberOrderDocument(numberOrderDocumentId);
        
        // TODO: test validations
    }
    
    /**
     * Update a number order document
     *
     * Updates a number order document.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateNumberOrderDocumentTest() throws ApiException {
        String numberOrderDocumentId = null;
        UpdateNumberOrderDocumentRequest updateNumberOrderDocumentRequest = null;
        CompletableFuture<NumberOrderDocumentResponse> response = 
        api.updateNumberOrderDocument(numberOrderDocumentId, updateNumberOrderDocumentRequest);
        
        // TODO: test validations
    }
    
}
