{
    "openapi": "3.0.0",
    "info": {
        "version": "2.0.0",
        "title": "Telnyx API",
        "description": "SIP trunking, SMS, MMS, Call Control and Telephony Data Services.",
        "license": {
            "name": "MIT"
        },
        "contact": {
            "email": "support@telnyx.com"
        }
    },
    "servers": [
        {
            "url": "https://api.telnyx.com/v2",
            "description": "Version 2.0.0 of the Telnyx API"
        }
    ],
    "security": [
        {
            "bearerAuth": []
        }
    ],
    "tags": [
        {
            "name": "Messaging Profiles",
            "description": "Messaging profiles"
        },
        {
            "name": "Messages",
            "description": "Messages"
        },
        {
            "name": "Messaging URL Domains",
            "description": "Messaging URL Domains"
        },
        {
            "name": "Short Codes",
            "description": "Short codes"
        },
        {
            "name": "Number Configurations",
            "description": "Configure your phone numbers"
        },
        {
            "name": "Messaging Hosted Number",
            "description": "Manage your messaging hosted numbers"
        },
        {
            "name": "Call Commands",
            "description": "Call control command operations"
        },
        {
            "name": "Conferences",
            "description": "Conference operations"
        },
        {
            "name": "Conference Commands",
            "description": "Conference command operations"
        },
        {
            "name": "Debugging",
            "description": "Call control debugging"
        },
        {
            "name": "Call Information",
            "description": "Call information"
        },
        {
            "name": "Number Search",
            "description": "Number search"
        },
        {
            "name": "Number Reservations",
            "description": "Number reservations"
        },
        {
            "name": "Number Orders",
            "description": "Number orders"
        },
        {
            "name": "Number Order Regulatory Requirements",
            "description": "Number order regulatory requirements"
        },
        {
            "name": "Number Order Documents",
            "description": "Number order documents"
        }
    ],
    "paths": {
        "/messaging_profiles": {
            "get": {
                "summary": "List all messaging profiles",
                "operationId": "listMessagingProfiles",
                "tags": [
                    "Messaging Profiles"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/PageNumber"
                    },
                    {
                        "$ref": "#/components/parameters/PageSize"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/ListMessagingProfilesResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                }
            },
            "post": {
                "summary": "Create a messaging profile",
                "operationId": "createMessagingProfile",
                "tags": [
                    "Messaging Profiles"
                ],
                "requestBody": {
                    "description": "New Messaging Profile object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NewMessagingProfile"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CreateMessagingProfileResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                },
                "callbacks": {
                    "inboundMessage": {
                        "{$request.body#/webhook_url}": {
                            "post": {
                                "requestBody": {
                                    "required": true,
                                    "content": {
                                        "application/json": {
                                            "schema": {
                                                "$ref": "#/components/schemas/InboundMessageEvent"
                                            }
                                        }
                                    }
                                },
                                "responses": {
                                    "200": {
                                        "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                                    }
                                }
                            }
                        }
                    },
                    "deliveryUpdate": {
                        "{$request.body#/webhook_url}": {
                            "post": {
                                "requestBody": {
                                    "required": true,
                                    "content": {
                                        "application/json": {
                                            "schema": {
                                                "$ref": "#/components/schemas/OutboundMessageEvent"
                                            }
                                        }
                                    }
                                },
                                "responses": {
                                    "200": {
                                        "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                                    }
                                }
                            }
                        }
                    },
                    "replacedLinkClick": {
                        "{$request.body#/webhook_url}": {
                            "post": {
                                "requestBody": {
                                    "required": true,
                                    "content": {
                                        "application/json": {
                                            "schema": {
                                                "$ref": "#/components/schemas/ReplacedLinkClickEvent"
                                            }
                                        }
                                    }
                                },
                                "responses": {
                                    "200": {
                                        "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/messaging_profiles/{id}": {
            "get": {
                "summary": "Retrieve a messaging profile",
                "operationId": "retrieveMessagingProfile",
                "tags": [
                    "Messaging Profiles"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/MessagingProfileId"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RetrieveMessagingProfileResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                }
            },
            "patch": {
                "summary": "Update a messaging profile",
                "operationId": "updateMessagingProfile",
                "tags": [
                    "Messaging Profiles"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/MessagingProfileId"
                    }
                ],
                "requestBody": {
                    "description": "New Messaging Profile object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatedMessagingProfile"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/UpdateMessagingProfileResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                }
            },
            "delete": {
                "summary": "Delete a messaging profile",
                "operationId": "deleteMessagingProfile",
                "tags": [
                    "Messaging Profiles"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/MessagingProfileId"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/DeleteMessagingProfileResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                }
            }
        },
        "/messaging_profiles/{id}/phone_numbers": {
            "get": {
                "summary": "List all phone numbers associated with a messaging profile",
                "operationId": "listMessagingProfilePhoneNumbers",
                "tags": [
                    "Messaging Profiles"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/PageNumber"
                    },
                    {
                        "$ref": "#/components/parameters/PageSize"
                    },
                    {
                        "$ref": "#/components/parameters/MessagingProfileId"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RetrieveMessagingProfilePhoneNumbersResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                }
            }
        },
        "/messaging_profiles/{id}/short_codes": {
            "get": {
                "summary": "List all short codes associated with a messaging profile",
                "operationId": "listMessagingProfileShortCodes",
                "tags": [
                    "Messaging Profiles"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/PageNumber"
                    },
                    {
                        "$ref": "#/components/parameters/PageSize"
                    },
                    {
                        "$ref": "#/components/parameters/MessagingProfileId"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RetrieveMessagingProfileShortCodesResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                }
            }
        },
        "/messaging_profiles/{id}/metrics": {
            "get": {
                "summary": "Get detailed messaging metrics for a messaging profile",
                "operationId": "getMessagingProfileDetailedMetrics",
                "tags": [
                    "Messaging Profiles"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/MessagingProfileId"
                    },
                    {
                        "$ref": "#/components/parameters/MessagingProfileMetricTimeFrame"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RetrieveMessagingProfileMetrics"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                }
            }
        },
        "/messaging_profile_metrics": {
            "get": {
                "summary": "List high-level messaging profile metrics",
                "operationId": "listMessagingProfileMetrics",
                "tags": [
                    "Messaging Profiles"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/PageNumber"
                    },
                    {
                        "$ref": "#/components/parameters/PageSize"
                    },
                    {
                        "$ref": "#/components/parameters/MessagingProfileMetric"
                    },
                    {
                        "$ref": "#/components/parameters/MessagingProfileMetricTimeFrame"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/ListMessagingProfileMetrics"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                }
            }
        },
        "/messaging_url_domains": {
            "get": {
                "summary": "List all available messaging URL domains",
                "operationId": "getAllMessagingUrlDomains",
                "tags": [
                    "Messaging URL Domains"
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/ListMessagingUrlDomains"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                }
            }
        },
        "/short_codes": {
            "get": {
                "summary": "List all short codes",
                "operationId": "listShortCodes",
                "tags": [
                    "Short Codes"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/PageNumber"
                    },
                    {
                        "$ref": "#/components/parameters/PageSize"
                    },
                    {
                        "name": "filter[messaging_profile_id]",
                        "in": "query",
                        "description": "Filter by Messaging Profile ID. Use the string `null` for phone numbers without assigned profiles. A synonym for the `/messaging_profiles/{id}/short_codes` endpoint when querying about an extant profile.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/ListShortCodesResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                }
            }
        },
        "/short_codes/{id}": {
            "get": {
                "summary": "Retrieve a short code",
                "operationId": "retrieveShortCode",
                "tags": [
                    "Short Codes"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ShortCodeId"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RetrieveShortCodeResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                }
            },
            "patch": {
                "summary": "Update short code",
                "operationId": "updateShortCode",
                "description": "Update the settings for a specific short code. To unbind a short code from a profile, set the `messaging_profile_id` to `null` or an empty string.",
                "tags": [
                    "Short Codes"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ShortCodeId"
                    }
                ],
                "requestBody": {
                    "description": "Short code update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShortCodeUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/UpdateShortCodeResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                }
            }
        },
        "/messages": {
            "post": {
                "summary": "Send a message",
                "description": "Send a message with a Phone Number, Alphanumeric Sender ID, Short Code or Number Pool.\n\nThis endpoint allows you to send a message with any messaging resource.\nCurrent messaging resources include: long-code, short-code, number-pool, and\nalphanumeric-sender-id.\n",
                "operationId": "createMessage",
                "tags": [
                    "Messages"
                ],
                "requestBody": {
                    "description": "Message payload",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NewMessage"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CreateMessageResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                },
                "callbacks": {
                    "deliveryUpdate": {
                        "{$request.body#/webhook_url}": {
                            "post": {
                                "requestBody": {
                                    "required": true,
                                    "content": {
                                        "application/json": {
                                            "schema": {
                                                "$ref": "#/components/schemas/OutboundMessage"
                                            }
                                        }
                                    }
                                },
                                "responses": {
                                    "200": {
                                        "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/messages/long_code": {
            "post": {
                "summary": "Send a Long Code message",
                "operationId": "createLongCodeMessage",
                "tags": [
                    "Messages"
                ],
                "requestBody": {
                    "description": "Message payload",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NewLongCodeMessage"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CreateMessageResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                },
                "callbacks": {
                    "deliveryUpdate": {
                        "{$request.body#/webhook_url}": {
                            "post": {
                                "requestBody": {
                                    "required": true,
                                    "content": {
                                        "application/json": {
                                            "schema": {
                                                "$ref": "#/components/schemas/OutboundMessage"
                                            }
                                        }
                                    }
                                },
                                "responses": {
                                    "200": {
                                        "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/messages/number_pool": {
            "post": {
                "summary": "Send a message using Number Pool",
                "operationId": "createNumberPoolMessage",
                "tags": [
                    "Messages"
                ],
                "requestBody": {
                    "description": "Message payload",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NewNumberPoolMessage"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CreateMessageResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                },
                "callbacks": {
                    "deliveryUpdate": {
                        "{$request.body#/webhook_url}": {
                            "post": {
                                "requestBody": {
                                    "required": true,
                                    "content": {
                                        "application/json": {
                                            "schema": {
                                                "$ref": "#/components/schemas/OutboundMessage"
                                            }
                                        }
                                    }
                                },
                                "responses": {
                                    "200": {
                                        "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/messages/short_code": {
            "post": {
                "summary": "Send a Short Code message",
                "operationId": "createShortCodeMessage",
                "tags": [
                    "Messages"
                ],
                "requestBody": {
                    "description": "Message payload",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NewShortCodeMessage"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CreateMessageResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                },
                "callbacks": {
                    "deliveryUpdate": {
                        "{$request.body#/webhook_url}": {
                            "post": {
                                "requestBody": {
                                    "required": true,
                                    "content": {
                                        "application/json": {
                                            "schema": {
                                                "$ref": "#/components/schemas/OutboundMessage"
                                            }
                                        }
                                    }
                                },
                                "responses": {
                                    "200": {
                                        "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/messages/{id}": {
            "get": {
                "summary": "Retrieve a message",
                "operationId": "retrieveMessage",
                "tags": [
                    "Messages"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the message",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RetrieveMessageResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                }
            }
        },
        "/phone_numbers/{id}/messaging": {
            "get": {
                "summary": "Retrieve the messaging settings for a phone number",
                "operationId": "retrievePhoneNumberMessagingSettings",
                "tags": [
                    "Number Configurations"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Identifies the type of resource.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RetrieveMessagingSettingsResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                }
            },
            "patch": {
                "summary": "Update the messaging settings for a phone number",
                "operationId": "updatePhoneNumberMessagingSettings",
                "tags": [
                    "Number Configurations"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Identifies the type of resource.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated messaging settings for the phone number",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MessagingPhoneNumberUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RetrieveMessagingSettingsResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                }
            }
        },
        "/phone_numbers/messaging": {
            "get": {
                "summary": "List all phone numbers' messaging settings",
                "operationId": "listPhoneNumberMessagingSettings",
                "tags": [
                    "Number Configurations"
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/ListMessagingSettingsResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                }
            }
        },
        "/messaging_hosted_numbers/{id}": {
            "delete": {
                "summary": "Delete Messaging Hosted Number",
                "operationId": "deleteMessagingHostedNumber",
                "tags": [
                    "Messaging Hosted Number"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Identifies the type of resource.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RetrieveMessagingHostedNumber"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                }
            }
        },
        "/messaging_hosted_number_orders": {
            "get": {
                "summary": "List All Messaging Hosted Number Orders",
                "operationId": "listMessagingHostedNumberOrder",
                "tags": [
                    "Messaging Hosted Number"
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/ListMessagingHostedNumberOrder"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                }
            },
            "post": {
                "summary": "New Messaging Hosted Numbers Order",
                "operationId": "newMessagingHostedNumberOrder",
                "tags": [
                    "Messaging Hosted Number"
                ],
                "requestBody": {
                    "description": "Message payload",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NewMessagingHostedNumberOrder"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RetrieveMessagingHostedNumberOrder"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                }
            }
        },
        "/messaging_hosted_number_orders/{id}": {
            "get": {
                "summary": "Get Messaging Hosted Numbers Order Information",
                "operationId": "getMessagingHostedNumberOrder",
                "tags": [
                    "Messaging Hosted Number"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Identifies the type of resource.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RetrieveMessagingHostedNumberOrder"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                }
            }
        },
        "/messaging_hosted_number_orders/{id}/actions/file_upload": {
            "post": {
                "summary": "Upload LOA and Bill required for a Messaging Hosted Number Order",
                "operationId": "uploadFilesMessagingHostedNumberOrder",
                "tags": [
                    "Messaging Hosted Number"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Identifies the type of resource.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Message payload",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NewMessagingHostedNumberOrderFileUpload"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RetrieveMessagingHostedNumberOrder"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                }
            }
        },
        "/call_events": {
            "get": {
                "summary": "List call events",
                "description": "Filters call events by given filter parameters. Events are ordered by `event_timestamp`. If filter for `call_leg_id` or `call_session_id` is not present, it only filters events from the last 24 hours.\n\n**Note**: Only one `filter[event_timestamp]` can be passed.\n",
                "x-latency-category": "responsive",
                "operationId": "CallControlDebuggingEventList",
                "tags": [
                    "Debugging"
                ],
                "parameters": [
                    {
                        "name": "filter[call_leg_id]",
                        "in": "query",
                        "description": "The unique identifier of an individual call leg.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "filter[call_session_id]",
                        "in": "query",
                        "description": "The unique identifier of the call control session. A session may include multiple call leg events.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "filter[status]",
                        "in": "query",
                        "description": "Event status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "delivered",
                                "failed"
                            ],
                            "example": "delivered"
                        }
                    },
                    {
                        "name": "filter[type]",
                        "in": "query",
                        "description": "Event type",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "command",
                                "webhook"
                            ],
                            "example": "webhook"
                        }
                    },
                    {
                        "name": "filter[event_timestamp][gt]",
                        "in": "query",
                        "description": "Event timestamp: greater than",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2019-03-29T11:10:00Z"
                        }
                    },
                    {
                        "name": "filter[event_timestamp][gte]",
                        "in": "query",
                        "description": "Event timestamp: greater than or equal",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2019-03-29T11:10:00Z"
                        }
                    },
                    {
                        "name": "filter[event_timestamp][lt]",
                        "in": "query",
                        "description": "Event timestamp: lower than",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2019-03-29T11:10:00Z"
                        }
                    },
                    {
                        "name": "filter[event_timestamp][lte]",
                        "in": "query",
                        "description": "Event timestamp: lower than or equal",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2019-03-29T11:10:00Z"
                        }
                    },
                    {
                        "name": "filter[event_timestamp][eq]",
                        "in": "query",
                        "description": "Event timestamp: equal",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2019-03-29T11:10:00Z"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/ListCallEventsResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                }
            }
        },
        "/calls/{call_control_id}": {
            "get": {
                "summary": "Retrieve call status",
                "description": "Returns the status of a call (data is available 10 minutes after call ended).",
                "operationId": "RetrieveCallStatus",
                "tags": [
                    "Call Information"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CallControlId"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RetrieveCallStatusResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                }
            }
        },
        "/calls/{call_control_id}/actions/answer": {
            "post": {
                "summary": "Answer call",
                "description": "Answer an incoming call. You must issue this command before executing subsequent commands on an incoming call.\n\n**Expected Webhooks:**\n\n- `call.answered`\n",
                "operationId": "CallControlAnswer",
                "tags": [
                    "Call Commands"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CallControlId"
                    }
                ],
                "requestBody": {
                    "description": "Answer call request",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AnswerRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CallControlCommandResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                },
                "callbacks": {
                    "callAnswered": {
                        "{$request.body#/webhook_url}": {
                            "post": {
                                "requestBody": {
                                    "required": true,
                                    "content": {
                                        "application/json": {
                                            "schema": {
                                                "$ref": "#/components/schemas/CallAnswered"
                                            }
                                        }
                                    }
                                },
                                "responses": {
                                    "200": {
                                        "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/calls/{call_control_id}/actions/bridge": {
            "post": {
                "summary": "Bridge calls",
                "description": "Bridge two call control calls.\n\n**Expected Webhooks:**\n\n- `call.bridged` for Leg A\n- `call.bridged` for Leg B\n",
                "operationId": "CallControlBridge",
                "tags": [
                    "Call Commands"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CallControlId"
                    }
                ],
                "requestBody": {
                    "description": "Bridge call request",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BridgeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CallControlCommandResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                },
                "callbacks": {
                    "callBridged": {
                        "{$request.body#/webhook_url}": {
                            "post": {
                                "requestBody": {
                                    "required": true,
                                    "content": {
                                        "application/json": {
                                            "schema": {
                                                "$ref": "#/components/schemas/CallBridged"
                                            }
                                        }
                                    }
                                },
                                "responses": {
                                    "200": {
                                        "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/calls/{call_control_id}/actions/fork_start": {
            "post": {
                "summary": "Forking start",
                "description": "Call forking allows you to stream the media from a call to a specific target in realtime. \nThis stream can be used to enable realtime audio analysis to support a \nvariety of use cases, including fraud detection, or the creation of AI-generated audio responses. \nRequests must specify either the `target` attribute or the `rx` and `tx` attributes.\n\n**Expected Webhooks:**\n\n- `call.fork.started`\n- `call.fork.stopped`\n\n**Simple Telnyx RTP Encapsulation Protocol (STREP)**\n\n*Note: This header/encapsulation is not used when the `rx` and `tx`\nparameters have been specified; it only applies when media is forked\nusing the `target` attribute.*\n\nIf the destination for forked media is specified using the \"target\"\nattribute, the RTP will be encapsulated in an extra Telnyx protocol,\nwhich adds a 24 byte header to the RTP payload in each packet. The STREP\nheader includes the Call Control `call_leg_id` for stream\nidentification, along with bits that represent the direction (inbound or\noutbound) of the media. This 24-byte header sits between the UDP header\nand the RTP header.\n\nThe STREP header makes it possible to fork RTP for multiple calls (or\ntwo RTP streams for the same call) to the same IP:port, where the\nstreams can be demultiplexed by your application using the information\nin the header. Of course, it's still possible to ignore this header\ncompletely, for example, if sending forked media for different calls to\ndifferent ports or IP addresses. In this case, simply strip 24 bytes\n(or use the second byte to find the header length) from the received UDP\npayload to get the RTP (RTP header and payload).\n\n```\nSTREP Specification\n\n  0                   1                   2                   3\n  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n |1 1|Version|L|D|    HeaderLen  |  reserved (2 bytes)           |\n +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n |       reserved (4 bytes, for UDP ports or anything else)      |\n +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n |               The call_leg_id                                 |\n |                   from Call Control                           |\n |                       (128 bits / 16 bytes)                   |\n |                           (this is binary data)               |\n +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\n 11\n   Static bits 11, always set to 11 to easily distinguish forked media\n   from RTP (10) and T.38 media (usually 00) and SIP (which begins\n   with a capital letter, so begins with bits 01). This is a magic number.\n\n Version\n   Four bits to indicate the version number of the protocol, starting at 0001.\n\n L\n   One bit to represent the leg of the call (A or B).\n   0 represents the A (first) leg of the call.\n   1 represents the B (second) leg of the call.\n\n D\n   One bit to represent the direction of this RTP stream.\n   0 represents media received by Telnyx.\n   1 represents media transmitted by Telnyx.\n\n HeaderLen (1 byte)\n   The length of the header in bytes.\n   Note that this value does not include the length of the payload. The total\n   size of the RTP can be calculated by subtracting the HeaderLen from the UDP\n   length (minus 8 for the UDP header).\n   In version 1, this value will always be 24.\n\n Reserved (6 bytes)\n   Reserved for future use and to make sure that the header is a multiple of 32 bits\n\n Call Leg ID\n   A 128-bit identifier for the call leg.\n   This is the call_leg_id from Call Control.\n```\n",
                "operationId": "CallControlForkStart",
                "tags": [
                    "Call Commands"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CallControlId"
                    }
                ],
                "requestBody": {
                    "description": "Fork media request",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StartForkingRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CallControlCommandResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                },
                "callbacks": {
                    "callForkStarted": {
                        "{$request.body#/webhook_url}": {
                            "post": {
                                "requestBody": {
                                    "required": true,
                                    "content": {
                                        "application/json": {
                                            "schema": {
                                                "$ref": "#/components/schemas/CallForkStarted"
                                            }
                                        }
                                    }
                                },
                                "responses": {
                                    "200": {
                                        "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                                    }
                                }
                            }
                        }
                    },
                    "callForkStopped": {
                        "{$request.body#/webhook_url}": {
                            "post": {
                                "requestBody": {
                                    "required": true,
                                    "content": {
                                        "application/json": {
                                            "schema": {
                                                "$ref": "#/components/schemas/CallForkStopped"
                                            }
                                        }
                                    }
                                },
                                "responses": {
                                    "200": {
                                        "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/calls/{call_control_id}/actions/fork_stop": {
            "post": {
                "summary": "Forking stop",
                "description": "Stop forking a call.\n\n**Expected Webhooks:**\n\n- `call.fork.stopped`\n",
                "operationId": "CallControlForkStop",
                "tags": [
                    "Call Commands"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CallControlId"
                    }
                ],
                "requestBody": {
                    "description": "Stop forking media request",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StopForkingRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CallControlCommandResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                },
                "callbacks": {
                    "callForkStopped": {
                        "{$request.body#/webhook_url}": {
                            "post": {
                                "requestBody": {
                                    "required": true,
                                    "content": {
                                        "application/json": {
                                            "schema": {
                                                "$ref": "#/components/schemas/CallForkStopped"
                                            }
                                        }
                                    }
                                },
                                "responses": {
                                    "200": {
                                        "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/calls/{call_control_id}/actions/gather_using_audio": {
            "post": {
                "summary": "Gather using audio",
                "description": "Play an audio file on the call until the required DTMF signals are gathered to build interactive menus.\n\nYou can pass a list of valid digits along with an 'invalid_audio_url', which will be played back at the beginning of each prompt. Playback will be interrupted when a DTMF signal is received. The [Answer](/docs/api/v2/call-control/Call-Commands#CallControlAnswer) command must be issued before the `gather_using_audio` command.\n\n**Expected Webhooks:**\n\n- `call.playback.started`\n- `call.playback.ended`\n- `call.dtmf.received` (you may receive many of these webhooks)\n- `call.gather.ended`\n",
                "operationId": "CallControlGatherUsingAudio",
                "tags": [
                    "Call Commands"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CallControlId"
                    }
                ],
                "requestBody": {
                    "description": "Gather using audio request",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GatherUsingAudioRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CallControlCommandResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                },
                "callbacks": {
                    "callPlaybackStarted": {
                        "{$request.body#/webhook_url}": {
                            "post": {
                                "requestBody": {
                                    "required": true,
                                    "content": {
                                        "application/json": {
                                            "schema": {
                                                "$ref": "#/components/schemas/CallPlaybackStarted"
                                            }
                                        }
                                    }
                                },
                                "responses": {
                                    "200": {
                                        "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                                    }
                                }
                            }
                        }
                    },
                    "callPlaybackEnded": {
                        "{$request.body#/webhook_url}": {
                            "post": {
                                "requestBody": {
                                    "required": true,
                                    "content": {
                                        "application/json": {
                                            "schema": {
                                                "$ref": "#/components/schemas/CallPlaybackEnded"
                                            }
                                        }
                                    }
                                },
                                "responses": {
                                    "200": {
                                        "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                                    }
                                }
                            }
                        }
                    },
                    "callDtmfReceived": {
                        "{$request.body#/webhook_url}": {
                            "post": {
                                "requestBody": {
                                    "required": true,
                                    "content": {
                                        "application/json": {
                                            "schema": {
                                                "$ref": "#/components/schemas/CallDtmfReceived"
                                            }
                                        }
                                    }
                                },
                                "responses": {
                                    "200": {
                                        "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                                    }
                                }
                            }
                        }
                    },
                    "callGatherEnded": {
                        "{$request.body#/webhook_url}": {
                            "post": {
                                "requestBody": {
                                    "required": true,
                                    "content": {
                                        "application/json": {
                                            "schema": {
                                                "$ref": "#/components/schemas/CallGatherEnded"
                                            }
                                        }
                                    }
                                },
                                "responses": {
                                    "200": {
                                        "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/calls/{call_control_id}/actions/gather_using_speak": {
            "post": {
                "summary": "Gather using speak",
                "description": "Convert text to speech and play it on the call until the required DTMF signals are gathered to build interactive menus.\n\nYou can pass a list of valid digits along with an 'invalid_payload', which will be played back at the beginning of each prompt. Speech will be interrupted when a DTMF signal is received. The [Answer](/docs/api/v2/call-control/Call-Commands#CallControlAnswer) command must be issued before the `gather_using_speak` command.\n\n**Expected Webhooks:**\n\n- `call.dtmf.received` (you may receive many of these webhooks)\n- `call.gather.ended`\n",
                "operationId": "CallControlGatherUsingSpeak",
                "tags": [
                    "Call Commands"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CallControlId"
                    }
                ],
                "requestBody": {
                    "description": "Gather using speak request",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GatherUsingSpeakRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CallControlCommandResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                },
                "callbacks": {
                    "callDtmfReceived": {
                        "{$request.body#/webhook_url}": {
                            "post": {
                                "requestBody": {
                                    "required": true,
                                    "content": {
                                        "application/json": {
                                            "schema": {
                                                "$ref": "#/components/schemas/CallDtmfReceived"
                                            }
                                        }
                                    }
                                },
                                "responses": {
                                    "200": {
                                        "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                                    }
                                }
                            }
                        }
                    },
                    "callGatherEnded": {
                        "{$request.body#/webhook_url}": {
                            "post": {
                                "requestBody": {
                                    "required": true,
                                    "content": {
                                        "application/json": {
                                            "schema": {
                                                "$ref": "#/components/schemas/CallGatherEnded"
                                            }
                                        }
                                    }
                                },
                                "responses": {
                                    "200": {
                                        "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/calls/{call_control_id}/actions/gather_stop": {
            "post": {
                "summary": "Gather stop",
                "description": "Stop current gather.\n\n**Expected Webhooks:**\n\n- `call.gather.ended`\n",
                "operationId": "CallControlGatherStop",
                "tags": [
                    "Call Commands"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CallControlId"
                    }
                ],
                "requestBody": {
                    "description": "Stop current gather",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StopGatherRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CallControlCommandResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                },
                "callbacks": {
                    "callGatherEnded": {
                        "{$request.body#/webhook_url}": {
                            "post": {
                                "requestBody": {
                                    "required": true,
                                    "content": {
                                        "application/json": {
                                            "schema": {
                                                "$ref": "#/components/schemas/CallGatherEnded"
                                            }
                                        }
                                    }
                                },
                                "responses": {
                                    "200": {
                                        "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/calls/{call_control_id}/actions/hangup": {
            "post": {
                "summary": "Hangup call",
                "description": "Hang up the call.\n\n**Expected Webhooks:**\n\n- `call.hangup`\n- `call.recording.saved`\n",
                "operationId": "CallControlHangup",
                "tags": [
                    "Call Commands"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CallControlId"
                    }
                ],
                "requestBody": {
                    "description": "Hangup request",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/HangupRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CallControlCommandResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                },
                "callbacks": {
                    "callHangup": {
                        "{$request.body#/webhook_url}": {
                            "post": {
                                "requestBody": {
                                    "required": true,
                                    "content": {
                                        "application/json": {
                                            "schema": {
                                                "$ref": "#/components/schemas/CallHangup"
                                            }
                                        }
                                    }
                                },
                                "responses": {
                                    "200": {
                                        "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                                    }
                                }
                            }
                        }
                    },
                    "callRecordingSaved": {
                        "{$request.body#/webhook_url}": {
                            "post": {
                                "requestBody": {
                                    "required": true,
                                    "content": {
                                        "application/json": {
                                            "schema": {
                                                "$ref": "#/components/schemas/CallRecordingSaved"
                                            }
                                        }
                                    }
                                },
                                "responses": {
                                    "200": {
                                        "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/calls/{call_control_id}/actions/reject": {
            "post": {
                "summary": "Reject call",
                "description": "Reject an incoming call.\n\n**Expected Webhooks:**\n\n- `call.hangup`\n",
                "operationId": "CallControlReject",
                "tags": [
                    "Call Commands"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CallControlId"
                    }
                ],
                "requestBody": {
                    "description": "Reject request",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RejectRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CallControlCommandResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                },
                "callbacks": {
                    "callHangup": {
                        "{$request.body#/webhook_url}": {
                            "post": {
                                "requestBody": {
                                    "required": true,
                                    "content": {
                                        "application/json": {
                                            "schema": {
                                                "$ref": "#/components/schemas/CallHangup"
                                            }
                                        }
                                    }
                                },
                                "responses": {
                                    "200": {
                                        "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/calls/{call_control_id}/actions/playback_start": {
            "post": {
                "summary": "Play audio URL",
                "description": "Play an audio file on the call. If multiple play audio commands are issued consecutively,\nthe audio files will be placed in a queue awaiting playback.\n\n*Notes:*\n\n- When `overlay` is enabled, `loop` is limited to 1, and `target_legs` is limited to `self`.\n- A customer cannot Play Audio with `overlay=true` unless there is a Play Audio with `overlay=false` actively playing.\n\n**Expected Webhooks:**\n\n- `call.playback.started`\n- `call.playback.ended`\n",
                "operationId": "CallControlPlaybackStart",
                "tags": [
                    "Call Commands"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CallControlId"
                    }
                ],
                "requestBody": {
                    "description": "Play audio URL request",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PlayAudioUrlRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CallControlCommandResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                },
                "callbacks": {
                    "callPlaybackStarted": {
                        "{$request.body#/webhook_url}": {
                            "post": {
                                "requestBody": {
                                    "required": true,
                                    "content": {
                                        "application/json": {
                                            "schema": {
                                                "$ref": "#/components/schemas/CallPlaybackStarted"
                                            }
                                        }
                                    }
                                },
                                "responses": {
                                    "200": {
                                        "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                                    }
                                }
                            }
                        }
                    },
                    "callPlaybackEnded": {
                        "{$request.body#/webhook_url}": {
                            "post": {
                                "requestBody": {
                                    "required": true,
                                    "content": {
                                        "application/json": {
                                            "schema": {
                                                "$ref": "#/components/schemas/CallPlaybackEnded"
                                            }
                                        }
                                    }
                                },
                                "responses": {
                                    "200": {
                                        "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/calls/{call_control_id}/actions/playback_stop": {
            "post": {
                "summary": "Stop audio playback",
                "description": "Stop audio being played on the call.\n\n**Expected Webhooks:**\n\n- `call.playback.ended` or `call.speak.ended`\n",
                "operationId": "CallControlPlaybackStop",
                "tags": [
                    "Call Commands"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CallControlId"
                    }
                ],
                "requestBody": {
                    "description": "Stop audio playback request",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PlaybackStopRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CallControlCommandResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                },
                "callbacks": {
                    "callPlaybackEnded": {
                        "{$request.body#/webhook_url}": {
                            "post": {
                                "requestBody": {
                                    "required": true,
                                    "content": {
                                        "application/json": {
                                            "schema": {
                                                "$ref": "#/components/schemas/CallPlaybackEnded"
                                            }
                                        }
                                    }
                                },
                                "responses": {
                                    "200": {
                                        "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                                    }
                                }
                            }
                        }
                    },
                    "callSpeakEnded": {
                        "{$request.body#/webhook_url}": {
                            "post": {
                                "requestBody": {
                                    "required": true,
                                    "content": {
                                        "application/json": {
                                            "schema": {
                                                "$ref": "#/components/schemas/CallSpeakEnded"
                                            }
                                        }
                                    }
                                },
                                "responses": {
                                    "200": {
                                        "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/calls/{call_control_id}/actions/record_start": {
            "post": {
                "summary": "Recording start",
                "description": "Start recording the call. Recording will stop on call hang-up, or can be initiated via the Stop Recording command.\n\n**Expected Webhooks:**\n\n- `call.recording.saved`\n",
                "operationId": "CallControlRecordStart",
                "tags": [
                    "Call Commands"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CallControlId"
                    }
                ],
                "requestBody": {
                    "description": "Start recording audio request",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StartRecordingRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CallControlCommandResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                }
            }
        },
        "/calls/{call_control_id}/actions/record_stop": {
            "post": {
                "summary": "Recording stop",
                "description": "Stop recording the call.\n\n**Expected Webhooks:**\n\n- `call.recording.saved`\n",
                "operationId": "CallControlRecordStop",
                "tags": [
                    "Call Commands"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CallControlId"
                    }
                ],
                "requestBody": {
                    "description": "Stop recording call request",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StopRecordingRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CallControlCommandResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                },
                "callbacks": {
                    "callRecordingSaved": {
                        "{$request.body#/webhook_url}": {
                            "post": {
                                "requestBody": {
                                    "required": true,
                                    "content": {
                                        "application/json": {
                                            "schema": {
                                                "$ref": "#/components/schemas/CallRecordingSaved"
                                            }
                                        }
                                    }
                                },
                                "responses": {
                                    "200": {
                                        "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/calls/{call_control_id}/actions/send_dtmf": {
            "post": {
                "summary": "Send DTMF",
                "description": "Sends DTMF tones from this leg. DTMF tones will be heard by the other end of the call.\n\n**Expected Webhooks:**\n\nThere are no webhooks associated with this command.\n",
                "operationId": "CallControlSendDTMF",
                "tags": [
                    "Call Commands"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CallControlId"
                    }
                ],
                "requestBody": {
                    "description": "Send DTMF request",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SendDTMFRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CallControlCommandResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                }
            }
        },
        "/calls/{call_control_id}/actions/speak": {
            "post": {
                "summary": "Speak text",
                "description": "Convert text to speech and play it back on the call. If multiple speak text commands are issued consecutively, the audio files will be placed in a queue awaiting playback.\n\n**Expected Webhooks:**\n\n- `call.speak.started`\n- `call.speak.ended`\n",
                "operationId": "CallControlSpeak",
                "tags": [
                    "Call Commands"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CallControlId"
                    }
                ],
                "requestBody": {
                    "description": "Speak request",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SpeakRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CallControlCommandResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                },
                "callbacks": {
                    "callSpeakStarted": {
                        "{$request.body#/webhook_url}": {
                            "post": {
                                "requestBody": {
                                    "required": true,
                                    "content": {
                                        "application/json": {
                                            "schema": {
                                                "$ref": "#/components/schemas/CallSpeakStarted"
                                            }
                                        }
                                    }
                                },
                                "responses": {
                                    "200": {
                                        "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                                    }
                                }
                            }
                        }
                    },
                    "callSpeakEnded": {
                        "{$request.body#/webhook_url}": {
                            "post": {
                                "requestBody": {
                                    "required": true,
                                    "content": {
                                        "application/json": {
                                            "schema": {
                                                "$ref": "#/components/schemas/CallSpeakEnded"
                                            }
                                        }
                                    }
                                },
                                "responses": {
                                    "200": {
                                        "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/calls/{call_control_id}/actions/transfer": {
            "post": {
                "summary": "Transfer call",
                "description": "Transfer a call to a new destination. If the transfer is unsuccessful, a `call.hangup` webhook will be sent indicating that the transfer could not be completed. The original call will remain active and may be issued additional commands, potentially transfering the call to an alternate destination.\n\n**Expected Webhooks:**\n\n- `call.initiated`\n- `call.bridged` to Leg B\n- `call.answered` or `call.hangup`\n- `call.machine.detection.ended` if `answering_machine_detection` was requested\n- `call.machine.greeting.ended` if `answering_machine_detection` was requested to detect the end of machine greeting\n",
                "operationId": "CallControlTransfer",
                "tags": [
                    "Call Commands"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CallControlId"
                    }
                ],
                "requestBody": {
                    "description": "Transfer call request",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TransferCallRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CallControlCommandResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                },
                "callbacks": {
                    "callInitiated": {
                        "{$request.body#/webhook_url}": {
                            "post": {
                                "requestBody": {
                                    "required": true,
                                    "content": {
                                        "application/json": {
                                            "schema": {
                                                "$ref": "#/components/schemas/CallInitiated"
                                            }
                                        }
                                    }
                                },
                                "responses": {
                                    "200": {
                                        "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                                    }
                                }
                            }
                        }
                    },
                    "callBridged": {
                        "{$request.body#/webhook_url}": {
                            "post": {
                                "requestBody": {
                                    "required": true,
                                    "content": {
                                        "application/json": {
                                            "schema": {
                                                "$ref": "#/components/schemas/CallBridged"
                                            }
                                        }
                                    }
                                },
                                "responses": {
                                    "200": {
                                        "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                                    }
                                }
                            }
                        }
                    },
                    "callAnswered": {
                        "{$request.body#/webhook_url}": {
                            "post": {
                                "requestBody": {
                                    "required": true,
                                    "content": {
                                        "application/json": {
                                            "schema": {
                                                "$ref": "#/components/schemas/CallAnswered"
                                            }
                                        }
                                    }
                                },
                                "responses": {
                                    "200": {
                                        "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                                    }
                                }
                            }
                        }
                    },
                    "callHangup": {
                        "{$request.body#/webhook_url}": {
                            "post": {
                                "requestBody": {
                                    "required": true,
                                    "content": {
                                        "application/json": {
                                            "schema": {
                                                "$ref": "#/components/schemas/CallHangup"
                                            }
                                        }
                                    }
                                },
                                "responses": {
                                    "200": {
                                        "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/calls": {
            "post": {
                "summary": "Dial",
                "description": "Dial a number from a given connection. A successful response will include a `call_leg_id` which can be used to correlate the command with subsequent webhooks.\n\n**Expected Webhooks:**\n\n- `call.initiated`\n- `call.answered` or `call.hangup`\n- `call.machine.detection.ended` if `answering_machine_detection` was requested\n- `call.machine.greeting.ended` if `answering_machine_detection` was requested to detect the end of machine greeting\n",
                "operationId": "CallControlDial",
                "tags": [
                    "Call Commands"
                ],
                "requestBody": {
                    "description": "Dial request",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DialRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RetrieveCallStatusResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                },
                "callbacks": {
                    "callInitiated": {
                        "{$request.body#/webhook_url}": {
                            "post": {
                                "requestBody": {
                                    "required": true,
                                    "content": {
                                        "application/json": {
                                            "schema": {
                                                "$ref": "#/components/schemas/CallInitiated"
                                            }
                                        }
                                    }
                                },
                                "responses": {
                                    "200": {
                                        "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                                    }
                                }
                            }
                        }
                    },
                    "callAnswered": {
                        "{$request.body#/webhook_url}": {
                            "post": {
                                "requestBody": {
                                    "required": true,
                                    "content": {
                                        "application/json": {
                                            "schema": {
                                                "$ref": "#/components/schemas/CallAnswered"
                                            }
                                        }
                                    }
                                },
                                "responses": {
                                    "200": {
                                        "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                                    }
                                }
                            }
                        }
                    },
                    "callHangup": {
                        "{$request.body#/webhook_url}": {
                            "post": {
                                "requestBody": {
                                    "required": true,
                                    "content": {
                                        "application/json": {
                                            "schema": {
                                                "$ref": "#/components/schemas/CallHangup"
                                            }
                                        }
                                    }
                                },
                                "responses": {
                                    "200": {
                                        "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                                    }
                                }
                            }
                        }
                    },
                    "callMachineDetectionEnded": {
                        "{$request.body#/webhook_url}": {
                            "post": {
                                "requestBody": {
                                    "required": true,
                                    "content": {
                                        "application/json": {
                                            "schema": {
                                                "$ref": "#/components/schemas/CallMachineDetectionEnded"
                                            }
                                        }
                                    }
                                },
                                "responses": {
                                    "200": {
                                        "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                                    }
                                }
                            }
                        }
                    },
                    "callMachineGreetingEnded": {
                        "{$request.body#/webhook_url}": {
                            "post": {
                                "requestBody": {
                                    "required": true,
                                    "content": {
                                        "application/json": {
                                            "schema": {
                                                "$ref": "#/components/schemas/CallMachineGreetingEnded"
                                            }
                                        }
                                    }
                                },
                                "responses": {
                                    "200": {
                                        "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/conferences": {
            "post": {
                "summary": "Create conference",
                "description": "Create a conference from an existing call leg using a `call_control_id` and a conference name. Upon creating the conference, the call will be automatically bridged to the conference. Conferences will expire after all participants have left the conference or after 4 hours regardless of the number of active participants.\n\n**Expected Webhooks:**\n\n- `conference.created`\n- `conference.participant.joined`\n- `conference.participant.left`\n- `conference.ended`\n- `conference.recording.saved`\n",
                "operationId": "CreateConference",
                "tags": [
                    "Conference Commands"
                ],
                "requestBody": {
                    "description": "Create a conference",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateConferenceRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CreateConferenceResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedResponse"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntityResponse"
                    }
                },
                "callbacks": {
                    "conferenceCreated": {
                        "{$request.body#/webhook_url}": {
                            "post": {
                                "requestBody": {
                                    "required": true,
                                    "content": {
                                        "application/json": {
                                            "schema": {
                                                "$ref": "#/components/schemas/ConferenceCreated"
                                            }
                                        }
                                    }
                                },
                                "responses": {
                                    "200": {
                                        "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                                    }
                                }
                            }
                        }
                    },
                    "conferenceParticipantJoined": {
                        "{$request.body#/webhook_url}": {
                            "post": {
                                "requestBody": {
                                    "required": true,
                                    "content": {
                                        "application/json": {
                                            "schema": {
                                                "$ref": "#/components/schemas/ConferenceParticipantJoined"
                                            }
                                        }
                                    }
                                },
                                "responses": {
                                    "200": {
                                        "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                                    }
                                }
                            }
                        }
                    },
                    "conferenceEnded": {
                        "{$request.body#/webhook_url}": {
                            "post": {
                                "requestBody": {
                                    "required": true,
                                    "content": {
                                        "application/json": {
                                            "schema": {
                                                "$ref": "#/components/schemas/ConferenceEnded"
                                            }
                                        }
                                    }
                                },
                                "responses": {
                                    "200": {
                                        "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                                    }
                                }
                            }
                        }
                    },
                    "conferenceParticipantLeft": {
                        "{$request.body#/webhook_url}": {
                            "post": {
                                "requestBody": {
                                    "required": true,
                                    "content": {
                                        "application/json": {
                                            "schema": {
                                                "$ref": "#/components/schemas/ConferenceParticipantLeft"
                                            }
                                        }
                                    }
                                },
                                "responses": {
                                    "200": {
                                        "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "x-latency-category": "responsive",
                "description": "Lists conferences. Conferences are created on demand, and will expire after all participants have left the conference or after 4 hours regardless of the number of active participants. Conferences are listed in descending order by `expires_at`.",
                "summary": "List conferences",
                "operationId": "GetConferences",
                "tags": [
                    "Conference Commands"
                ],
                "parameters": [
                    {
                        "name": "filter[name]",
                        "in": "query",
                        "description": "If present, conferences will be filtered to those with a matching `name` attribute. Matching is case-sensitive",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/PageNumber"
                    },
                    {
                        "$ref": "#/components/parameters/PageSize"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/ListConferencesResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedResponse"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntityResponse"
                    }
                }
            }
        },
        "/conferences/{id}": {
            "get": {
                "summary": "Retrieve a conference",
                "description": "Retrieve an existing conference",
                "operationId": "GetConference",
                "tags": [
                    "Conference Commands"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Uniquely identifies the conference",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/GetConferenceResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    }
                }
            }
        },
        "/conferences/{id}/participants": {
            "get": {
                "description": "Lists conference participants",
                "summary": "List conference participants",
                "operationId": "GetConferenceParticipants",
                "tags": [
                    "Conference Commands"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Uniquely identifies the conference",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter[muted]",
                        "in": "query",
                        "description": "If present, participants will be filtered to those who are/are not muted",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filter[on_hold]",
                        "in": "query",
                        "description": "If present, participants will be filtered to those who are/are not put on hold",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filter[whispering]",
                        "in": "query",
                        "description": "If present, participants will be filtered to those who are whispering or are not",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/PageNumber"
                    },
                    {
                        "$ref": "#/components/parameters/PageSize"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/ListParticipantsResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntityResponse"
                    }
                }
            }
        },
        "/conferences/{id}/actions/join": {
            "post": {
                "summary": "Join a conference",
                "description": "Join an existing call leg to a conference. Issue the Join Conference command with the conference ID in the path and the `call_control_id` of the leg you wish to join to the conference as an attribute.\n\n**Expected Webhooks:**\n\n- `conference.participant.joined`\n- `conference.participant.left`\n",
                "operationId": "JoinConference",
                "tags": [
                    "Conference Commands"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Uniquely identifies the conference",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "New Messaging Profile object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JoinConferenceRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/ConferenceCommandResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedResponse"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntityResponse"
                    }
                },
                "callbacks": {
                    "conferenceParticipantJoined": {
                        "{$request.body#/webhook_url}": {
                            "post": {
                                "requestBody": {
                                    "required": true,
                                    "content": {
                                        "application/json": {
                                            "schema": {
                                                "$ref": "#/components/schemas/ConferenceParticipantJoined"
                                            }
                                        }
                                    }
                                },
                                "responses": {
                                    "200": {
                                        "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                                    }
                                }
                            }
                        }
                    },
                    "conferenceParticipantLeft": {
                        "{$request.body#/webhook_url}": {
                            "post": {
                                "requestBody": {
                                    "required": true,
                                    "content": {
                                        "application/json": {
                                            "schema": {
                                                "$ref": "#/components/schemas/ConferenceParticipantLeft"
                                            }
                                        }
                                    }
                                },
                                "responses": {
                                    "200": {
                                        "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/conferences/{id}/actions/mute": {
            "post": {
                "summary": "Mute conference participants",
                "description": "Mute a list of participants in a conference call",
                "operationId": "MuteConference",
                "tags": [
                    "Conference Commands"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Uniquely identifies the conference",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConferenceMuteRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/ConferenceCommandResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntityResponse"
                    }
                }
            }
        },
        "/conferences/{id}/actions/unmute": {
            "post": {
                "summary": "Unmute conference participants",
                "description": "Unmute a list of participants in a conference call",
                "operationId": "UnmuteConference",
                "tags": [
                    "Conference Commands"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Uniquely identifies the conference",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConferenceUnmuteRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/ConferenceCommandResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntityResponse"
                    }
                }
            }
        },
        "/conferences/{id}/actions/hold": {
            "post": {
                "summary": "Hold conference participants",
                "description": "Hold a list of participants in a conference call",
                "operationId": "HoldConference",
                "tags": [
                    "Conference Commands"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Uniquely identifies the conference",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConferenceHoldRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/ConferenceCommandResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntityResponse"
                    }
                }
            }
        },
        "/conferences/{id}/actions/unhold": {
            "post": {
                "summary": "Unhold conference participants",
                "description": "Unhold a list of participants in a conference call",
                "operationId": "UnholdConference",
                "tags": [
                    "Conference Commands"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Uniquely identifies the conference",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConferenceUnholdRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/ConferenceCommandResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntityResponse"
                    }
                }
            }
        },
        "/conferences/{id}/actions/record_start": {
            "post": {
                "summary": "Conference recording start",
                "description": "Start recording the conference. Recording will stop on conference end, or via the Stop Recording command.\n\n**Expected Webhooks:**\n\n- `conference.recording.saved`",
                "operationId": "CallControlRecordConferenceStart",
                "tags": [
                    "Conference Commands"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Specifies the conference to record",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StartRecordingRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/ConferenceCommandResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntityResponse"
                    }
                }
            }
        },
        "/conferences/{id}/actions/record_stop": {
            "post": {
                "summary": "Conference recording stop",
                "description": "Stop recording the conference.\n\n**Expected Webhooks:**\n\n- `conference.recording.saved`\n",
                "operationId": "CallControlRecordConferenceStop",
                "tags": [
                    "Conference Commands"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Specifies the conference to stop the recording for",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Stop recording conference request",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StopRecordingRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/ConferenceCommandResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntityResponse"
                    }
                }
            }
        },
        "/number_reservations": {
            "get": {
                "summary": "List multiple Number Reservations",
                "description": "Gets a paginated list of Phone Number Reservations",
                "operationId": "listNumberReservations",
                "tags": [
                    "Number Reservations"
                ],
                "parameters": [
                    {
                        "name": "filter[status]",
                        "in": "query",
                        "description": "Filter number reservations by status",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter[created_at][gt]",
                        "in": "query",
                        "description": "Filter number reservations later than this value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter[created_at][lt]",
                        "in": "query",
                        "description": "Filter number reservations earlier than this value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter[phone_numbers.phone_number]",
                        "in": "query",
                        "description": "Filter number reservations having these phone numbers",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter[customer_reference]",
                        "in": "query",
                        "description": "Filter number reservations via the customer reference set",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/ListNumberReservationsResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                }
            },
            "post": {
                "summary": "Create a Phone Number Reservation",
                "description": "Creates a Phone Number Reservation for multiple numbers",
                "operationId": "createNumberReservations",
                "tags": [
                    "Number Reservations"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NumberReservation"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CreateNumberReservationsResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                }
            }
        },
        "/number_reservations/{number_reservation_id}": {
            "get": {
                "summary": "Get a Single Phone Number Reservation",
                "description": "Gets a single Phone Number Reservation",
                "operationId": "retrieveNumberReservation",
                "tags": [
                    "Number Reservations"
                ],
                "parameters": [
                    {
                        "name": "number_reservation_id",
                        "in": "path",
                        "description": "The number reservation id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RetrieveNumberReservationResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                }
            }
        },
        "/number_reservations/{number_reservation_id}/actions/extend": {
            "post": {
                "summary": "Extend a Phone Number Reservation",
                "description": "Extends reservation expiry time on all phone numbers",
                "operationId": "extendNumberReservationExpiryTime",
                "tags": [
                    "Number Reservations"
                ],
                "parameters": [
                    {
                        "name": "number_reservation_id",
                        "in": "path",
                        "description": "The number reservation id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RetrieveNumberReservationResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                }
            }
        },
        "/number_orders": {
            "get": {
                "summary": "Get multiple Number Orders",
                "description": "Get a paginated list of Number Orders",
                "operationId": "listNumberOrders",
                "tags": [
                    "Number Orders"
                ],
                "parameters": [
                    {
                        "name": "filter[status]",
                        "in": "query",
                        "description": "Filter number orders by status",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter[created_at][gt]",
                        "in": "query",
                        "description": "Filter number orders later than this value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter[created_at][lt]",
                        "in": "query",
                        "description": "Filter number orders earlier than this value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter[phone_numbers.phone_number]",
                        "in": "query",
                        "description": "Filter number orders having these phone numbers",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter[customer_reference]",
                        "in": "query",
                        "description": "Filter number orders via the customer reference set",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter[requirements_met]",
                        "in": "query",
                        "description": "Filter number orders by requirements met",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/ListNumberOrdersResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                }
            },
            "post": {
                "summary": "Create Phone Number Order",
                "description": "Creates a Phone Number Order",
                "operationId": "createNumberOrder",
                "tags": [
                    "Number Orders"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NumberOrder"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CreateNumberOrderResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                },
                "callbacks": {
                    "numberOrderStatusUpdate": {
                        "{$request.body#/webhook_url}": {
                            "post": {
                                "requestBody": {
                                    "required": true,
                                    "content": {
                                        "application/json": {
                                            "schema": {
                                                "$ref": "#/components/schemas/NumberOrder"
                                            }
                                        }
                                    }
                                },
                                "responses": {
                                    "200": {
                                        "description": "The server must return a HTTP 200, otherwise we will reattempt to deliver the webhook to the failover url"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/number_orders/{number_order_id}": {
            "get": {
                "summary": "Get a single phone number order",
                "description": "Get an existing single phone number order",
                "operationId": "retrieveNumberOrder",
                "tags": [
                    "Number Orders"
                ],
                "parameters": [
                    {
                        "name": "number_order_id",
                        "in": "path",
                        "description": "The number order id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RetrieveNumberOrderResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                }
            },
            "patch": {
                "summary": "Update phone number order",
                "description": "Updates a Phone Number Order",
                "operationId": "updateNumberOrder",
                "tags": [
                    "Number Orders"
                ],
                "parameters": [
                    {
                        "name": "number_order_id",
                        "in": "path",
                        "description": "The number order id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NumberOrder"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/UpdateNumberOrderResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                }
            }
        },
        "/number_order_documents": {
            "get": {
                "summary": "Get Uploaded Number Order Documents",
                "description": "Gets a paginated list of Number Order Documents",
                "operationId": "listNumberOrderDocuments",
                "tags": [
                    "Number Order Documents"
                ],
                "parameters": [
                    {
                        "name": "filter[requirement_id]",
                        "in": "query",
                        "description": "Filter number order documents by requirement_id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter[created_at][gt]",
                        "in": "query",
                        "description": "Filter number order documents after this datetime",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter[created_at][lt]",
                        "in": "query",
                        "description": "Filter number order documents from before this datetime",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/ListNumberOrderDocumentsResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                }
            },
            "post": {
                "summary": "Upload Number Order Document",
                "description": "Upload a Phone Number Order Document",
                "operationId": "createNumberOrderDocument",
                "tags": [
                    "Number Order Documents"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NumberOrderDocument"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CreateNumberOrderDocumentResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                }
            }
        },
        "/number_order_documents/{number_order_document_id}": {
            "patch": {
                "summary": "Update Number Order Document",
                "description": "Updates a Number Order Document",
                "operationId": "updateNumberOrderDocument",
                "tags": [
                    "Number Order Documents"
                ],
                "parameters": [
                    {
                        "name": "number_order_document_id",
                        "in": "path",
                        "description": "The number order document id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NumberOrderDocument"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/UpdateNumberOrderDocumentResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                }
            },
            "get": {
                "summary": "Get a Single Number Order Document",
                "description": "Gets a single Number Order Document",
                "operationId": "retrieveNumberOrderDocument",
                "tags": [
                    "Number Order Documents"
                ],
                "parameters": [
                    {
                        "name": "number_order_document_id",
                        "in": "path",
                        "description": "The number order document id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RetrieveNumberOrderDocumentResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                }
            }
        },
        "/regulatory_requirements": {
            "get": {
                "summary": "Get list of Number Order Regulatory Requirements",
                "description": "Gets a paginated list of Number Order Regulatory Requirements",
                "operationId": "listNumberOrderRegulatoryRequirements",
                "tags": [
                    "Number Order Regulatory Requirements"
                ],
                "parameters": [
                    {
                        "name": "filter[requirement_id]",
                        "in": "query",
                        "description": "Filter number order regulatory requirements by requirement_id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter[field_type]",
                        "in": "query",
                        "description": "Filter number order regulatory requirements by field_type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter[requirement_type]",
                        "in": "query",
                        "description": "Filter number order regulatory requirements by requirement_type",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/ListNumberOrderRegulatoryRequirementsResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                }
            }
        },
        "/regulatory_requirements/{requirement_id}": {
            "get": {
                "summary": "Get Detailed Number Order Regulatory Requirement",
                "description": "Gets a single Number Order Regulatory Requirement",
                "operationId": "retrieveNumberOrderRegulatoryRequirement",
                "tags": [
                    "Number Order Regulatory Requirements"
                ],
                "parameters": [
                    {
                        "name": "requirement_id",
                        "in": "path",
                        "description": "The number order regulatory requirement id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RetrieveNumberOrderRegulatoryRequirementResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                }
            }
        },
        "/phone_number_regulatory_requirements": {
            "get": {
                "summary": "Get Regulatory Requirements Per Number",
                "description": "Gets a paginated list of Phone Number Regulatory Requirements",
                "operationId": "listPhoneNumberRegulatoryRequirements",
                "tags": [
                    "Number Order Regulatory Requirements"
                ],
                "parameters": [
                    {
                        "name": "filter[phone_number]",
                        "in": "query",
                        "description": "The list of phone numbers to retrieve regulatory requirements for",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/ListPhoneNumberRegulatoryRequirementsResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                }
            }
        },
        "/available_phone_numbers": {
            "get": {
                "summary": "List available phone numbers",
                "operationId": "listAvailablePhoneNumbers",
                "tags": [
                    "Number Search"
                ],
                "parameters": [
                    {
                        "name": "filter[phone_number][starts_with]",
                        "in": "query",
                        "description": "Filter numbers starting with a pattern (Meant to be used after national_destination_code filter has been set)",
                        "schema": {
                            "type": "string"
                        },
                        "examples": {
                            "generic": {
                                "value": "FOO",
                                "summary": "Find numbers starting with the prefix 'FREE'"
                            }
                        }
                    },
                    {
                        "name": "filter[phone_number][ends_with]",
                        "in": "query",
                        "description": "Filter numbers ending with a pattern",
                        "schema": {
                            "type": "string"
                        },
                        "examples": {
                            "generic": {
                                "value": "CALL",
                                "summary": "Find numbers ending with the suffix 'CALL'"
                            }
                        }
                    },
                    {
                        "name": "filter[phone_number][contains]",
                        "in": "query",
                        "description": "Filter numbers containing a pattern",
                        "schema": {
                            "type": "string"
                        },
                        "examples": {
                            "generic": {
                                "value": "TELNYX",
                                "summary": "Find numbers that contain the word 'TELNYX' in any position"
                            }
                        }
                    },
                    {
                        "name": "filter[locality]",
                        "in": "query",
                        "description": "Filter phone numbers by city",
                        "schema": {
                            "type": "string"
                        },
                        "examples": {
                            "US": {
                                "value": "Chicago"
                            },
                            "CA": {
                                "value": "Toronto"
                            },
                            "AU": {
                                "value": "Canberra"
                            }
                        }
                    },
                    {
                        "name": "filter[administrative_area]",
                        "in": "query",
                        "description": "Filter phone numbers by US state/CA province",
                        "schema": {
                            "type": "string",
                            "example": "IL"
                        }
                    },
                    {
                        "name": "filter[country_code]",
                        "in": "query",
                        "description": "Filter phone numbers by ISO 2 country code",
                        "schema": {
                            "type": "string",
                            "example": "US"
                        }
                    },
                    {
                        "name": "filter[national_destination_code]",
                        "in": "query",
                        "description": "Filter by the national destination code of the number. This filter is only applicable to North American numbers",
                        "schema": {
                            "type": "string"
                        },
                        "examples": {
                            "US": {
                                "value": "312"
                            },
                            "CA": {
                                "value": "437"
                            },
                            "AU": {
                                "value": "0251"
                            }
                        }
                    },
                    {
                        "name": "filter[rate_center]",
                        "in": "query",
                        "description": "Filter phone numbers by NANP rate center. This filter is only applicable to North American numbers",
                        "schema": {
                            "type": "string",
                            "example": "CHICAGO HEIGHTS"
                        }
                    },
                    {
                        "name": "filter[number_type]",
                        "in": "query",
                        "description": "Filter phone numbers by number type",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "toll-free",
                                "national",
                                "mobile",
                                "local"
                            ],
                            "example": "local"
                        }
                    },
                    {
                        "name": "filter[features]",
                        "in": "query",
                        "description": "Filter if the phone number should be used for voice, fax, mms, sms, emergency",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "sms",
                                    "mms",
                                    "voice",
                                    "fax",
                                    "emergency"
                                ]
                            },
                            "example": "voice,sms"
                        }
                    },
                    {
                        "name": "filter[limit]",
                        "in": "query",
                        "description": "Limits the number of results",
                        "schema": {
                            "type": "integer",
                            "example": 100
                        }
                    },
                    {
                        "name": "filter[best_effort]",
                        "in": "query",
                        "description": "Filter to determine if best effort results should be included.",
                        "schema": {
                            "type": "boolean",
                            "example": false
                        }
                    },
                    {
                        "name": "filter[quickship]",
                        "in": "query",
                        "description": "Filter to exclude phone numbers that need additional time after to purchase to receive phone calls.",
                        "schema": {
                            "type": "boolean",
                            "example": true
                        }
                    },
                    {
                        "name": "filter[reservable]",
                        "in": "query",
                        "description": "Filter to exclude phone numbers that cannot be reserved before purchase.",
                        "schema": {
                            "type": "boolean",
                            "example": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/ListAvailablePhoneNumbersResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                }
            }
        },
        "/phone_numbers": {
            "get": {
                "summary": "List all phone numbers",
                "operationId": "findPhoneNumbers",
                "tags": [
                    "Number Configurations"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/PageNumber"
                    },
                    {
                        "$ref": "#/components/parameters/PageSize"
                    },
                    {
                        "name": "filter[tag]",
                        "in": "query",
                        "description": "Filter by phone number tags",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter[phone_number]",
                        "in": "query",
                        "description": "Filter by phone number. Requires at least three digits.\n             Non-numerical characters will result in no values being returned.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter[status]",
                        "in": "query",
                        "description": "Filter by phone number status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "purchase_pending",
                                "purchase_failed",
                                "port_pending",
                                "active",
                                "deleted",
                                "port_failed",
                                "emergency_only",
                                "ported_out",
                                "port_out_pending"
                            ],
                            "example": "active"
                        }
                    },
                    {
                        "name": "filter[voice.connection_name][contains]",
                        "in": "query",
                        "description": "Filter contains connection name. Requires at least three characters",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "test"
                        }
                    },
                    {
                        "name": "filter[voice.connection_name][starts_with]",
                        "in": "query",
                        "description": "Filter starts with connection name. Requires at least three characters",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "test"
                        }
                    },
                    {
                        "name": "filter[voice.connection_name][ends_with]",
                        "in": "query",
                        "description": "Filter ends with connection name. Requires at least three characters",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "test"
                        }
                    },
                    {
                        "name": "filter[voice.connection_name][eq]",
                        "in": "query",
                        "description": "Filter by connection name",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "test"
                        }
                    },
                    {
                        "name": "filter[usage_payment_method]",
                        "in": "query",
                        "description": "Filter by usage_payment_method.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "pay-per-minute",
                                "channel"
                            ],
                            "example": "channel"
                        }
                    },
                    {
                        "name": "filter[billing_group_id]",
                        "in": "query",
                        "description": "Filter by the billing_group_id associated with phone numbers. To filter to only phone numbers that have no billing group associated them, set the value of this filter to the string 'null'.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "62e4bf2e-c278-4282-b524-488d9c9c43b2"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Specifies the sort order for results. If not given, results are sorted by created_at in descending order",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "purchased_at",
                                "phone_number",
                                "connection_name",
                                "usage_payment_method"
                            ],
                            "example": "connection_name"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/ListPhoneNumbersResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                }
            }
        },
        "/phone_numbers/{id}": {
            "get": {
                "summary": "Get the settings for a phone number",
                "operationId": "getPhoneNumber",
                "tags": [
                    "Number Configurations"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IntId"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RetrievePhoneNumberResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                }
            },
            "patch": {
                "summary": "Update the settings for a phone number",
                "operationId": "updatePhoneNumber",
                "tags": [
                    "Number Configurations"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IntId"
                    }
                ],
                "requestBody": {
                    "description": "Updated settings for the phone number",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PhoneNumberUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RetrievePhoneNumberResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                }
            },
            "delete": {
                "summary": "Delete a phone number",
                "operationId": "deletePhoneNumber",
                "tags": [
                    "Number Configurations"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IntId"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/DeletePhoneNumberResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                }
            }
        },
        "/phone_numbers/voice": {
            "get": {
                "summary": "List voice settings for multiple phone numbers",
                "operationId": "findPhoneNumberVoices",
                "tags": [
                    "Number Configurations"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/PageNumber"
                    },
                    {
                        "$ref": "#/components/parameters/PageSize"
                    },
                    {
                        "name": "filter[phone_number]",
                        "in": "query",
                        "description": "Filter by phone number. Requires at least three digits.\n             Non-numerical characters will result in no values being returned.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter[connection_name][contains]",
                        "in": "query",
                        "description": "Filter contains connection name. Requires at least three characters",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "test"
                        }
                    },
                    {
                        "name": "filter[usage_payment_method]",
                        "in": "query",
                        "description": "Filter by usage_payment_method.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "pay-per-minute",
                                "channel"
                            ],
                            "example": "channel"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Specifies the sort order for results. If not given, results are sorted by created_at in descending order",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "purchased_at",
                                "phone_number",
                                "connection_name",
                                "usage_payment_method"
                            ],
                            "example": "connection_name"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/ListPhoneNumberVoicesResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                }
            }
        },
        "/phone_numbers/{id}/voice": {
            "get": {
                "summary": "Get the voice settings for a phone number",
                "operationId": "retrievePhoneNumberVoice",
                "tags": [
                    "Number Configurations"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IntId"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RetrievePhoneNumberVoiceResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                }
            },
            "patch": {
                "summary": "Update the voice settings for a phone number",
                "operationId": "updatePhoneNumberVoice",
                "tags": [
                    "Number Configurations"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IntId"
                    }
                ],
                "requestBody": {
                    "description": "Updated voice settings for the phone number",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VoiceUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RetrievePhoneNumberVoiceResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                }
            }
        },
        "/phone_numbers/{id}/actions/enable_emergency": {
            "post": {
                "summary": "Enable emergency for a phone number",
                "operationId": "enableEmergencyPhoneNumber",
                "tags": [
                    "Number Configurations"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IntId"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PhoneNumberEnableEmergency"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Phone number emergency enabled.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Phone Number Enable Emergency",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/PhoneNumberVoice"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "Number emergency requested.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Phone Number Enable Emergency",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/PhoneNumberVoice"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                }
            }
        },
        "/phone_numbers/csv_downloads": {
            "get": {
                "summary": "List your submitted CSV download requests",
                "operationId": "findCsvDownloads",
                "tags": [
                    "CSV Downloads"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/PageNumber"
                    },
                    {
                        "$ref": "#/components/parameters/PageSize"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/ListCsvDownloadsResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                }
            },
            "post": {
                "x-latency-category": "background",
                "summary": "create a new CSV download request",
                "operationId": "createCsvDownload",
                "tags": [
                    "CSV Downloads"
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RetrieveCsvDownloadResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                }
            }
        },
        "/phone_numbers/csv_downloads/{id}": {
            "get": {
                "x-latency-category": "background",
                "summary": "Get a single submitted CSV download request.",
                "operationId": "retrieveCsvDownload",
                "tags": [
                    "CSV Downloads"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Identifies the CSV download.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RetrieveCsvDownloadResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/GenericErrorResponse"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer"
            }
        },
        "schemas": {
            "PaginationMeta": {
                "type": "object",
                "properties": {
                    "total_pages": {
                        "type": "integer",
                        "example": 3
                    },
                    "total_results": {
                        "type": "integer",
                        "example": 55
                    },
                    "page_number": {
                        "type": "integer",
                        "example": 2
                    },
                    "page_size": {
                        "type": "integer",
                        "example": 25
                    }
                }
            },
            "PaginationMetaSimple": {
                "type": "object",
                "properties": {
                    "page_number": {
                        "type": "integer",
                        "example": 2
                    },
                    "page_size": {
                        "type": "integer",
                        "example": 25
                    },
                    "total_pages": {
                        "type": "integer",
                        "example": 3
                    },
                    "total_results": {
                        "type": "integer",
                        "example": 55
                    }
                }
            },
            "Error": {
                "required": [
                    "code",
                    "title"
                ],
                "properties": {
                    "code": {
                        "type": "string",
                        "format": "integer"
                    },
                    "title": {
                        "type": "string"
                    },
                    "detail": {
                        "type": "string"
                    },
                    "source": {
                        "type": "object",
                        "properties": {
                            "pointer": {
                                "description": "JSON pointer (RFC6901) to the offending entity.",
                                "type": "string",
                                "format": "json-pointer"
                            },
                            "parameter": {
                                "description": "Indicates which query parameter caused the error.",
                                "type": "string"
                            }
                        }
                    },
                    "meta": {
                        "type": "object"
                    }
                }
            },
            "Errors": {
                "properties": {
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            },
            "MessagingFeatureSet": {
                "type": "object",
                "nullable": true,
                "default": null,
                "required": [
                    "domestic_two_way",
                    "international_inbound",
                    "international_outbound"
                ],
                "description": "The set of features available for a specific messaging use case (SMS or MMS). Features\ncan vary depending on the characteristics the phone number, as well as its current\nproduct configuration.\n",
                "properties": {
                    "domestic_two_way": {
                        "type": "boolean",
                        "description": "Send messages to and receive messages from numbers in the same country."
                    },
                    "international_inbound": {
                        "type": "boolean",
                        "description": "Receive messages from numbers in other countries."
                    },
                    "international_outbound": {
                        "type": "boolean",
                        "description": "Send messages to numbers in other countries."
                    }
                },
                "example": {
                    "domestic_two_way": true,
                    "international_inbound": false,
                    "international_outbound": true
                }
            },
            "NumberPoolSettings": {
                "type": "object",
                "nullable": true,
                "default": null,
                "required": [
                    "toll_free_weight",
                    "long_code_weight",
                    "skip_unhealthy"
                ],
                "description": "Number Pool allows you to send messages from a pool of numbers of different types, assigning\nweights to each type. The pool consists of all the long code and toll free numbers\nassigned to the messaging profile.\n\nTo disable this feature, set the object field to `null`.\n",
                "properties": {
                    "toll_free_weight": {
                        "type": "number",
                        "example": 10,
                        "description": "Defines the probability weight for a Toll Free number to be selected when sending a message.\nThe higher the weight the higher the probability. The sum of the weights for all number types\ndoes not necessarily need to add to 100. Weight must be a non-negative number, and when equal\nto zero it will remove the number type from the pool.\n"
                    },
                    "long_code_weight": {
                        "type": "number",
                        "example": 1,
                        "description": "Defines the probability weight for a Long Code number to be selected when sending a message.\nThe higher the weight the higher the probability. The sum of the weights for all number types\ndoes not necessarily need to add to 100.  Weight must be a non-negative number, and when equal\nto zero it will remove the number type from the pool.\n"
                    },
                    "skip_unhealthy": {
                        "type": "boolean",
                        "example": true,
                        "description": "If set to true all unhealthy numbers will be automatically excluded from the pool.\nHealth metrics per number are calculated on a regular basis, taking into account the deliverability\nrate and the amount of messages marked as spam by upstream carriers.\nNumbers with a deliverability rate below 25% or spam ratio over 75% will be considered unhealthy.\n"
                    },
                    "sticky_sender": {
                        "type": "boolean",
                        "default": false,
                        "description": "If set to true, Number Pool will try to choose the same sending number for all messages to a particular\nrecipient. If the sending number becomes unhealthy and `skip_unhealthy` is set to true, a new\nnumber will be chosen.\n"
                    },
                    "geomatch": {
                        "type": "boolean",
                        "default": false,
                        "description": "If set to true, Number Pool will try to choose a sending number with the same area code as the destination\nnumber. If there are no such numbers available, a nunber with a different area code will be chosen. Currently\nonly NANP numbers are supported.\n"
                    }
                },
                "example": {
                    "toll_free_weight": 10,
                    "long_code_weight": 1,
                    "skip_unhealthy": true,
                    "sticky_sender": false,
                    "geomatch": false
                }
            },
            "UrlShortenerSettings": {
                "type": "object",
                "nullable": true,
                "default": null,
                "required": [
                    "domain"
                ],
                "description": "The URL shortener feature allows automatic replacement of URLs that were generated using\na public URL shortener service. Some examples include bit.do, bit.ly, goo.gl, ht.ly,\nis.gd, ow.ly, rebrand.ly, t.co, tiny.cc, and tinyurl.com. Such URLs are replaced with\nwith links generated by Telnyx. The use of custom links can improve branding and message\ndeliverability.\n\nTo disable this feature, set the object field to `null`.\n",
                "properties": {
                    "domain": {
                        "type": "string",
                        "example": "acct.fyi",
                        "description": "One of the domains provided by the Telnyx URL shortener service.\n"
                    },
                    "prefix": {
                        "type": "string",
                        "example": "",
                        "description": "Optional prefix that can be used to identify your brand, and will appear in the Telnyx generated URLs after the domain name.\n"
                    },
                    "replace_blacklist_only": {
                        "type": "boolean",
                        "example": true,
                        "description": "Use the link replacement tool only for links that are specifically blacklisted by Telnyx.\n"
                    },
                    "send_webhooks": {
                        "type": "boolean",
                        "example": false,
                        "description": "Receive webhooks for when your replaced links are clicked. Webhooks are sent to the webhooks on the messaging profile.\n"
                    }
                },
                "example": {
                    "domain": "example.ex",
                    "prefix": "",
                    "replace_blacklist_only": true,
                    "send_webhooks": false
                }
            },
            "ShortCodeInfo": {
                "description": "This information is attached to messages that are sent from short codes. It includes carrier information, which can influence billing.",
                "properties": {
                    "record_type": {
                        "type": "string",
                        "example": "short_code_info_blob",
                        "enum": [
                            "short_code_info_blob"
                        ],
                        "description": "Identifies the type of the resource."
                    },
                    "om_carrier": {
                        "type": "string"
                    },
                    "om_normalized_carrier": {
                        "type": "string"
                    }
                },
                "example": {
                    "record_type": "short_code",
                    "om_carrier": "carrier",
                    "om_normalized_carrier": "normalized_carrier"
                }
            },
            "NumberHealthMetrics": {
                "type": "object",
                "nullable": false,
                "required": [
                    "message_count",
                    "inbound_outbound_ratio",
                    "success_ratio",
                    "spam_ratio"
                ],
                "description": "High level health metrics about the number and it's messaging sending patterns.\n",
                "properties": {
                    "message_count": {
                        "type": "integer",
                        "description": "The number of messages analyzed for the health metrics."
                    },
                    "inbound_outbound_ratio": {
                        "type": "number",
                        "format": "float",
                        "description": "The ratio of messages received to the number of messages sent."
                    },
                    "success_ratio": {
                        "type": "number",
                        "format": "float",
                        "description": "The ratio of messages sucessfully delivered to the number of messages attempted."
                    },
                    "spam_ratio": {
                        "type": "number",
                        "format": "float",
                        "description": "The ratio of messages blocked for spam to the number of messages attempted."
                    }
                },
                "example": {
                    "message_count": 10,
                    "inbound_outbound_ratio": 1,
                    "success_ratio": 2,
                    "spam_ratio": 10
                }
            },
            "NewMessagingProfile": {
                "type": "object",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "description": "A user friendly name for the messaging profile.",
                        "type": "string"
                    },
                    "enabled": {
                        "description": "Specifies whether the messaging profile is enabled or not.",
                        "type": "boolean",
                        "default": true
                    },
                    "webhook_url": {
                        "description": "The URL where webhooks related to this messaging profile will be sent.",
                        "type": "string",
                        "format": "url",
                        "default": "",
                        "nullable": true
                    },
                    "webhook_failover_url": {
                        "description": "The failover URL where webhooks related to this messaging profile will be sent if sending to the primary URL fails.",
                        "type": "string",
                        "format": "url",
                        "default": "",
                        "nullable": true
                    },
                    "webhook_api_version": {
                        "description": "Determines which webhook format will be used, Telnyx API v1, v2, or a legacy 2010-04-01 format.",
                        "type": "string",
                        "enum": [
                            "1",
                            "2",
                            "2010-04-01"
                        ],
                        "default": "2"
                    },
                    "number_pool_settings": {
                        "$ref": "#/components/schemas/NumberPoolSettings"
                    },
                    "url_shortener_settings": {
                        "$ref": "#/components/schemas/UrlShortenerSettings"
                    }
                },
                "example": {
                    "name": "My name",
                    "enabled": true,
                    "webhook_url": "https://www.example.com/hooks",
                    "webhook_failover_url": "https://backup.example.com/hooks",
                    "webhook_api_version": "2",
                    "number_pool_settings": {
                        "toll_free_weight": 10,
                        "long_code_weight": 1,
                        "skip_unhealthy": true,
                        "sticky_sender": false,
                        "geomatch": false
                    },
                    "url_shortener_settings": {
                        "domain": "example.ex",
                        "prefix": "",
                        "replace_blacklist_only": true,
                        "send_webhooks": false
                    }
                }
            },
            "UpdatedMessagingProfile": {
                "type": "object",
                "properties": {
                    "record_type": {
                        "description": "Identifies the type of the resource.",
                        "type": "string",
                        "enum": [
                            "messaging_profile"
                        ],
                        "readOnly": true
                    },
                    "id": {
                        "description": "Identifies the type of resource.",
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "name": {
                        "description": "A user friendly name for the messaging profile.",
                        "type": "string"
                    },
                    "enabled": {
                        "description": "Specifies whether the messaging profile is enabled or not.",
                        "type": "boolean"
                    },
                    "webhook_url": {
                        "description": "The URL where webhooks related to this messaging profile will be sent.",
                        "type": "string",
                        "format": "url",
                        "nullable": true
                    },
                    "webhook_failover_url": {
                        "description": "The failover URL where webhooks related to this messaging profile will be sent if sending to the primary URL fails.",
                        "type": "string",
                        "format": "url",
                        "nullable": true
                    },
                    "webhook_api_version": {
                        "description": "Determines which webhook format will be used, Telnyx API v1, v2, or a legacy 2010-04-01 format.",
                        "type": "string",
                        "enum": [
                            "1",
                            "2",
                            "2010-04-01"
                        ]
                    },
                    "whitelisted_destinations": {
                        "description": "Destinations to which the messaging profile is allowed to send. If set to `null`, all destinations will be allowed. Setting a value of `[\"*\"]` has the equivalent effect. The elements in the list must be valid ISO 3166-1 alpha-2 country codes.",
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "description": "ISO 3166-1 alpha-2 country code.",
                            "type": "string",
                            "pattern": "^[A-Z]{2}$"
                        }
                    },
                    "created_at": {
                        "description": "ISO 8601 formatted date indicating when the resource was created.",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "description": "ISO 8601 formatted date indicating when the resource was updated.",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "v1_secret": {
                        "description": "Secret used to authenticate with v1 endpoints.",
                        "type": "string"
                    },
                    "number_pool_settings": {
                        "$ref": "#/components/schemas/NumberPoolSettings"
                    },
                    "url_shortener_settings": {
                        "$ref": "#/components/schemas/UrlShortenerSettings"
                    }
                },
                "example": {
                    "name": "Updated Profile for Messages",
                    "webhook_url": "https://www.example.com/hooks",
                    "webhook_failover_url": "https://backup.example.com/hooks",
                    "enabled": true,
                    "webhook_api_version": "2",
                    "whitelisted_destinations": [
                        "US"
                    ],
                    "number_pool_settings": {
                        "toll_free_weight": 10,
                        "long_code_weight": 2,
                        "skip_unhealthy": false,
                        "sticky_sender": true,
                        "geomatch": false
                    },
                    "url_shortener_settings": {
                        "domain": "example.ex",
                        "prefix": "cmpny",
                        "replace_blacklist_only": true,
                        "send_webhooks": false
                    },
                    "v1_secret": "rP1VamejkU2v0qIUxntqLW2c"
                }
            },
            "MessagingProfile": {
                "type": "object",
                "properties": {
                    "record_type": {
                        "description": "Identifies the type of the resource.",
                        "type": "string",
                        "enum": [
                            "messaging_profile"
                        ],
                        "readOnly": true
                    },
                    "id": {
                        "description": "Identifies the type of resource.",
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "name": {
                        "description": "A user friendly name for the messaging profile.",
                        "type": "string"
                    },
                    "enabled": {
                        "description": "Specifies whether the messaging profile is enabled or not.",
                        "type": "boolean"
                    },
                    "webhook_url": {
                        "description": "The URL where webhooks related to this messaging profile will be sent.",
                        "type": "string",
                        "format": "url",
                        "nullable": true
                    },
                    "webhook_failover_url": {
                        "description": "The failover URL where webhooks related to this messaging profile will be sent if sending to the primary URL fails.",
                        "type": "string",
                        "format": "url",
                        "nullable": true
                    },
                    "webhook_api_version": {
                        "description": "Determines which webhook format will be used, Telnyx API v1, v2, or a legacy 2010-04-01 format.",
                        "type": "string",
                        "enum": [
                            "1",
                            "2",
                            "2010-04-01"
                        ]
                    },
                    "whitelisted_destinations": {
                        "description": "Destinations to which the messaging profile is allowed to send. If set to `null`, all destinations will be allowed. Setting a value of `[\"*\"]` has the equivalent effect. The elements in the list must be valid ISO 3166-1 alpha-2 country codes.",
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "description": "ISO 3166-1 alpha-2 country code.",
                            "type": "string",
                            "pattern": "^[A-Z]{2}$"
                        }
                    },
                    "created_at": {
                        "description": "ISO 8601 formatted date indicating when the resource was created.",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "description": "ISO 8601 formatted date indicating when the resource was updated.",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "v1_secret": {
                        "description": "Secret used to authenticate with v1 endpoints.",
                        "type": "string"
                    },
                    "number_pool_settings": {
                        "$ref": "#/components/schemas/NumberPoolSettings"
                    },
                    "url_shortener_settings": {
                        "$ref": "#/components/schemas/UrlShortenerSettings"
                    }
                },
                "example": {
                    "record_type": "messaging_profile",
                    "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "name": "Profile for Messages",
                    "webhook_url": "https://www.example.com/hooks",
                    "webhook_failover_url": "https://backup.example.com/hooks",
                    "enabled": true,
                    "webhook_api_version": "2",
                    "whitelisted_destinations": [
                        "US"
                    ],
                    "created_at": "2019-01-23T18:10:02.574Z",
                    "updated_at": "2019-01-23T18:10:02.574Z",
                    "number_pool_settings": {
                        "toll_free_weight": 10,
                        "long_code_weight": 2,
                        "skip_unhealthy": false,
                        "sticky_sender": true,
                        "geomatch": false
                    },
                    "url_shortener_settings": {
                        "domain": "example.ex",
                        "prefix": "cmpny",
                        "replace_blacklist_only": true,
                        "send_webhooks": false
                    },
                    "v1_secret": "rP1VamejkU2v0qIUxntqLW2c"
                }
            },
            "MessagingUrlDomain": {
                "type": "object",
                "properties": {
                    "record_type": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "url_domain": {
                        "type": "string"
                    },
                    "use_case": {
                        "type": "string"
                    }
                },
                "example": {
                    "record_type": "messaging_url_domain",
                    "id": "464bd54e-a328-4b11-a131-28e6793cb6f2",
                    "url_domain": "http://example.com",
                    "use_case": "test"
                }
            },
            "MessagingPhoneNumber": {
                "type": "object",
                "example": {
                    "record_type": "messaging_phone_number",
                    "id": "+18665550001",
                    "phone_number": "+18005550001",
                    "messaging_profile_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "created_at": "2019-01-23T18:10:02.574Z",
                    "updated_at": "2019-01-23T18:10:02.574Z",
                    "country_code": "US",
                    "type": "toll-free",
                    "health": {
                        "message_count": 122,
                        "inbound_outbound_ratio": 0.43,
                        "success_ratio": 0.94,
                        "spam_ratio": 0.06
                    },
                    "eligible_messaging_products": [
                        "A2P"
                    ],
                    "traffic_type": "A2P",
                    "messaging_product": "A2P",
                    "features": {
                        "sms": {
                            "domestic_two_way": true,
                            "international_inbound": true,
                            "international_outbound": true
                        },
                        "mms": null
                    }
                },
                "properties": {
                    "record_type": {
                        "type": "string",
                        "example": "messaging_phone_number",
                        "enum": [
                            "messaging_phone_number"
                        ],
                        "description": "Identifies the type of the resource.",
                        "readOnly": true
                    },
                    "id": {
                        "type": "string",
                        "description": "Identifies the type of resource.",
                        "readOnly": true
                    },
                    "phone_number": {
                        "type": "string",
                        "format": "e164",
                        "description": "+E.164 formatted phone number.",
                        "readOnly": true
                    },
                    "messaging_profile_id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "Unique identifier for a messaging profile."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "ISO 8601 formatted date indicating when the resource was created.",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "ISO 8601 formatted date indicating when the resource was updated.",
                        "readOnly": true
                    },
                    "country_code": {
                        "type": "string",
                        "description": "ISO 3166-1 alpha-2 country code.",
                        "pattern": "^[A-Z]{2}$",
                        "example": "US",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the phone number",
                        "enum": [
                            "long-code",
                            "toll-free",
                            "short-code"
                        ],
                        "readOnly": true
                    },
                    "health": {
                        "$ref": "#/components/schemas/NumberHealthMetrics"
                    },
                    "eligible_messaging_products": {
                        "type": "array",
                        "description": "The messaging products that this number can be registered to use",
                        "readOnly": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "traffic_type": {
                        "type": "string",
                        "description": "The messaging traffic or use case for which the number is currently configured.",
                        "example": "P2P",
                        "readOnly": true
                    },
                    "messaging_product": {
                        "type": "string",
                        "description": "The messaging product that the number is registered to use",
                        "example": "P2P"
                    },
                    "features": {
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                            "sms": {
                                "$ref": "#/components/schemas/MessagingFeatureSet"
                            },
                            "mms": {
                                "$ref": "#/components/schemas/MessagingFeatureSet"
                            }
                        }
                    }
                }
            },
            "MessagingSettings": {
                "type": "object",
                "example": {
                    "record_type": "messaging_settings",
                    "id": "1293384261075731499",
                    "phone_number": "+18005550001",
                    "messaging_profile_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "created_at": "2019-01-23T18:10:02.574Z",
                    "updated_at": "2019-01-23T18:10:02.574Z",
                    "country_code": "US",
                    "type": "toll-free",
                    "health": {
                        "message_count": 122,
                        "inbound_outbound_ratio": 0.43,
                        "success_ratio": 0.94,
                        "spam_ratio": 0.06
                    },
                    "eligible_messaging_products": [
                        "A2P"
                    ],
                    "traffic_type": "A2P",
                    "messaging_product": "A2P",
                    "features": {
                        "sms": {
                            "domestic_two_way": true,
                            "international_inbound": true,
                            "international_outbound": true
                        },
                        "mms": null
                    }
                },
                "properties": {
                    "record_type": {
                        "type": "string",
                        "example": "messaging_phone_number",
                        "enum": [
                            "messaging_phone_number"
                        ],
                        "description": "Identifies the type of the resource.",
                        "readOnly": true
                    },
                    "id": {
                        "type": "string",
                        "description": "Identifies the type of resource.",
                        "readOnly": true
                    },
                    "phone_number": {
                        "type": "string",
                        "format": "e164",
                        "description": "+E.164 formatted phone number.",
                        "readOnly": true
                    },
                    "messaging_profile_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "Unique identifier for a messaging profile."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "ISO 8601 formatted date indicating when the resource was created.",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "ISO 8601 formatted date indicating when the resource was updated.",
                        "readOnly": true
                    },
                    "country_code": {
                        "type": "string",
                        "description": "ISO 3166-1 alpha-2 country code.",
                        "pattern": "^[A-Z]{2}$",
                        "example": "US",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the phone number",
                        "enum": [
                            "long-code",
                            "toll-free",
                            "short-code"
                        ],
                        "readOnly": true
                    },
                    "health": {
                        "$ref": "#/components/schemas/NumberHealthMetrics"
                    },
                    "eligible_messaging_products": {
                        "type": "array",
                        "description": "The messaging products that this number can be registered to use",
                        "readOnly": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "traffic_type": {
                        "type": "string",
                        "description": "The messaging traffic or use case for which the number is currently configured.",
                        "example": "P2P",
                        "readOnly": true
                    },
                    "messaging_product": {
                        "type": "string",
                        "description": "The messaging product that the number is registered to use",
                        "example": "P2P"
                    },
                    "features": {
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                            "sms": {
                                "$ref": "#/components/schemas/MessagingFeatureSet"
                            },
                            "mms": {
                                "$ref": "#/components/schemas/MessagingFeatureSet"
                            }
                        }
                    }
                }
            },
            "MessagingProfileMessageTypeMetrics": {
                "type": "object",
                "example": {
                    "label": "longcode",
                    "sent": 1000,
                    "delivered": 990,
                    "errors": 0.01,
                    "received": 750
                },
                "properties": {
                    "label": {
                        "type": "string",
                        "description": "The metric type.",
                        "readOnly": true
                    },
                    "sent": {
                        "type": "number",
                        "description": "The number of outbound messages sent.",
                        "readOnly": true
                    },
                    "delivered": {
                        "type": "number",
                        "description": "The number of outbound messages successfully delivered.",
                        "readOnly": true
                    },
                    "outbound_error_ratio": {
                        "type": "number",
                        "description": "The ratio of outbound messages sent that resulted in errors.",
                        "readOnly": true
                    },
                    "received": {
                        "type": "number",
                        "description": "The number of inbound messages received.",
                        "readOnly": true
                    }
                }
            },
            "MessagingProfileDetailedMetric": {
                "type": "object",
                "properties": {
                    "timestamp": {
                        "type": "string",
                        "description": "The timestamp of the aggregated data.",
                        "example": "2019-01-23T18:10:02.574Z",
                        "readOnly": true
                    },
                    "metrics": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MessagingProfileMessageTypeMetrics"
                        }
                    }
                }
            },
            "MessagingProfileDetailedMetrics": {
                "type": "object",
                "properties": {
                    "overview": {
                        "$ref": "#/components/schemas/MessagingProfileHighLevelMetrics"
                    },
                    "detailed": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MessagingProfileDetailedMetric"
                        }
                    }
                }
            },
            "MessagingProfileHighLevelMetrics": {
                "type": "object",
                "example": {
                    "record_type": "messaging_profile_metrics",
                    "messaging_profile_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "phone_numbers": 250,
                    "outbound": {
                        "sent": 1000,
                        "delivered": 990,
                        "errors": 0.01
                    },
                    "inbound": {
                        "received": 850
                    }
                },
                "properties": {
                    "record_type": {
                        "type": "string",
                        "example": "messaging_profile_metrics",
                        "enum": [
                            "messaging_profile_metrics"
                        ],
                        "description": "Identifies the type of the resource.",
                        "readOnly": true
                    },
                    "messaging_profile_id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Identifies the type of resource.",
                        "readOnly": true
                    },
                    "phone_numbers": {
                        "type": "number",
                        "description": "The number of phone numbers associated with the messaging profile.",
                        "readOnly": true
                    },
                    "outbound": {
                        "type": "object",
                        "properties": {
                            "sent": {
                                "type": "number",
                                "description": "The number of outbound messages sent.",
                                "readOnly": true
                            },
                            "delivered": {
                                "type": "number",
                                "description": "The number of outbound messages successfully delivered.",
                                "readOnly": true
                            },
                            "error_ratio": {
                                "type": "number",
                                "description": "The ratio of messages sent that resulted in errors.",
                                "readOnly": true
                            }
                        }
                    },
                    "inbound": {
                        "type": "object",
                        "properties": {
                            "received": {
                                "type": "number",
                                "description": "The number of inbound messages received.",
                                "readOnly": true
                            }
                        }
                    }
                }
            },
            "MessagingPhoneNumberUpdate": {
                "type": "object",
                "properties": {
                    "messaging_profile_id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Unique identifier for a messaging profile."
                    },
                    "messaging_product": {
                        "type": "string",
                        "description": "The requested messaging product the number should be on",
                        "example": "P2P"
                    }
                },
                "example": {
                    "messaging_profile_id": "dd50eba1-a0c0-4563-9925-b25e842a7cb6",
                    "messaging_product": "P2P"
                }
            },
            "ShortCode": {
                "type": "object",
                "required": [
                    "messaging_profile_id"
                ],
                "example": {
                    "record_type": "short_code",
                    "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "short_code": "12345",
                    "country_code": "US",
                    "messaging_profile_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "created_at": "2019-01-23T18:10:02.574Z",
                    "updated_at": "2019-01-23T18:10:02.574Z"
                },
                "properties": {
                    "record_type": {
                        "type": "string",
                        "example": "short_code",
                        "enum": [
                            "short_code"
                        ],
                        "description": "Identifies the type of the resource.",
                        "readOnly": true
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Identifies the type of resource.",
                        "readOnly": true
                    },
                    "short_code": {
                        "type": "string",
                        "description": "Short digit sequence used to address messages.",
                        "readOnly": true
                    },
                    "country_code": {
                        "type": "string",
                        "description": "ISO 3166-1 alpha-2 country code.",
                        "pattern": "^[A-Z]{2}$",
                        "example": "US",
                        "readOnly": true
                    },
                    "messaging_profile_id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "Unique identifier for a messaging profile."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "ISO 8601 formatted date indicating when the resource was created.",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "ISO 8601 formatted date indicating when the resource was updated.",
                        "readOnly": true
                    }
                }
            },
            "ShortCodeUpdate": {
                "type": "object",
                "required": [
                    "messaging_profile_id"
                ],
                "properties": {
                    "messaging_profile_id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Unique identifier for a messaging profile."
                    }
                },
                "example": {
                    "messaging_profile_id": "abc85f64-5717-4562-b3fc-2c9600000000"
                }
            },
            "NewMessagingHostedNumberOrder": {
                "type": "object",
                "example": {
                    "messaging_profile_id": "dc8f39ac-953d-4520-b93b-786ae87db0da",
                    "phone_numbers": [
                        "+18665550001",
                        "+18665550002"
                    ]
                },
                "properties": {
                    "phone_numbers": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "+E.164"
                        },
                        "description": "Phone numbers to be used for hosted messaging."
                    },
                    "messaging_profile_id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Automatically associate the number with this messaging profile ID when the order is complete."
                    }
                }
            },
            "NewMessagingHostedNumberOrderFileUpload": {
                "type": "object",
                "example": {
                    "loa": "example loa",
                    "bill": "bill example"
                },
                "properties": {
                    "loa": {
                        "type": "string",
                        "format": "binary",
                        "description": "Must be a signed LOA for the numbers in the order in PDF format."
                    },
                    "bill": {
                        "type": "string",
                        "format": "binary",
                        "description": "Must be the last month's bill with proof of ownership of all of the numbers in the order in PDF format."
                    }
                }
            },
            "MessagingHostedNumberOrder": {
                "type": "object",
                "example": {
                    "id": "86f58db9-0fe3-4adc-9d1f-46e66e6e9323",
                    "record_type": "messaging_hosted_number_order",
                    "profile_id": "dc8f39ac-953d-4520-b93b-786ae87db0da",
                    "status": "pending",
                    "phone_numbers": [
                        {
                            "record_type": "messaging_hosted_number",
                            "id": "bf6307bd-884d-4c1f-b6ea-c62b8c495d3c",
                            "phone_number": "+18665550001",
                            "status": "pending"
                        },
                        {
                            "record_type": "messaging_hosted_number",
                            "id": "464bd54e-a328-4b11-a131-28e6793cb6f2",
                            "phone_number": "+18665550002",
                            "status": "pending"
                        }
                    ]
                },
                "properties": {
                    "record_type": {
                        "type": "string",
                        "example": "messaging_hosted_number_order",
                        "description": "Identifies the type of the resource.",
                        "readOnly": true
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Resource unique identifier.",
                        "readOnly": true
                    },
                    "messaging_profile_id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "Automatically associate the number with this messaging profile ID when the order is complete."
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "failed",
                            "pending",
                            "successful"
                        ]
                    },
                    "phone_numbers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/HostedNumber"
                        }
                    }
                }
            },
            "HostedNumber": {
                "example": [
                    {
                        "record_type": "messaging_hosted_number",
                        "id": "bf6307bd-884d-4c1f-b6ea-c62b8c495d3c",
                        "phone_number": "+18665550001",
                        "status": "successful"
                    }
                ],
                "type": "object",
                "properties": {
                    "record_type": {
                        "type": "string",
                        "example": "messaging_hosted_number"
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Identifies the type of resource.",
                        "readOnly": true
                    },
                    "phone_number": {
                        "type": "string",
                        "format": "+E.164",
                        "description": "The messaging hosted phone number (+E.164 format)"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "deleted",
                            "failed",
                            "pending",
                            "successful"
                        ]
                    }
                }
            },
            "NewMessage": {
                "type": "object",
                "required": [
                    "to"
                ],
                "properties": {
                    "from": {
                        "type": "string",
                        "format": "address",
                        "description": "Sending address (+E.164 formatted phone number, alphanumeric sender ID, or short code).\n\n**Required if sending with a phone number, short code, or alphanumeric sender ID.**\n"
                    },
                    "messaging_profile_id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Unique identifier for a messaging profile.\n\n**Required if sending via number pool or with an alphanumeric sender ID.**\n"
                    },
                    "to": {
                        "type": "string",
                        "format": "address",
                        "description": "Receiving address (+E.164 formatted phone number or short code)."
                    },
                    "text": {
                        "type": "string",
                        "description": "Message body (i.e., content) as a non-empty string.\n\n**Required for SMS**"
                    },
                    "subject": {
                        "type": "string",
                        "description": "Subject of multimedia message"
                    },
                    "media_urls": {
                        "description": "A list of media URLs. The total media size must be less than 1 MB.\n\n**Required for MMS**",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "url"
                        }
                    },
                    "webhook_url": {
                        "description": "The URL where webhooks related to this message will be sent.",
                        "type": "string",
                        "format": "url"
                    },
                    "webhook_failover_url": {
                        "description": "The failover URL where webhooks related to this message will be sent if sending to the primary URL fails.",
                        "type": "string",
                        "format": "url"
                    },
                    "use_profile_webhooks": {
                        "type": "boolean",
                        "description": "If the profile this number is associated with has webhooks, use them for delivery notifications. If webhooks are also specified on the message itself, they will be attempted first, then those on the profile.",
                        "default": true
                    }
                },
                "example": {
                    "from": "+18445550001",
                    "messaging_profile_id": "abc85f64-5717-4562-b3fc-2c9600000000",
                    "to": "+18445550001",
                    "text": "Hello, World!",
                    "subject": "From Telnyx!",
                    "media_urls": [
                        "http://example.com"
                    ],
                    "webhook_url": "http://example.com/webhooks",
                    "webhook_failover_url": "https://backup.example.com/hooks",
                    "use_profile_webhooks": true
                }
            },
            "NewLongCodeMessage": {
                "type": "object",
                "required": [
                    "from",
                    "to"
                ],
                "properties": {
                    "from": {
                        "type": "string",
                        "format": "address",
                        "description": "Phone number, in +E.164 format, used to send the message."
                    },
                    "to": {
                        "type": "string",
                        "format": "address",
                        "description": "Receiving address (+E.164 formatted phone number or short code)."
                    },
                    "text": {
                        "type": "string",
                        "description": "Message body (i.e., content) as a non-empty string.\n\n**Required for SMS**"
                    },
                    "subject": {
                        "type": "string",
                        "description": "Subject of multimedia message"
                    },
                    "media_urls": {
                        "description": "A list of media URLs. The total media size must be less than 1 MB.\n\n**Required for MMS**",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "url"
                        }
                    },
                    "webhook_url": {
                        "description": "The URL where webhooks related to this message will be sent.",
                        "type": "string",
                        "format": "url"
                    },
                    "webhook_failover_url": {
                        "description": "The failover URL where webhooks related to this message will be sent if sending to the primary URL fails.",
                        "type": "string",
                        "format": "url"
                    },
                    "use_profile_webhooks": {
                        "type": "boolean",
                        "description": "If the profile this number is associated with has webhooks, use them for delivery notifications. If webhooks are also specified on the message itself, they will be attempted first, then those on the profile.",
                        "default": true
                    }
                },
                "example": {
                    "from": "+18445550001",
                    "messaging_profile_id": "abc85f64-5717-4562-b3fc-2c9600000000",
                    "to": "telnyx",
                    "text": "Hello, World!",
                    "subject": "From Telnyx!",
                    "media_urls": [
                        "http://example.com"
                    ],
                    "webhook_url": "http://example.com/webhooks",
                    "webhook_failover_url": "https://backup.example.com/hooks",
                    "use_profile_webhooks": true
                }
            },
            "NewNumberPoolMessage": {
                "type": "object",
                "required": [
                    "to",
                    "messaging_profile_id"
                ],
                "properties": {
                    "messaging_profile_id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Unique identifier for a messaging profile."
                    },
                    "to": {
                        "type": "string",
                        "format": "address",
                        "description": "Receiving address (+E.164 formatted phone number.)"
                    },
                    "text": {
                        "type": "string",
                        "description": "Message body (i.e., content) as a non-empty string.\n\n**Required for SMS**"
                    },
                    "subject": {
                        "type": "string",
                        "description": "Subject of multimedia message"
                    },
                    "media_urls": {
                        "description": "A list of media URLs. The total media size must be less than 1 MB.\n\n**Required for MMS**",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "url"
                        }
                    },
                    "webhook_url": {
                        "description": "The URL where webhooks related to this message will be sent.",
                        "type": "string",
                        "format": "url"
                    },
                    "webhook_failover_url": {
                        "description": "The failover URL where webhooks related to this message will be sent if sending to the primary URL fails.",
                        "type": "string",
                        "format": "url"
                    },
                    "use_profile_webhooks": {
                        "type": "boolean",
                        "description": "If the profile this number is associated with has webhooks, use them for delivery notifications. If webhooks are also specified on the message itself, they will be attempted first, then those on the profile.",
                        "default": true
                    }
                },
                "example": {
                    "from": "+18445550001",
                    "messaging_profile_id": "abc85f64-5717-4562-b3fc-2c9600000000",
                    "to": "Telnyx",
                    "text": "Hello, World!",
                    "subject": "From Telnyx!",
                    "media_urls": [
                        "http://example.com"
                    ],
                    "webhook_url": "http://example.com/webhooks",
                    "webhook_failover_url": "https://backup.example.com/hooks",
                    "use_profile_webhooks": true
                }
            },
            "NewShortCodeMessage": {
                "type": "object",
                "required": [
                    "from",
                    "to"
                ],
                "properties": {
                    "from": {
                        "type": "string",
                        "format": "address",
                        "description": "Phone number, in +E.164 format, used to send the message."
                    },
                    "to": {
                        "type": "string",
                        "format": "address",
                        "description": "Receiving short code."
                    },
                    "text": {
                        "type": "string",
                        "description": "Message body (i.e., content) as a non-empty string.\n\n**Required for SMS**"
                    },
                    "subject": {
                        "type": "string",
                        "description": "Subject of multimedia message"
                    },
                    "media_urls": {
                        "description": "A list of media URLs. The total media size must be less than 1 MB.\n\n**Required for MMS**",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "url"
                        }
                    },
                    "webhook_url": {
                        "description": "The URL where webhooks related to this message will be sent.",
                        "type": "string",
                        "format": "url",
                        "default": ""
                    },
                    "webhook_failover_url": {
                        "description": "The failover URL where webhooks related to this message will be sent if sending to the primary URL fails.",
                        "type": "string",
                        "format": "url",
                        "default": ""
                    },
                    "use_profile_webhooks": {
                        "type": "boolean",
                        "description": "If the profile this number is associated with has webhooks, use them for delivery notifications. If webhooks are also specified on the message itself, they will be attempted first, then those on the profile.",
                        "default": true
                    }
                },
                "example": {
                    "from": "+18445550001",
                    "messaging_profile_id": "abc85f64-5717-4562-b3fc-2c9600000000",
                    "to": "+18445550001",
                    "text": "Hello, World!",
                    "subject": "From Telnyx!",
                    "media_urls": [
                        "http://example.com"
                    ],
                    "webhook_url": "http://example.com/webhooks",
                    "webhook_failover_url": "https://backup.example.com/hooks",
                    "use_profile_webhooks": true
                }
            },
            "MessageQueueInfo": {
                "type": "object",
                "properties": {
                    "queue_lengths": {
                        "description": "Approximate lengths of the user's queues",
                        "type": "object",
                        "properties": {
                            "account": {
                                "type": "integer",
                                "description": "Length of the account queue."
                            },
                            "messaging_profile": {
                                "type": "integer",
                                "description": "Length of the messaging profile queue."
                            },
                            "phone_number": {
                                "type": "integer",
                                "description": "Length of the phone number queue."
                            }
                        }
                    }
                },
                "example": {
                    "queue_lengths": {
                        "account": 10,
                        "messaging_profile": 2,
                        "phone_number": 10
                    }
                }
            },
            "OutboundMessage": {
                "type": "object",
                "properties": {
                    "record_type": {
                        "type": "string",
                        "example": "message",
                        "enum": [
                            "message"
                        ],
                        "description": "Identifies the type of the resource."
                    },
                    "direction": {
                        "type": "string",
                        "example": "outbound",
                        "enum": [
                            "outbound"
                        ],
                        "description": "The direction of the message. Inbound messages are sent to you whereas outbound messages are sent from you."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Identifies the type of resource."
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "SMS",
                            "MMS"
                        ],
                        "description": "The type of message."
                    },
                    "messaging_profile_id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Unique identifier for a messaging profile."
                    },
                    "from": {
                        "type": "object",
                        "properties": {
                            "phone_number": {
                                "type": "string",
                                "format": "address",
                                "description": "Sending address (+E.164 formatted phone number, alphanumeric sender ID, or short code)."
                            },
                            "carrier": {
                                "type": "string",
                                "description": "The carrier of the receiver."
                            },
                            "line_type": {
                                "type": "string",
                                "description": "The line-type of the receiver.",
                                "enum": [
                                    "Wireline",
                                    "Wireless",
                                    "VoWiFi",
                                    "VoIP",
                                    "Pre-Paid Wireless",
                                    ""
                                ]
                            }
                        }
                    },
                    "to": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "phone_number": {
                                    "type": "string",
                                    "format": "address",
                                    "description": "Receiving address (+E.164 formatted phone number or short code)."
                                },
                                "status": {
                                    "type": "string",
                                    "enum": [
                                        "queued",
                                        "sending",
                                        "sent",
                                        "delivered",
                                        "sending_failed",
                                        "delivery_failed",
                                        "delivery_unconfirmed"
                                    ]
                                },
                                "carrier": {
                                    "type": "string",
                                    "description": "The carrier of the receiver."
                                },
                                "line_type": {
                                    "type": "string",
                                    "description": "The line-type of the receiver.",
                                    "enum": [
                                        "Wireline",
                                        "Wireless",
                                        "VoWiFi",
                                        "VoIP",
                                        "Pre-Paid Wireless"
                                    ]
                                }
                            }
                        }
                    },
                    "text": {
                        "type": "string",
                        "description": "Message body (i.e., content) as a non-empty string.\n\n**Required for SMS**"
                    },
                    "subject": {
                        "type": "string",
                        "nullable": true,
                        "description": "Subject of multimedia message"
                    },
                    "media": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "url": {
                                    "type": "string",
                                    "format": "url",
                                    "description": "The url of the media requested to be sent."
                                },
                                "content_type": {
                                    "type": "string",
                                    "format": "mime-type",
                                    "nullable": true,
                                    "description": "The MIME type of the requested media."
                                },
                                "sha256": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The SHA256 hash of the requested media."
                                },
                                "size": {
                                    "type": "integer",
                                    "nullable": true,
                                    "description": "The size of the requested media."
                                }
                            }
                        }
                    },
                    "webhook_url": {
                        "type": "string",
                        "format": "url",
                        "nullable": true,
                        "description": "The URL where webhooks related to this message will be sent."
                    },
                    "webhook_failover_url": {
                        "type": "string",
                        "format": "url",
                        "nullable": true,
                        "description": "The failover URL where webhooks related to this message will be sent if sending to the primary URL fails."
                    },
                    "encoding": {
                        "type": "string",
                        "description": "Encoding scheme used for the message body."
                    },
                    "parts": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 10,
                        "description": "Number of parts into which the message's body must be split."
                    },
                    "tags": {
                        "type": "array",
                        "description": "Tags associated with the resource.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "cost": {
                        "type": "object",
                        "nullable": true,
                        "default": null,
                        "properties": {
                            "amount": {
                                "type": "string",
                                "format": "decimal",
                                "description": "The amount deducted from your account."
                            },
                            "currency": {
                                "type": "string",
                                "format": "iso4217",
                                "description": "The ISO 4217 currency identifier."
                            }
                        }
                    },
                    "received_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "ISO 8601 formatted date indicating when the message request was received."
                    },
                    "sent_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "ISO 8601 formatted date indicating when the message was sent."
                    },
                    "completed_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "ISO 8601 formatted date indicating when the message was finalized."
                    },
                    "valid_until": {
                        "type": "string",
                        "description": "Message must be out of the queue by this time or else it will be discarded and marked as 'sending_failed'. Once the message moves out of the queue, this field will be nulled",
                        "format": "date-time",
                        "nullable": true
                    },
                    "errors": {
                        "type": "array",
                        "description": "These errors may point at addressees when referring to unsuccessful/unconfirmed delivery statuses.",
                        "items": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                },
                "example": {
                    "record_type": "message",
                    "direction": "outbound",
                    "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "MMS",
                    "messaging_profile_id": "dd50eba1-a0c0-4563-9925-b25e842a7cb6",
                    "from": {
                        "phone_number": "+16149548364",
                        "carrier": "Telnyx",
                        "line_type": "Wireless"
                    },
                    "to": [
                        {
                            "phone_number": "+18665550001",
                            "status": "queued",
                            "carrier": "T-MOBILE USA, INC.",
                            "line_type": "Wireless"
                        }
                    ],
                    "text": "Hello, World!",
                    "subject": "From Telnyx!",
                    "media": [
                        {
                            "url": "https://pbs.twimg.com/profile_images/1142168442042118144/AW3F4fFD_400x400.png",
                            "content_type": null,
                            "sha256": null,
                            "size": null
                        }
                    ],
                    "webhook_url": "https://www.example.com/hooks",
                    "webhook_failover_url": "https://backup.example.com/hooks",
                    "encoding": "GSM-7",
                    "parts": 1,
                    "tags": [
                        "Greetings"
                    ],
                    "cost": null,
                    "received_at": "2019-01-23T18:10:02.574Z",
                    "sent_at": null,
                    "completed_at": null,
                    "valid_until": null,
                    "errors": []
                }
            },
            "OutboundMessageEvent": {
                "properties": {
                    "record_type": {
                        "type": "string",
                        "example": "event",
                        "enum": [
                            "event"
                        ],
                        "description": "Identifies the type of the resource."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Identifies the type of resource."
                    },
                    "event_type": {
                        "type": "string",
                        "example": "message.sent",
                        "enum": [
                            "message.sent",
                            "message.finalized"
                        ],
                        "description": "The type of event being delivered."
                    },
                    "occurred_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "ISO 8601 formatted date indicating when the resource was created."
                    },
                    "payload": {
                        "$ref": "#/components/schemas/OutboundMessage"
                    }
                },
                "example": {
                    "record_type": "event",
                    "id": "86f58db9-0fe3-4adc-9d1f-46e66e6e9323",
                    "event_type": "message.sent",
                    "occurred_at": "date-time",
                    "payload": {
                        "record_type": "message",
                        "direction": "outbound",
                        "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "type": "MMS",
                        "messaging_profile_id": "dd50eba1-a0c0-4563-9925-b25e842a7cb6",
                        "from": {
                            "phone_number": "+16149548364",
                            "carrier": "Telnyx",
                            "line_type": "Wireless"
                        },
                        "to": [
                            {
                                "phone_number": "+18665550001",
                                "status": "queued",
                                "carrier": "T-MOBILE USA, INC.",
                                "line_type": "Wireless"
                            }
                        ],
                        "text": "Hello, World!",
                        "subject": "From Telnyx!",
                        "media": [
                            {
                                "url": "https://pbs.twimg.com/profile_images/1142168442042118144/AW3F4fFD_400x400.png",
                                "content_type": null,
                                "sha256": null,
                                "size": null
                            }
                        ],
                        "webhook_url": "https://www.example.com/hooks",
                        "webhook_failover_url": "https://backup.example.com/hooks",
                        "encoding": "GSM-7",
                        "parts": 1,
                        "tags": [
                            "Greetings"
                        ],
                        "cost": null,
                        "received_at": "2019-01-23T18:10:02.574Z",
                        "sent_at": null,
                        "completed_at": null,
                        "valid_until": null,
                        "errors": []
                    }
                }
            },
            "InboundMessage": {
                "properties": {
                    "record_type": {
                        "type": "string",
                        "example": "message",
                        "enum": [
                            "message"
                        ],
                        "description": "Identifies the type of the resource."
                    },
                    "direction": {
                        "type": "string",
                        "example": "inbound",
                        "enum": [
                            "inbound"
                        ],
                        "description": "The direction of the message. Inbound messages are sent to you whereas outbound messages are sent from you."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Identifies the type of resource."
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "SMS",
                            "MMS"
                        ],
                        "description": "The type of message. This value can be either 'sms' or 'mms'."
                    },
                    "messaging_profile_id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Unique identifier for a messaging profile."
                    },
                    "to": {
                        "type": "string",
                        "format": "address",
                        "description": "Sending address (+E.164 formatted phone number, alphanumeric sender ID, or short code)."
                    },
                    "from": {
                        "type": "object",
                        "items": {
                            "type": "object",
                            "properties": {
                                "phone_number": {
                                    "type": "string",
                                    "format": "address",
                                    "description": "Sending address (+E.164 formatted phone number, alphanumeric sender ID, or short code)."
                                },
                                "status": {
                                    "type": "string",
                                    "enum": [
                                        "received",
                                        "delivered"
                                    ]
                                },
                                "carrier": {
                                    "type": "string",
                                    "description": "The carrier of the sender."
                                },
                                "line_type": {
                                    "type": "string",
                                    "description": "The line-type of the sender.",
                                    "enum": [
                                        "Wireline",
                                        "Wireless",
                                        "VoWiFi",
                                        "VoIP",
                                        "Pre-Paid Wireless"
                                    ]
                                }
                            }
                        }
                    },
                    "text": {
                        "type": "string",
                        "description": "Message body (i.e., content) as a non-empty string.\n\n**Required for SMS**"
                    },
                    "media": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "url": {
                                    "type": "string",
                                    "format": "url",
                                    "description": "The url of the media requested to be sent."
                                },
                                "content_type": {
                                    "type": "string",
                                    "format": "mime-type",
                                    "description": "The MIME type of the requested media."
                                },
                                "size": {
                                    "type": "integer",
                                    "description": "The size of the requested media."
                                },
                                "hash_sha256": {
                                    "type": "string",
                                    "minLength": 32,
                                    "maxLength": 32,
                                    "description": "The SHA256 hash of the requested media."
                                }
                            }
                        }
                    },
                    "webhook_url": {
                        "type": "string",
                        "format": "url",
                        "nullable": true,
                        "description": "The URL where webhooks related to this message will be sent."
                    },
                    "webhook_failover_url": {
                        "type": "string",
                        "format": "url",
                        "nullable": true,
                        "description": "The failover URL where webhooks related to this message will be sent if sending to the primary URL fails."
                    },
                    "encoding": {
                        "type": "string",
                        "description": "Encoding scheme used for the message body."
                    },
                    "parts": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 10,
                        "description": "Number of parts into which the message's body must be split."
                    },
                    "tags": {
                        "type": "array",
                        "description": "Tags associated with the resource.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "cost": {
                        "type": "object",
                        "nullable": true,
                        "default": null,
                        "properties": {
                            "amount": {
                                "type": "string",
                                "format": "decimal",
                                "description": "The amount deducted from your account."
                            },
                            "currency": {
                                "type": "string",
                                "format": "iso4217",
                                "description": "The ISO 4217 currency identifier."
                            }
                        }
                    },
                    "received_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "ISO 8601 formatted date indicating when the message request was received."
                    },
                    "sent_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "default": null,
                        "description": "Not used for inbound messages."
                    },
                    "completed_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "default": null,
                        "description": "Not used for inbound messages."
                    },
                    "valid_until": {
                        "type": "string",
                        "description": "Not used for inbound messages.",
                        "format": "date-time",
                        "nullable": true,
                        "default": null
                    },
                    "errors": {
                        "type": "array",
                        "description": "These errors may point at addressees when referring to unsuccessful/unconfirmed delivery statuses.",
                        "items": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                },
                "example": {
                    "record_type": "message",
                    "direction": "inbound",
                    "id": "7ee4241c-f127-47e5-9c34-3aac291f8058",
                    "type": "SMS",
                    "messaging_profile_id": "0f512bda-ae1e-4597-8e11-e5f5686b97d3",
                    "from": {
                        "phone_number": "+18665550001",
                        "status": "delivered",
                        "carrier": "T-MOBILE USA, INC.",
                        "line_type": "Wireless"
                    },
                    "to": "+18445550001",
                    "text": "Hello, World!",
                    "subject": "From Telnyx!",
                    "media": [],
                    "webhook_url": "https://www.example.com/hooks",
                    "webhook_failover_url": "https://backup.example.com/hooks",
                    "encoding": "GSM-7",
                    "parts": 1,
                    "tags": [
                        "Greetings"
                    ],
                    "cost": null,
                    "received_at": "2019-01-23T18:10:02.574Z",
                    "sent_at": null,
                    "completed_at": null,
                    "valid_until": null,
                    "errors": []
                }
            },
            "ReplacedLinkClickEvent": {
                "type": "object",
                "properties": {
                    "record_type": {
                        "type": "string",
                        "example": "link_clicked",
                        "description": "Identifies the type of the resource."
                    },
                    "url": {
                        "type": "string",
                        "example": "link_clicked",
                        "description": "The original link that was sent in the message."
                    },
                    "to": {
                        "type": "string",
                        "format": "address",
                        "description": "Sending address (+E.164 formatted phone number, alphanumeric sender ID, or short code)."
                    },
                    "message_id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The message ID associated with the clicked link."
                    },
                    "time_clicked": {
                        "type": "string",
                        "format": "date-time",
                        "description": "ISO 8601 formatted date indicating when the message request was received."
                    }
                },
                "example": {
                    "record_type": "link_clicked",
                    "url": "https://telnyx.com",
                    "to": "18445550001",
                    "message_id": "7ee4241c-f127-47e5-9c34-3aac291f8058",
                    "time_clicked": "2019-04-01T14:45:45.450Z"
                }
            },
            "InboundMessageEvent": {
                "type": "object",
                "properties": {
                    "record_type": {
                        "type": "string",
                        "example": "event",
                        "enum": [
                            "event"
                        ],
                        "description": "Identifies the type of the resource."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Identifies the type of resource."
                    },
                    "event_type": {
                        "type": "string",
                        "example": "message.received",
                        "enum": [
                            "message.received"
                        ],
                        "description": "The type of event being delivered."
                    },
                    "occurred_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "ISO 8601 formatted date indicating when the resource was created."
                    },
                    "payload": {
                        "$ref": "#/components/schemas/InboundMessage"
                    }
                },
                "example": {
                    "record_type": "event",
                    "id": "bf6307bd-884d-4c1f-b6ea-c62b8c495d3c",
                    "event_type": "message.received",
                    "occurred_at": "date-time",
                    "payload": {
                        "record_type": "message",
                        "direction": "inbound",
                        "id": "7ee4241c-f127-47e5-9c34-3aac291f8058",
                        "type": "SMS",
                        "messaging_profile_id": "0f512bda-ae1e-4597-8e11-e5f5686b97d3",
                        "from": {
                            "phone_number": "+18665550001",
                            "status": "delivered",
                            "carrier": "T-MOBILE USA, INC.",
                            "line_type": "Wireless"
                        },
                        "to": "+18445550001",
                        "text": "Hello, World!",
                        "subject": "From Telnyx!",
                        "media": [],
                        "webhook_url": "https://www.example.com/hooks",
                        "webhook_failover_url": "https://backup.example.com/hooks",
                        "encoding": "GSM-7",
                        "parts": 1,
                        "tags": [
                            "Greetings"
                        ],
                        "cost": null,
                        "received_at": "2019-01-23T18:10:02.574Z",
                        "sent_at": null,
                        "completed_at": null,
                        "valid_until": null,
                        "errors": []
                    }
                }
            },
            "MessagingResponse": {
                "type": "object",
                "properties": {
                    "messaging_profile_id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "Unique identifier for a messaging profile."
                    },
                    "messaging_profile_name": {
                        "type": "string",
                        "description": "Messaging profile name.",
                        "example": "Test Name"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the phone number.",
                        "enum": [
                            "long-code",
                            "toll-free",
                            "short-code"
                        ]
                    },
                    "country_code": {
                        "type": "string",
                        "description": "ISO 3166-1 alpha-2 country code.",
                        "pattern": "^(([A-Z]{2}))$",
                        "example": "US"
                    },
                    "traffic_type": {
                        "type": "string",
                        "description": "The messaging traffic or use case for which the number is currently configured.",
                        "example": "P2P"
                    },
                    "messaging_product": {
                        "type": "string",
                        "description": "The messaging product that the number is registered to use.",
                        "example": "P2P"
                    },
                    "features": {
                        "type": "object",
                        "properties": {
                            "sms": {
                                "$ref": "#/components/schemas/MessagingFeatureSet"
                            },
                            "mms": {
                                "$ref": "#/components/schemas/MessagingFeatureSet"
                            }
                        }
                    }
                },
                "example": {
                    "messaging_profile_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "messaging_profile_name": "Messaging profile name",
                    "country_code": "US",
                    "type": "toll-free",
                    "traffic_type": "A2P",
                    "messaging_product": "A2P",
                    "features": {
                        "sms": {
                            "domestic_two_way": true,
                            "international_inbound": true,
                            "international_outbound": true
                        },
                        "mms": {
                            "domestic_two_way": true,
                            "international_inbound": true,
                            "international_outbound": true
                        }
                    }
                }
            },
            "AnswerRequest": {
                "type": "object",
                "title": "Answer request",
                "properties": {
                    "client_state": {
                        "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.",
                        "type": "string",
                        "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
                    },
                    "command_id": {
                        "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same `command_id`.",
                        "type": "string",
                        "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
                    }
                },
                "example": {
                    "client_state": "aGF2ZSBhIG5pY2UgZGF5ID1d",
                    "command_id": "891510ac-f3e4-11e8-af5b-de00688a4901"
                }
            },
            "StartForkingRequest": {
                "type": "object",
                "title": "Start Forking request",
                "properties": {
                    "target": {
                        "description": "The network target, <udp:ip_address:port>, where the call's RTP media packets should be forwarded. Both incoming and outgoing media packets will be delivered to the specified target, and information about the stream will be included in the encapsulation protocol header, including the direction (0 = inbound; 1 = outbound), leg (0 = A-leg; 1 = B-leg), and call_leg_id.",
                        "type": "string",
                        "example": "udp:192.0.2.1:9000"
                    },
                    "rx": {
                        "description": "The network target, <udp:ip_address:port>, where the call's incoming RTP media packets should be forwarded.",
                        "type": "string",
                        "example": "192.0.2.1:9000"
                    },
                    "tx": {
                        "description": "The network target, <udp:ip_address:port>, where the call's outgoing RTP media packets should be forwarded.",
                        "type": "string",
                        "example": "192.0.2.1:9001"
                    },
                    "client_state": {
                        "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.",
                        "type": "string",
                        "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
                    },
                    "command_id": {
                        "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same `command_id`.",
                        "type": "string",
                        "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
                    }
                },
                "example": {
                    "target": "udp:192.0.2.1:9000",
                    "rx": "192.0.2.1:9000",
                    "tx": "192.0.2.1:9001",
                    "client_state": "aGF2ZSBhIG5pY2UgZGF5ID1d",
                    "command_id": "891510ac-f3e4-11e8-af5b-de00688a4901"
                }
            },
            "StopForkingRequest": {
                "type": "object",
                "title": "Stop Forking request",
                "properties": {
                    "client_state": {
                        "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.",
                        "type": "string",
                        "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
                    },
                    "command_id": {
                        "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same `command_id`.",
                        "type": "string",
                        "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
                    }
                },
                "example": {
                    "client_state": "aGF2ZSBhIG5pY2UgZGF5ID1d",
                    "command_id": "891510ac-f3e4-11e8-af5b-de00688a4901"
                }
            },
            "RejectRequest": {
                "type": "object",
                "title": "Reject request",
                "properties": {
                    "client_state": {
                        "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.",
                        "type": "string",
                        "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
                    },
                    "command_id": {
                        "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same `command_id`.",
                        "type": "string",
                        "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
                    },
                    "cause": {
                        "description": "Cause for call rejection.",
                        "default": "USER_BUSY",
                        "type": "string",
                        "enum": [
                            "CALL_REJECTED",
                            "USER_BUSY"
                        ],
                        "example": "USER_BUSY"
                    }
                },
                "example": {
                    "client_state": "aGF2ZSBhIG5pY2UgZGF5ID1d",
                    "command_id": "891510ac-f3e4-11e8-af5b-de00688a4901",
                    "cause": "USER_BUSY"
                }
            },
            "GatherUsingAudioRequest": {
                "type": "object",
                "title": "Gather using audio with all parameters request",
                "required": [
                    "audio_url"
                ],
                "properties": {
                    "audio_url": {
                        "type": "string",
                        "example": "http://example.com/message.wav",
                        "description": "The URL of a file to be played back at the beginning of each prompt. The URL can point to either a WAV or MP3 file."
                    },
                    "invalid_audio_url": {
                        "type": "string",
                        "description": "The URL of a file to play when digits don't match the `valid_digits` parameter or the number of digits is not between `min` and `max`. The URL can point to either a WAV or MP3 file.",
                        "example": "http://example.com/invalid.wav"
                    },
                    "minimum_digits": {
                        "description": "The minimum number of digits to fetch. This parameter has a minimum value of 1.",
                        "default": 1,
                        "type": "integer",
                        "example": 1,
                        "format": "int32"
                    },
                    "maximum_digits": {
                        "description": "The maximum number of digits to fetch. This parameter has a maximum value of 128.",
                        "default": 128,
                        "type": "integer",
                        "example": 10,
                        "format": "int32"
                    },
                    "maximum_tries": {
                        "description": "The maximum number of times the file should be played if there is no input from the user on the call.",
                        "default": 3,
                        "type": "integer",
                        "example": 3,
                        "format": "int32"
                    },
                    "timeout_millis": {
                        "description": "The number of milliseconds to wait for a DTMF response after file playback ends before a replaying the sound file.",
                        "default": 60000,
                        "type": "integer",
                        "example": 60000,
                        "format": "int32"
                    },
                    "terminating_digit": {
                        "description": "The digit used to terminate input if fewer than `maximum_digits` digits have been gathered.",
                        "default": "#",
                        "type": "string",
                        "example": "#"
                    },
                    "valid_digits": {
                        "description": "A list of all digits accepted as valid.",
                        "default": "0123456789#*",
                        "type": "string",
                        "example": "123"
                    },
                    "inter_digit_timeout_millis": {
                        "description": "The number of milliseconds to wait for input between digits.",
                        "default": 5000,
                        "type": "integer",
                        "example": 10000,
                        "format": "int32"
                    },
                    "client_state": {
                        "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.",
                        "type": "string",
                        "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
                    },
                    "command_id": {
                        "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same `command_id`.",
                        "type": "string",
                        "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
                    }
                },
                "example": {
                    "audio_url": "http://example.com/message.wav",
                    "invalid_audio_url": "http://example.com/message.wav",
                    "minimum_digits": 1,
                    "maximum_digits": 10,
                    "timeout_millis": 10000,
                    "terminating_digit": "#",
                    "valid_digits": "123",
                    "inter_digit_timeout_millis": 10000,
                    "client_state": "aGF2ZSBhIG5pY2UgZGF5ID1d",
                    "command_id": "891510ac-f3e4-11e8-af5b-de00688a4901"
                }
            },
            "GatherUsingSpeakRequest": {
                "type": "object",
                "title": "Gather using speak with all parameters request",
                "required": [
                    "voice",
                    "language",
                    "payload"
                ],
                "properties": {
                    "payload": {
                        "description": "The text or SSML to be converted into speech. There is a 5,000 character limit.",
                        "type": "string",
                        "example": "Say this on the call"
                    },
                    "invalid_payload": {
                        "description": "The text or SSML to be converted into speech when digits don't match the `valid_digits` parameter or the number of digits is not between `min` and `max`. There is a 5,000 character limit.",
                        "type": "string",
                        "example": "Say this on the call"
                    },
                    "payload_type": {
                        "description": "The type of the provided payload. The payload can either be plain text, or Speech Synthesis Markup Language (SSML).",
                        "default": "text",
                        "type": "string",
                        "enum": [
                            "text",
                            "ssml"
                        ],
                        "example": "ssml"
                    },
                    "service_level": {
                        "description": "This parameter impacts speech quality, language options and payload types. When using `basic`, only the `en-US` language and payload type `text` are allowed.",
                        "default": "premium",
                        "type": "string",
                        "enum": [
                            "basic",
                            "premium"
                        ],
                        "example": "premium"
                    },
                    "voice": {
                        "description": "The gender of the voice used to speak back the text.",
                        "type": "string",
                        "enum": [
                            "male",
                            "female"
                        ],
                        "example": "female"
                    },
                    "language": {
                        "description": "The language you want spoken.",
                        "type": "string",
                        "enum": [
                            "arb",
                            "cmn-CN",
                            "cy-GB",
                            "da-DK",
                            "de-DE",
                            "en-AU",
                            "en-GB",
                            "en-GB-WLS",
                            "en-IN",
                            "en-US",
                            "es-ES",
                            "es-MX",
                            "es-US",
                            "fr-CA",
                            "fr-FR",
                            "hi-IN",
                            "is-IS",
                            "it-IT",
                            "ja-JP",
                            "ko-KR",
                            "nb-NO",
                            "nl-NL",
                            "pl-PL",
                            "pt-BR",
                            "pt-PT",
                            "ro-RO",
                            "ru-RU",
                            "sv-SE",
                            "tr-TR"
                        ],
                        "example": "en-US"
                    },
                    "minimum_digits": {
                        "description": "The minimum number of digits to fetch. This parameter has a minimum value of 1.",
                        "default": 1,
                        "type": "integer",
                        "example": 1,
                        "format": "int32"
                    },
                    "maximum_digits": {
                        "description": "The maximum number of digits to fetch. This parameter has a maximum value of 128.",
                        "default": 128,
                        "type": "integer",
                        "example": 10,
                        "format": "int32"
                    },
                    "maximum_tries": {
                        "description": "The maximum number of times that a file should be played back if there is no input from the user on the call.",
                        "default": 3,
                        "type": "integer",
                        "example": 3,
                        "format": "int32"
                    },
                    "timeout_millis": {
                        "description": "The number of milliseconds to wait for a DTMF response after speak ends before a replaying the sound file.",
                        "default": 60000,
                        "type": "integer",
                        "example": 60000,
                        "format": "int32"
                    },
                    "terminating_digit": {
                        "description": "The digit used to terminate input if fewer than `maximum_digits` digits have been gathered.",
                        "default": "#",
                        "type": "string",
                        "example": "#"
                    },
                    "valid_digits": {
                        "description": "A list of all digits accepted as valid.",
                        "default": "0123456789#*",
                        "type": "string",
                        "example": "123"
                    },
                    "inter_digit_timeout_millis": {
                        "description": "The number of milliseconds to wait for input between digits.",
                        "default": 5000,
                        "type": "integer",
                        "example": 10000,
                        "format": "int32"
                    },
                    "client_state": {
                        "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.",
                        "type": "string",
                        "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
                    },
                    "command_id": {
                        "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same `command_id`.",
                        "type": "string",
                        "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
                    }
                },
                "example": {
                    "payload": "say this on call",
                    "invalid_payload": "say this on call",
                    "payload_type": "text",
                    "service_level": "premium",
                    "voice": "male",
                    "language": "arb",
                    "minimum_digits": 1,
                    "maximum_digits": 10,
                    "terminating_digit": "#",
                    "valid_digits": "123",
                    "inter_digit_timeout_millis": 10000,
                    "client_state": "aGF2ZSBhIG5pY2UgZGF5ID1d",
                    "command_id": "891510ac-f3e4-11e8-af5b-de00688a4901"
                }
            },
            "PlayAudioUrlRequest": {
                "type": "object",
                "title": "Play Audio URL request",
                "required": [
                    "audio_url"
                ],
                "properties": {
                    "audio_url": {
                        "description": "The URL of the file to be played back on the call. The URL can point to either a WAV or MP3 file.",
                        "type": "string",
                        "example": "http://www.example.com/sounds/greeting.wav"
                    },
                    "loop": {
                        "description": "The number of times the audio file should be played. If supplied, the value must be an integer between 1 and 100, or the special string `infinity` for an endless loop.",
                        "type": "string",
                        "example": "infinity",
                        "default": 1
                    },
                    "overlay": {
                        "description": "When enabled, audio will be mixed on top of any other audio that is actively being played back. Note that `overlay: true` will only work if there is another audio file already being played on the call.",
                        "type": "boolean",
                        "example": "true",
                        "default": "false"
                    },
                    "stop": {
                        "description": "When specified, it stops the current audio being played.  Specify `current` to stop the current audio being played, and to play the next file in the queue. Specify `all` to stop the current audio file being played and to also clear all audio files from the queue.",
                        "type": "string",
                        "example": "current"
                    },
                    "target_legs": {
                        "description": "Specifies the leg or legs on which audio will be played. If supplied, the value must be either `self`, `opposite` or `both`.",
                        "type": "string",
                        "default": "self",
                        "example": "self"
                    },
                    "client_state": {
                        "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.",
                        "type": "string",
                        "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
                    },
                    "command_id": {
                        "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same `command_id`.",
                        "type": "string",
                        "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
                    }
                },
                "example": {
                    "audio_url": "http://www.example.com/sounds/greeting.wav",
                    "loop": "infinity",
                    "overlay": true,
                    "stop": "current",
                    "target_legs": "self",
                    "client_state": "aGF2ZSBhIG5pY2UgZGF5ID1d",
                    "command_id": "891510ac-f3e4-11e8-af5b-de00688a4901"
                }
            },
            "PlaybackStopRequest": {
                "type": "object",
                "title": "Playback Stop request",
                "properties": {
                    "stop": {
                        "description": "Use `current` to stop only the current audio or `all` to stop all audios in the queue.",
                        "type": "string",
                        "default": "all",
                        "example": "current"
                    },
                    "client_state": {
                        "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.",
                        "type": "string",
                        "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
                    },
                    "command_id": {
                        "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same `command_id`.",
                        "type": "string",
                        "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
                    }
                },
                "example": {
                    "stop": "all",
                    "client_state": "aGF2ZSBhIG5pY2UgZGF5ID1d",
                    "command_id": "891510ac-f3e4-11e8-af5b-de00688a4901"
                }
            },
            "StartRecordingRequest": {
                "type": "object",
                "title": "Start Recording request",
                "required": [
                    "format",
                    "channels"
                ],
                "properties": {
                    "format": {
                        "description": "The audio file format used when storing the call recording. Can be either `mp3` or `wav`.",
                        "type": "string",
                        "enum": [
                            "wav",
                            "mp3"
                        ],
                        "example": "mp3"
                    },
                    "channels": {
                        "description": "When `dual`, final audio file will be stereo recorded with the first leg on channel A, and the rest on channel B.",
                        "enum": [
                            "single",
                            "dual"
                        ],
                        "type": "string",
                        "example": "single"
                    },
                    "client_state": {
                        "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.",
                        "type": "string",
                        "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
                    },
                    "command_id": {
                        "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same `command_id`.",
                        "type": "string",
                        "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
                    },
                    "play_beep": {
                        "description": "If enabled, a beep sound will be played at the start of a recording.",
                        "type": "boolean",
                        "example": true
                    }
                },
                "example": {
                    "format": "wav",
                    "channels": "single",
                    "client_state": "aGF2ZSBhIG5pY2UgZGF5ID1d",
                    "command_id": "891510ac-f3e4-11e8-af5b-de00688a4901",
                    "play_beep": true
                }
            },
            "StopRecordingRequest": {
                "type": "object",
                "title": "Stop Recording request",
                "properties": {
                    "client_state": {
                        "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.",
                        "type": "string",
                        "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
                    },
                    "command_id": {
                        "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same `command_id`.",
                        "type": "string",
                        "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
                    }
                },
                "example": {
                    "client_state": "aGF2ZSBhIG5pY2UgZGF5ID1d",
                    "command_id": "891510ac-f3e4-11e8-af5b-de00688a4901"
                }
            },
            "StopGatherRequest": {
                "type": "object",
                "title": "Stop Gather request",
                "properties": {
                    "client_state": {
                        "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.",
                        "type": "string",
                        "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
                    },
                    "command_id": {
                        "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same `command_id`.",
                        "type": "string",
                        "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
                    }
                },
                "example": {
                    "client_state": "aGF2ZSBhIG5pY2UgZGF5ID1d",
                    "command_id": "891510ac-f3e4-11e8-af5b-de00688a4901"
                }
            },
            "SendDTMFRequest": {
                "type": "object",
                "title": "Send DTMF request",
                "required": [
                    "digits"
                ],
                "properties": {
                    "digits": {
                        "description": "DTMF digits to send. Valid digits are 0-9, A-D, *, and #. Pauses can be added using w (0.5s) and W (1s).",
                        "type": "string",
                        "example": "1www2WABCDw9"
                    },
                    "duration_millis": {
                        "description": "Specifies for how many milliseconds each digit will be played in the audio stream. Ranges from 100 to 500ms",
                        "type": "integer",
                        "format": "int32",
                        "example": 500,
                        "default": 250
                    },
                    "client_state": {
                        "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.",
                        "type": "string",
                        "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
                    },
                    "command_id": {
                        "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same `command_id`.",
                        "type": "string",
                        "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
                    }
                },
                "example": {
                    "digits": "1www2WABCDw9",
                    "duration_millis": 500,
                    "client_state": "aGF2ZSBhIG5pY2UgZGF5ID1d",
                    "command_id": "891510ac-f3e4-11e8-af5b-de00688a4901"
                }
            },
            "CallControlCommandResult": {
                "type": "object",
                "title": "Call Control Command Result",
                "example": {
                    "result": "ok"
                },
                "properties": {
                    "result": {
                        "type": "string",
                        "example": "ok"
                    }
                }
            },
            "CallEvent": {
                "type": "object",
                "title": "Call Event",
                "required": [
                    "record_type",
                    "call_leg_id",
                    "call_session_id",
                    "event_timestamp",
                    "name",
                    "type",
                    "metadata"
                ],
                "properties": {
                    "record_type": {
                        "type": "string",
                        "enum": [
                            "call_event"
                        ],
                        "example": "call_event"
                    },
                    "call_leg_id": {
                        "type": "string",
                        "description": "Uniquely identifies an individual call leg.",
                        "example": "308fe500-5213-11e9-ace7-02420a0f0668"
                    },
                    "call_session_id": {
                        "type": "string",
                        "description": "Uniquely identifies the call control session. A session may include multiple call leg events.",
                        "example": "308fec30-5213-11e9-9d3f-02420a0f0668"
                    },
                    "event_timestamp": {
                        "type": "string",
                        "description": "Event timestamp",
                        "example": "2019-03-29T11:10:19.127783Z"
                    },
                    "name": {
                        "type": "string",
                        "description": "Event name",
                        "example": "call.hangup"
                    },
                    "type": {
                        "type": "string",
                        "description": "Event type",
                        "enum": [
                            "command",
                            "webhook"
                        ],
                        "example": "webhook"
                    },
                    "metadata": {
                        "type": "object",
                        "description": "Event metadata, which includes raw event, and extra information based on event type"
                    }
                },
                "example": {
                    "record_type": "call_event",
                    "call_leg_id": "308fe500-5213-11e9-ace7-02420a0f0668",
                    "call_session_id": "308fec30-5213-11e9-9d3f-02420a0f0668",
                    "event_timestamp": "2019-03-29T11:10:19.127783Z",
                    "name": "call.hangup",
                    "type": "webhook",
                    "metadata": {}
                }
            },
            "CallControlInvalidParamsResponse": {
                "type": "object",
                "title": "Invalid command parameters response",
                "required": [
                    "code",
                    "title",
                    "detail"
                ],
                "properties": {
                    "code": {
                        "type": "string",
                        "example": "90015"
                    },
                    "title": {
                        "type": "string",
                        "example": "Invalid Call Control ID"
                    },
                    "detail": {
                        "type": "string",
                        "example": "The call_control_id provided was not valid."
                    }
                },
                "example": {
                    "code": "90015",
                    "title": "Invalid Call Control ID",
                    "detail": "The call_control_id provided was not valid."
                }
            },
            "Call": {
                "type": "object",
                "title": "Call",
                "required": [
                    "record_type",
                    "call_control_id",
                    "call_leg_id",
                    "call_session_id",
                    "is_alive"
                ],
                "example": {
                    "record_type": "call",
                    "call_session_id": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                    "call_leg_id": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                    "call_control_id": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                    "is_alive": true
                },
                "properties": {
                    "record_type": {
                        "type": "string",
                        "enum": [
                            "call"
                        ],
                        "example": "call"
                    },
                    "call_session_id": {
                        "description": "ID that is unique to the call session and can be used to correlate webhook events",
                        "type": "string",
                        "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1"
                    },
                    "call_leg_id": {
                        "description": "ID that is unique to the call and can be used to correlate webhook events",
                        "type": "string",
                        "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1"
                    },
                    "call_control_id": {
                        "description": "Unique identifier and token for controlling the call. For Dial command it will always be `null` (dialing is asynchronous).",
                        "type": "string",
                        "example": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfXczRrZvZakpWxBlpw48KyZQ=="
                    },
                    "is_alive": {
                        "description": "Indicates whether the call is alive or not. For Dial command it will always be `false` (dialing is asynchronous).",
                        "type": "boolean",
                        "example": true
                    }
                }
            },
            "TransferCallRequest": {
                "type": "object",
                "title": "Transfer call request",
                "required": [
                    "to"
                ],
                "example": {
                    "to": "+18005550100 or SIP:username@sip.telnyx.com",
                    "from": "+18005550101",
                    "audio_url": "http://www.example.com/sounds/greeting.wav",
                    "timeout_secs": 60,
                    "timeout_limit_secs": 60,
                    "answering_machine_detection": "detect",
                    "answering_machine_detection_config": {
                        "total_analysis_time_millis": 5000,
                        "after_greeting_silence_millis": 1000,
                        "between_words_silence_millis": 1000,
                        "greeting_duration_millis": 1000,
                        "initial_silence_millis": 1000,
                        "maximum_number_of_words": 1000,
                        "maximum_word_length_millis": 2000,
                        "silence_threshold": 512,
                        "greeting_total_analysis_time_millis": 50000,
                        "greeting_silence_duration_millis": 2000
                    },
                    "custom_headers": {
                        "name": "head_1",
                        "value": "val_1"
                    },
                    "client_state": "aGF2ZSBhIG5pY2UgZGF5ID1d",
                    "command_id": "891510ac-f3e4-11e8-af5b-de00688a4901",
                    "sip_auth_username": "username",
                    "sip_auth_password": "password"
                },
                "properties": {
                    "to": {
                        "description": "The DID or SIP URI to dial out and bridge to the given call.",
                        "type": "string",
                        "example": "+18005550100 or SIP:username@sip.telnyx.com"
                    },
                    "from": {
                        "description": "The `from` number to be used as the caller id presented to the destination (`to` number). The number should be in +E164 format. This attribute will default to the `from` number of the original call if omitted.",
                        "type": "string",
                        "example": "+18005550101"
                    },
                    "audio_url": {
                        "description": "The URL of a file to be played back to the callee before bridging the call. The URL can point to either a WAV or MP3 file.",
                        "type": "string",
                        "example": "http://www.example.com/sounds/greeting.wav"
                    },
                    "timeout_secs": {
                        "description": "The number of seconds that Telnyx will wait for the call to be answered by the destination to which it is being transferred. If the timeout is reached before an answer is received, the call will hangup and a `call.hangup` webhook with a `hangup_cause` of `timeout` will be sent. Minimum value is 5 seconds. Maximum value is 120 seconds.",
                        "default": 30,
                        "type": "integer",
                        "example": 60,
                        "format": "int32"
                    },
                    "time_limit_secs": {
                        "description": "Sets the maximum duration of a Call Control Leg in seconds. If the time limit is reached, the call will hangup and a `call.hangup` webhook with a `hangup_cause` of `time_limit` will be sent. For example, by setting a time limit of 120 seconds, a Call Leg will be automatically terminated two minutes after being answered. The default time limit is 14400 seconds or 4 hours and this is also the maximum allowed call length.",
                        "default": 14400,
                        "type": "integer",
                        "example": 600,
                        "format": "int32"
                    },
                    "answering_machine_detection": {
                        "description": "Enables Answering Machine Detection. When a call is answered, Telnyx runs real-time detection to determine if it was picked up by a human or a machine and sends an `call.machine.detection.ended` webhook with the analysis result. If 'greeting_end' or 'detect_words' is used and a 'machine' is detected, you will receive another 'call.machine.greeting.ended' webhook when the answering machine greeting ends with a beep or silence. If `detect_beep` is used, you will only receive 'call.machine.greeting.ended' if a beep is detected.",
                        "default": "disabled",
                        "type": "string",
                        "enum": [
                            "detect",
                            "detect_beep",
                            "detect_words",
                            "greeting_end",
                            "disabled"
                        ]
                    },
                    "answering_machine_detection_config": {
                        "description": "Optional configuration parameters to modify 'answering_machine_detection' performance.",
                        "type": "object",
                        "properties": {
                            "total_analysis_time_millis": {
                                "description": "Maximum timeout threshold for overall detection.",
                                "default": 3500,
                                "type": "integer",
                                "example": 5000,
                                "format": "int32"
                            },
                            "after_greeting_silence_millis": {
                                "description": "Silence duration threshold after a greeting message or voice for it be considered human.",
                                "default": 800,
                                "type": "integer",
                                "example": 1000,
                                "format": "int32"
                            },
                            "between_words_silence_millis": {
                                "description": "Maximum threshold for silence between words.",
                                "default": 50,
                                "type": "integer",
                                "example": 100,
                                "format": "int32"
                            },
                            "greeting_duration_millis": {
                                "description": "Maximum threshold of a human greeting. If greeting longer than this value, considered machine.",
                                "default": 3500,
                                "type": "integer",
                                "example": 1500,
                                "format": "int32"
                            },
                            "initial_silence_millis": {
                                "description": "If initial silence duration is greater than this value, consider it a machine.",
                                "default": 3500,
                                "type": "integer",
                                "example": 1800,
                                "format": "int32"
                            },
                            "maximum_number_of_words": {
                                "description": "If number of detected words is greater than this value, consder it a machine.",
                                "default": 5,
                                "type": "integer",
                                "example": 3,
                                "format": "int32"
                            },
                            "maximum_word_length_millis": {
                                "description": "If a single word lasts longer than this threshold, consider it a machine.",
                                "default": 3500,
                                "type": "integer",
                                "example": 2000,
                                "format": "int32"
                            },
                            "silence_threshold": {
                                "description": "Minimum noise threshold for any analysis.",
                                "default": 256,
                                "type": "integer",
                                "example": 512,
                                "format": "int32"
                            },
                            "greeting_total_analysis_time_millis": {
                                "description": "If machine already detected, maximum timeout threshold to determine the end of the machine greeting.",
                                "default": 5000,
                                "type": "integer",
                                "example": 7500,
                                "format": "int32"
                            },
                            "greeting_silence_duration_millis": {
                                "description": "If machine already detected, maximum threshold for silence between words. If exceeded, the greeting is considered ended.",
                                "default": 1500,
                                "type": "integer",
                                "example": 2000,
                                "format": "int32"
                            }
                        }
                    },
                    "custom_headers": {
                        "description": "Custom headers to be added to the SIP INVITE.",
                        "type": "array",
                        "example": [
                            {
                                "name": "head_1",
                                "value": "val_1"
                            },
                            {
                                "name": "head_2",
                                "value": "val_2"
                            }
                        ],
                        "items": {
                            "$ref": "#/components/schemas/CustomSipHeader"
                        }
                    },
                    "client_state": {
                        "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.",
                        "type": "string",
                        "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
                    },
                    "command_id": {
                        "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same `command_id`.",
                        "type": "string",
                        "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
                    },
                    "sip_auth_username": {
                        "description": "SIP Authentication username used for SIP challenges.",
                        "type": "string",
                        "example": "username"
                    },
                    "sip_auth_password": {
                        "description": "SIP Authentication password used for SIP challenges.",
                        "type": "string",
                        "example": "password"
                    }
                }
            },
            "DialRequest": {
                "type": "object",
                "title": "Dial request",
                "required": [
                    "connection_id",
                    "to",
                    "from"
                ],
                "example": {
                    "to": "+18005550100 or SIP:username@sip.telnyx.com",
                    "from": "+18005550101",
                    "audio_url": "http://www.example.com/sounds/greeting.wav",
                    "timeout_secs": 60,
                    "timeout_limit_secs": 60,
                    "answering_machine_detection": "detect",
                    "answering_machine_detection_config": {
                        "total_analysis_time_millis": 5000,
                        "after_greeting_silence_millis": 1000,
                        "between_words_silence_millis": 1000,
                        "greeting_duration_millis": 1000,
                        "initial_silence_millis": 1000,
                        "maximum_number_of_words": 1000,
                        "maximum_word_length_millis": 2000,
                        "silence_threshold": 512,
                        "greeting_total_analysis_time_millis": 50000,
                        "greeting_silence_duration_millis": 2000
                    },
                    "custom_headers": {
                        "name": "head_1",
                        "value": "val_1"
                    },
                    "client_state": "aGF2ZSBhIG5pY2UgZGF5ID1d",
                    "command_id": "891510ac-f3e4-11e8-af5b-de00688a4901",
                    "link_to": "ilditnZK_eVysupV21KzmzN_sM29ygfauQojpm4BgFtfX5hXAcjotg==",
                    "sip_auth_username": "username",
                    "sip_auth_password": "password"
                },
                "properties": {
                    "to": {
                        "description": "The DID or SIP URI to dial out to.",
                        "type": "string",
                        "example": "+18005550100 or SIP:username@sip.telnyx.com"
                    },
                    "from": {
                        "description": "The `from` number to be used as the caller id presented to the destination (`to` number). The number should be in +E164 format. This attribute will default to the `from` number of the original call if omitted.",
                        "type": "string",
                        "example": "+18005550101"
                    },
                    "connection_id": {
                        "type": "string",
                        "description": "The ID of the connection to be used when dialing the destination."
                    },
                    "audio_url": {
                        "type": "string",
                        "example": "http://example.com/message.wav",
                        "description": "The URL of a file to be played back to the callee when the call is answered. The URL can point to either a WAV or MP3 file."
                    },
                    "timeout_secs": {
                        "description": "The number of seconds that Telnyx will wait for the call to be answered by the destination to which it is being called. If the timeout is reached before an answer is received, the call will hangup and a `call.hangup` webhook with a `hangup_cause` of `timeout` will be sent. Minimum value is 5 seconds. Maximum value is 120 seconds.",
                        "default": 30,
                        "type": "integer",
                        "example": 60,
                        "format": "int32"
                    },
                    "time_limit_secs": {
                        "description": "Sets the maximum duration of a Call Control Leg in seconds. If the time limit is reached, the call will hangup and a `call.hangup` webhook with a `hangup_cause` of `time_limit` will be sent. For example, by setting a time limit of 120 seconds, a Call Leg will be automatically terminated two minutes after being answered. The default time limit is 14400 seconds or 4 hours and this is also the maximum allowed call length.",
                        "default": 14400,
                        "type": "integer",
                        "example": 600,
                        "format": "int32"
                    },
                    "answering_machine_detection": {
                        "description": "Enables Answering Machine Detection. When a call is answered, Telnyx runs real-time detection to determine if it was picked up by a human or a machine and sends an `call.machine.detection.ended` webhook with the analysis result. If 'greeting_end' or 'detect_words' is used and a 'machine' is detected, you will receive another 'call.machine.greeting.ended' webhook when the answering machine greeting ends with a beep or silence. If `detect_beep` is used, you will only receive 'call.machine.greeting.ended' if a beep is detected.",
                        "default": "disabled",
                        "type": "string",
                        "enum": [
                            "detect",
                            "detect_beep",
                            "detect_words",
                            "greeting_end",
                            "disabled"
                        ]
                    },
                    "answering_machine_detection_config": {
                        "description": "Optional configuration parameters to modify 'answering_machine_detection' performance.",
                        "type": "object",
                        "properties": {
                            "total_analysis_time_millis": {
                                "description": "Maximum timeout threshold for overall detection.",
                                "default": 3500,
                                "type": "integer",
                                "example": 5000,
                                "format": "int32"
                            },
                            "after_greeting_silence_millis": {
                                "description": "Silence duration threshold after a greeting message or voice for it be considered human.",
                                "default": 800,
                                "type": "integer",
                                "example": 1000,
                                "format": "int32"
                            },
                            "between_words_silence_millis": {
                                "description": "Maximum threshold for silence between words.",
                                "default": 50,
                                "type": "integer",
                                "example": 100,
                                "format": "int32"
                            },
                            "greeting_duration_millis": {
                                "description": "Maximum threshold of a human greeting. If greeting longer than this value, considered machine.",
                                "default": 3500,
                                "type": "integer",
                                "example": 1500,
                                "format": "int32"
                            },
                            "initial_silence_millis": {
                                "description": "If initial silence duration is greater than this value, consider it a machine.",
                                "default": 3500,
                                "type": "integer",
                                "example": 1800,
                                "format": "int32"
                            },
                            "maximum_number_of_words": {
                                "description": "If number of detected words is greater than this value, consder it a machine.",
                                "default": 5,
                                "type": "integer",
                                "example": 3,
                                "format": "int32"
                            },
                            "maximum_word_length_millis": {
                                "description": "If a single word lasts longer than this threshold, consider it a machine.",
                                "default": 3500,
                                "type": "integer",
                                "example": 2000,
                                "format": "int32"
                            },
                            "silence_threshold": {
                                "description": "Minimum noise threshold for any analysis.",
                                "default": 256,
                                "type": "integer",
                                "example": 512,
                                "format": "int32"
                            },
                            "greeting_total_analysis_time_millis": {
                                "description": "If machine already detected, maximum timeout threshold to determine the end of the machine greeting.",
                                "default": 5000,
                                "type": "integer",
                                "example": 7500,
                                "format": "int32"
                            },
                            "greeting_silence_duration_millis": {
                                "description": "If machine already detected, maximum threshold for silence between words. If exceeded, the greeting is considered ended.",
                                "default": 1500,
                                "type": "integer",
                                "example": 2000,
                                "format": "int32"
                            }
                        }
                    },
                    "custom_headers": {
                        "description": "Custom headers to be added to the SIP INVITE.",
                        "type": "array",
                        "example": [
                            {
                                "name": "head_1",
                                "value": "val_1"
                            },
                            {
                                "name": "head_2",
                                "value": "val_2"
                            }
                        ],
                        "items": {
                            "$ref": "#/components/schemas/CustomSipHeader"
                        }
                    },
                    "client_state": {
                        "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.",
                        "type": "string",
                        "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
                    },
                    "command_id": {
                        "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same `command_id`.",
                        "type": "string",
                        "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
                    },
                    "link_to": {
                        "description": "Use another call's control id for sharing the same call session id",
                        "type": "string",
                        "example": "ilditnZK_eVysupV21KzmzN_sM29ygfauQojpm4BgFtfX5hXAcjotg=="
                    },
                    "sip_auth_username": {
                        "description": "SIP Authentication username used for SIP challenges.",
                        "type": "string"
                    },
                    "sip_auth_password": {
                        "description": "SIP Authentication password used for SIP challenges.",
                        "type": "string"
                    }
                }
            },
            "SpeakRequest": {
                "type": "object",
                "title": "Speak request",
                "required": [
                    "payload",
                    "voice",
                    "language"
                ],
                "properties": {
                    "payload": {
                        "description": "The text or SSML to be converted into speech. There is a 5,000 character limit.",
                        "type": "string",
                        "example": "Say this on the call"
                    },
                    "payload_type": {
                        "description": "The type of the provided payload. The payload can either be plain text, or Speech Synthesis Markup Language (SSML).",
                        "default": "text",
                        "type": "string",
                        "enum": [
                            "text",
                            "ssml"
                        ],
                        "example": "ssml"
                    },
                    "service_level": {
                        "description": "This parameter impacts speech quality, language options and payload types. When using `basic`, only the `en-US` language and payload type `text` are allowed.",
                        "default": "premium",
                        "type": "string",
                        "enum": [
                            "basic",
                            "premium"
                        ],
                        "example": "premium"
                    },
                    "stop": {
                        "description": "When specified, it stops the current audio being played.  Specify `current` to stop the current audio being played, and to play the next file in the queue. Specify `all` to stop the current audio file being played and to also clear all audio files from the queue.",
                        "type": "string",
                        "default": null,
                        "example": "current"
                    },
                    "voice": {
                        "description": "The gender of the voice used to speak back the text.",
                        "type": "string",
                        "enum": [
                            "male",
                            "female"
                        ],
                        "example": "female"
                    },
                    "language": {
                        "description": "The language you want spoken.",
                        "type": "string",
                        "enum": [
                            "arb",
                            "cmn-CN",
                            "cy-GB",
                            "da-DK",
                            "de-DE",
                            "en-AU",
                            "en-GB",
                            "en-GB-WLS",
                            "en-IN",
                            "en-US",
                            "es-ES",
                            "es-MX",
                            "es-US",
                            "fr-CA",
                            "fr-FR",
                            "hi-IN",
                            "is-IS",
                            "it-IT",
                            "ja-JP",
                            "ko-KR",
                            "nb-NO",
                            "nl-NL",
                            "pl-PL",
                            "pt-BR",
                            "pt-PT",
                            "ro-RO",
                            "ru-RU",
                            "sv-SE",
                            "tr-TR"
                        ],
                        "example": "en-US"
                    },
                    "client_state": {
                        "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.",
                        "type": "string",
                        "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
                    },
                    "command_id": {
                        "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same `command_id`.",
                        "type": "string",
                        "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
                    }
                },
                "example": {
                    "payload": "Say this on the call",
                    "payload_type": "text",
                    "service_level": "basic",
                    "stop": "current",
                    "voice": "female",
                    "language": "arb",
                    "client_state": "aGF2ZSBhIG5pY2UgZGF5ID1d",
                    "command_id": "891510ac-f3e4-11e8-af5b-de00688a4901"
                }
            },
            "BridgeRequest": {
                "type": "object",
                "title": "Bridge request",
                "required": [
                    "call_control_id"
                ],
                "properties": {
                    "call_control_id": {
                        "description": "The Call Control ID of the call you want to bridge with.",
                        "type": "string",
                        "example": "c8ac9611-25c3-494a-b8b4-2f036a18a6b2"
                    },
                    "client_state": {
                        "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.",
                        "type": "string",
                        "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
                    },
                    "command_id": {
                        "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same `command_id`.",
                        "type": "string",
                        "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
                    },
                    "park_after_unbridge": {
                        "description": "Specifies behavior after the bridge ends (i.e. the opposite leg either hangs up or is transferred). If supplied with the value `self`, the current leg will be parked after unbridge. If not set, the default behavior is to hang up the leg.",
                        "type": "string",
                        "example": "self"
                    }
                },
                "example": {
                    "call_control_id": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                    "client_state": "aGF2ZSBhIG5pY2UgZGF5ID1d",
                    "command_id": "891510ac-f3e4-11e8-af5b-de00688a4901",
                    "park_after_unbridge": "self"
                }
            },
            "CustomSipHeader": {
                "type": "object",
                "title": "Custom SIP header",
                "required": [
                    "name",
                    "value"
                ],
                "properties": {
                    "name": {
                        "description": "The name of the header to add.",
                        "type": "string",
                        "example": "head_1"
                    },
                    "value": {
                        "description": "The value of the header.",
                        "type": "string",
                        "example": "val_1"
                    }
                },
                "example": {
                    "name": "head_1",
                    "value": "val_1"
                }
            },
            "HangupRequest": {
                "type": "object",
                "title": "Hangup request",
                "properties": {
                    "client_state": {
                        "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.",
                        "type": "string",
                        "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
                    },
                    "command_id": {
                        "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same `command_id`.",
                        "type": "string",
                        "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
                    }
                },
                "example": {
                    "client_state": "aGF2ZSBhIG5pY2UgZGF5ID1d",
                    "command_id": "891510ac-f3e4-11e8-af5b-de00688a4901"
                }
            },
            "CallAnswered": {
                "type": "object",
                "title": "Call Answered",
                "properties": {
                    "record_type": {
                        "type": "string",
                        "example": "event",
                        "enum": [
                            "event"
                        ],
                        "description": "Identifies the type of the resource."
                    },
                    "event_type": {
                        "type": "string",
                        "example": "call.answered",
                        "enum": [
                            "call.answered"
                        ],
                        "description": "The type of event being delivered."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0",
                        "description": "Identifies the type of resource."
                    },
                    "occurred_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-02-02T22:25:27.521992Z",
                        "description": "ISO 8601 datetime of when the event occurred."
                    },
                    "payload": {
                        "type": "object",
                        "properties": {
                            "call_control_id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX",
                                "description": "Call ID used to issue commands via Call Control API."
                            },
                            "connection_id": {
                                "type": "string",
                                "example": "7267xxxxxxxxxxxxxx",
                                "description": "Telnyx connection ID used in the call."
                            },
                            "call_leg_id": {
                                "type": "string",
                                "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                                "description": "ID that is unique to the call and can be used to correlate webhook events."
                            },
                            "call_session_id": {
                                "type": "string",
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1",
                                "description": "ID that is unique to the call session and can be used to correlate webhook events."
                            },
                            "client_state": {
                                "type": "string",
                                "example": "aGF2ZSBhIG5pY2UgZGF5ID1d",
                                "description": "State received from a command."
                            },
                            "from": {
                                "type": "string",
                                "example": "+35319605860",
                                "description": "Number or SIP URI placing the call."
                            },
                            "to": {
                                "type": "string",
                                "example": "+13129457420",
                                "description": "Destination number or SIP URI of the call."
                            },
                            "state": {
                                "type": "string",
                                "example": "answered",
                                "enum": [
                                    "answered"
                                ],
                                "description": "State received from a command."
                            }
                        }
                    }
                },
                "example": {
                    "record_type": "event",
                    "event_type": "call.answered",
                    "id": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0",
                    "occurred_at": "2018-02-02T22:25:27.521992Z",
                    "payload": {
                        "call_control_id": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX",
                        "connection_id": "7267xxxxxxxxxxxxxx",
                        "call_leg_id": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                        "call_session_id": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                        "client_state": "aGF2ZSBhIG5pY2UgZGF5ID1d",
                        "from": "+35319605860",
                        "to": "+35319605860",
                        "state": "answered"
                    }
                }
            },
            "CallBridged": {
                "type": "object",
                "title": "Call Bridged",
                "properties": {
                    "record_type": {
                        "type": "string",
                        "example": "event",
                        "enum": [
                            "event"
                        ],
                        "description": "Identifies the type of the resource."
                    },
                    "event_type": {
                        "type": "string",
                        "example": "call.bridged",
                        "enum": [
                            "call.bridged"
                        ],
                        "description": "The type of event being delivered."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0",
                        "description": "Identifies the type of resource."
                    },
                    "occurred_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-02-02T22:25:27.521992Z",
                        "description": "ISO 8601 datetime of when the event occurred."
                    },
                    "payload": {
                        "type": "object",
                        "properties": {
                            "call_control_id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX",
                                "description": "Call ID used to issue commands via Call Control API."
                            },
                            "connection_id": {
                                "type": "string",
                                "example": "7267xxxxxxxxxxxxxx",
                                "description": "Telnyx connection ID used in the call."
                            },
                            "call_leg_id": {
                                "type": "string",
                                "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                                "description": "ID that is unique to the call and can be used to correlate webhook events."
                            },
                            "call_session_id": {
                                "type": "string",
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1",
                                "description": "ID that is unique to the call session and can be used to correlate webhook events."
                            },
                            "client_state": {
                                "type": "string",
                                "example": "aGF2ZSBhIG5pY2UgZGF5ID1d",
                                "description": "State received from a command."
                            },
                            "from": {
                                "type": "string",
                                "example": "+35319605860",
                                "description": "Number or SIP URI placing the call."
                            },
                            "to": {
                                "type": "string",
                                "example": "+13129457420",
                                "description": "Destination number or SIP URI of the call."
                            },
                            "state": {
                                "type": "string",
                                "example": "bridged",
                                "enum": [
                                    "bridged"
                                ],
                                "description": "State received from a command."
                            }
                        }
                    }
                },
                "example": {
                    "record_type": "event",
                    "event_type": "call.bridged",
                    "id": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0",
                    "occurred_at": "2018-02-02T22:25:27.521992Z",
                    "payload": {
                        "call_control_id": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX",
                        "connection_id": "7267xxxxxxxxxxxxxx",
                        "call_leg_id": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                        "call_session_id": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                        "client_state": "aGF2ZSBhIG5pY2UgZGF5ID1d",
                        "from": "+35319605860",
                        "to": "+35319605860",
                        "state": "bridged"
                    }
                }
            },
            "CallHangup": {
                "type": "object",
                "title": "Call Hangup",
                "properties": {
                    "record_type": {
                        "type": "string",
                        "example": "event",
                        "enum": [
                            "event"
                        ],
                        "description": "Identifies the type of the resource."
                    },
                    "event_type": {
                        "type": "string",
                        "example": "call.hangup",
                        "enum": [
                            "call.hangup"
                        ],
                        "description": "The type of event being delivered."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0",
                        "description": "Identifies the type of resource."
                    },
                    "occurred_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-02-02T22:25:27.521992Z",
                        "description": "ISO 8601 datetime of when the event occurred."
                    },
                    "payload": {
                        "type": "object",
                        "properties": {
                            "call_control_id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX",
                                "description": "Call ID used to issue commands via Call Control API."
                            },
                            "connection_id": {
                                "type": "string",
                                "example": "7267xxxxxxxxxxxxxx",
                                "description": "Telnyx connection ID used in the call."
                            },
                            "call_leg_id": {
                                "type": "string",
                                "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                                "description": "ID that is unique to the call and can be used to correlate webhook events."
                            },
                            "call_session_id": {
                                "type": "string",
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1",
                                "description": "ID that is unique to the call session and can be used to correlate webhook events."
                            },
                            "client_state": {
                                "type": "string",
                                "example": "aGF2ZSBhIG5pY2UgZGF5ID1d",
                                "description": "State received from a command."
                            },
                            "from": {
                                "type": "string",
                                "example": "+35319605860",
                                "description": "Number or SIP URI placing the call."
                            },
                            "to": {
                                "type": "string",
                                "example": "+13129457420",
                                "description": "Destination number or SIP URI of the call."
                            },
                            "state": {
                                "type": "string",
                                "example": "hangup",
                                "enum": [
                                    "hangup"
                                ],
                                "description": "State received from a command."
                            },
                            "hangup_cause": {
                                "type": "string",
                                "example": "call_rejected",
                                "enum": [
                                    "call_rejected",
                                    "normal_clearing",
                                    "originator_cancel",
                                    "timeout",
                                    "time_limit",
                                    "user_busy",
                                    "not_found",
                                    "unspecified"
                                ],
                                "description": "The reason the call was ended (`call_rejected`, `normal_clearing`, `originator_cancel`, `timeout`, `time_limit`, `user_busy`, `not_found` or `unspecified`)."
                            },
                            "hangup_source": {
                                "type": "string",
                                "example": "caller",
                                "enum": [
                                    "caller",
                                    "callee",
                                    "unknown"
                                ],
                                "description": "The party who ended the call (`callee`, `caller`, `unknown`)."
                            },
                            "sip_hangup_cause": {
                                "type": "string",
                                "example": "603",
                                "description": "The reason the call was ended (SIP response code). If the SIP response is unavailable (in inbound calls for example) this is set to `unspecified`."
                            }
                        }
                    }
                },
                "example": {
                    "record_type": "event",
                    "event_type": "call.hangup",
                    "id": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0",
                    "occurred_at": "2018-02-02T22:25:27.521992Z",
                    "payload": {
                        "call_control_id": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX",
                        "connection_id": "7267xxxxxxxxxxxxxx",
                        "call_leg_id": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                        "call_session_id": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                        "client_state": "aGF2ZSBhIG5pY2UgZGF5ID1d",
                        "from": "+35319605860",
                        "to": "+35319605860",
                        "state": "hangup",
                        "hangup_cause": "call_rejected",
                        "hangup_source": "caller",
                        "sip_hangup_cause": "603"
                    }
                }
            },
            "CallInitiated": {
                "type": "object",
                "title": "Call Initiated",
                "properties": {
                    "record_type": {
                        "type": "string",
                        "example": "event",
                        "enum": [
                            "event"
                        ],
                        "description": "Identifies the type of the resource."
                    },
                    "event_type": {
                        "type": "string",
                        "example": "call.initiated",
                        "enum": [
                            "call.initiated"
                        ],
                        "description": "The type of event being delivered."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0",
                        "description": "Identifies the type of resource."
                    },
                    "occurred_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-02-02T22:25:27.521992Z",
                        "description": "ISO 8601 datetime of when the event occurred."
                    },
                    "payload": {
                        "type": "object",
                        "properties": {
                            "call_control_id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX",
                                "description": "Call ID used to issue commands via Call Control API."
                            },
                            "connection_id": {
                                "type": "string",
                                "example": "7267xxxxxxxxxxxxxx",
                                "description": "Telnyx connection ID used in the call."
                            },
                            "call_leg_id": {
                                "type": "string",
                                "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                                "description": "ID that is unique to the call and can be used to correlate webhook events."
                            },
                            "call_session_id": {
                                "type": "string",
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1",
                                "description": "ID that is unique to the call session and can be used to correlate webhook events."
                            },
                            "client_state": {
                                "type": "string",
                                "example": "aGF2ZSBhIG5pY2UgZGF5ID1d",
                                "description": "State received from a command."
                            },
                            "from": {
                                "type": "string",
                                "example": "+35319605860",
                                "description": "Number or SIP URI placing the call."
                            },
                            "to": {
                                "type": "string",
                                "example": "+13129457420",
                                "description": "Destination number or SIP URI of the call."
                            },
                            "direction": {
                                "type": "string",
                                "example": "incoming",
                                "enum": [
                                    "incoming",
                                    "outgoing"
                                ],
                                "description": "Whether the call is `incoming` or `outgoing`."
                            },
                            "state": {
                                "type": "string",
                                "example": "parked",
                                "enum": [
                                    "parked"
                                ],
                                "description": "State received from a command."
                            }
                        }
                    }
                },
                "example": {
                    "record_type": "event",
                    "event_type": "call.initiated",
                    "id": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0",
                    "occurred_at": "2018-02-02T22:25:27.521992Z",
                    "payload": {
                        "call_control_id": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX",
                        "connection_id": "7267xxxxxxxxxxxxxx",
                        "call_leg_id": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                        "call_session_id": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                        "client_state": "aGF2ZSBhIG5pY2UgZGF5ID1d",
                        "from": "+35319605860",
                        "to": "+35319605860",
                        "direction": "incoming",
                        "state": "parked"
                    }
                }
            },
            "CallDtmfReceived": {
                "type": "object",
                "title": "Call DTMF Received",
                "properties": {
                    "record_type": {
                        "type": "string",
                        "example": "event",
                        "enum": [
                            "event"
                        ],
                        "description": "Identifies the type of the resource."
                    },
                    "event_type": {
                        "type": "string",
                        "example": "call.dtmf.received",
                        "enum": [
                            "call.dtmf.received"
                        ],
                        "description": "The type of event being delivered."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0",
                        "description": "Identifies the type of resource."
                    },
                    "occurred_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-02-02T22:25:27.521992Z",
                        "description": "ISO 8601 datetime of when the event occurred."
                    },
                    "payload": {
                        "type": "object",
                        "properties": {
                            "call_control_id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX",
                                "description": "Call ID used to issue commands via Call Control API."
                            },
                            "connection_id": {
                                "type": "string",
                                "example": "7267xxxxxxxxxxxxxx",
                                "description": "Identifies the type of resource."
                            },
                            "call_leg_id": {
                                "type": "string",
                                "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                                "description": "ID that is unique to the call and can be used to correlate webhook events."
                            },
                            "call_session_id": {
                                "type": "string",
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1",
                                "description": "ID that is unique to the call session and can be used to correlate webhook events."
                            },
                            "client_state": {
                                "type": "string",
                                "example": "aGF2ZSBhIG5pY2UgZGF5ID1d",
                                "description": "State received from a command."
                            },
                            "from": {
                                "type": "string",
                                "example": "+35319605860",
                                "description": "Number or SIP URI placing the call."
                            },
                            "to": {
                                "type": "string",
                                "example": "+13129457420",
                                "description": "Destination number or SIP URI of the call."
                            },
                            "digit": {
                                "type": "string",
                                "example": "#",
                                "description": "The received DTMF digit or symbol."
                            }
                        }
                    }
                },
                "example": {
                    "record_type": "event",
                    "event_type": "call.dtmf.received",
                    "id": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0",
                    "occurred_at": "2018-02-02T22:25:27.521992Z",
                    "payload": {
                        "call_control_id": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX",
                        "connection_id": "7267xxxxxxxxxxxxxx",
                        "call_leg_id": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                        "call_session_id": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                        "client_state": "aGF2ZSBhIG5pY2UgZGF5ID1d",
                        "from": "+35319605860",
                        "to": "+35319605860",
                        "digit": "#"
                    }
                }
            },
            "CallGatherEnded": {
                "type": "object",
                "title": "Call Gather Ended",
                "properties": {
                    "record_type": {
                        "type": "string",
                        "example": "event",
                        "enum": [
                            "event"
                        ],
                        "description": "Identifies the type of the resource."
                    },
                    "event_type": {
                        "type": "string",
                        "example": "call.gather.ended",
                        "enum": [
                            "call.gather.ended"
                        ],
                        "description": "The type of event being delivered."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0",
                        "description": "Identifies the type of resource."
                    },
                    "occurred_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-02-02T22:25:27.521992Z",
                        "description": "ISO 8601 datetime of when the event occurred."
                    },
                    "payload": {
                        "type": "object",
                        "properties": {
                            "call_control_id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX",
                                "description": "Call ID used to issue commands via Call Control API."
                            },
                            "connection_id": {
                                "type": "string",
                                "example": "7267xxxxxxxxxxxxxx",
                                "description": "Telnyx connection ID used in the call."
                            },
                            "call_leg_id": {
                                "type": "string",
                                "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                                "description": "ID that is unique to the call and can be used to correlate webhook events."
                            },
                            "call_session_id": {
                                "type": "string",
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1",
                                "description": "ID that is unique to the call session and can be used to correlate webhook events."
                            },
                            "client_state": {
                                "type": "string",
                                "example": "aGF2ZSBhIG5pY2UgZGF5ID1d",
                                "description": "State received from a command."
                            },
                            "from": {
                                "type": "string",
                                "example": "+35319605860",
                                "description": "Number or SIP URI placing the call."
                            },
                            "to": {
                                "type": "string",
                                "example": "+13129457420",
                                "description": "Destination number or SIP URI of the call."
                            },
                            "digits": {
                                "type": "string",
                                "example": "5503",
                                "description": "The received DTMF digit or symbol."
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "valid",
                                    "invalid",
                                    "call_hangup",
                                    "cancelled",
                                    "cancelled_amd"
                                ],
                                "example": "valid",
                                "description": "Reflects how command ended."
                            }
                        }
                    }
                },
                "example": {
                    "record_type": "event",
                    "event_type": "call.gather.ended",
                    "id": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0",
                    "occurred_at": "2018-02-02T22:25:27.521992Z",
                    "payload": {
                        "call_control_id": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX",
                        "connection_id": "7267xxxxxxxxxxxxxx",
                        "call_leg_id": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                        "call_session_id": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                        "client_state": "aGF2ZSBhIG5pY2UgZGF5ID1d",
                        "from": "+35319605860",
                        "to": "+35319605860",
                        "digits": "123",
                        "status": "valid"
                    }
                }
            },
            "CallPlaybackStarted": {
                "type": "object",
                "title": "Call Playback Started",
                "properties": {
                    "record_type": {
                        "type": "string",
                        "example": "event",
                        "enum": [
                            "event"
                        ],
                        "description": "Identifies the type of the resource."
                    },
                    "event_type": {
                        "type": "string",
                        "example": "call.playback.started",
                        "enum": [
                            "call.playback.started"
                        ],
                        "description": "The type of event being delivered."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0",
                        "description": "Identifies the type of resource."
                    },
                    "occurred_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-02-02T22:25:27.521992Z",
                        "description": "ISO 8601 datetime of when the event occurred."
                    },
                    "payload": {
                        "type": "object",
                        "properties": {
                            "call_control_id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX",
                                "description": "Call ID used to issue commands via Call Control API."
                            },
                            "connection_id": {
                                "type": "string",
                                "example": "7267xxxxxxxxxxxxxx",
                                "description": "Telnyx connection ID used in the call."
                            },
                            "call_leg_id": {
                                "type": "string",
                                "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                                "description": "ID that is unique to the call and can be used to correlate webhook events."
                            },
                            "call_session_id": {
                                "type": "string",
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1",
                                "description": "ID that is unique to the call session and can be used to correlate webhook events."
                            },
                            "client_state": {
                                "type": "string",
                                "example": "aGF2ZSBhIG5pY2UgZGF5ID1d",
                                "description": "State received from a command."
                            },
                            "media_url": {
                                "type": "string",
                                "example": "http://example.com/audio.wav",
                                "description": "The audio URL being played back."
                            },
                            "overlay": {
                                "type": "boolean",
                                "example": "false",
                                "description": "Whether the audio is going to be played in overlay mode or not."
                            }
                        }
                    }
                },
                "example": {
                    "record_type": "event",
                    "event_type": "call.playback.started",
                    "id": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0",
                    "occurred_at": "2018-02-02T22:25:27.521992Z",
                    "payload": {
                        "call_control_id": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX",
                        "connection_id": "7267xxxxxxxxxxxxxx",
                        "call_leg_id": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                        "call_session_id": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                        "client_state": "aGF2ZSBhIG5pY2UgZGF5ID1d",
                        "media_url": "http://example.com/audio.wav",
                        "overlay": false
                    }
                }
            },
            "CallPlaybackEnded": {
                "type": "object",
                "title": "Call Playback Ended",
                "properties": {
                    "record_type": {
                        "type": "string",
                        "example": "event",
                        "enum": [
                            "event"
                        ],
                        "description": "Identifies the type of the resource."
                    },
                    "event_type": {
                        "type": "string",
                        "example": "call.playback.ended",
                        "enum": [
                            "call.playback.ended"
                        ],
                        "description": "The type of event being delivered."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0",
                        "description": "Identifies the type of resource."
                    },
                    "occurred_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-02-02T22:25:27.521992Z",
                        "description": "ISO 8601 datetime of when the event occurred."
                    },
                    "payload": {
                        "type": "object",
                        "properties": {
                            "call_control_id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX",
                                "description": "Call ID used to issue commands via Call Control API."
                            },
                            "connection_id": {
                                "type": "string",
                                "example": "7267xxxxxxxxxxxxxx",
                                "description": "Telnyx connection ID used in the call."
                            },
                            "call_leg_id": {
                                "type": "string",
                                "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                                "description": "ID that is unique to the call and can be used to correlate webhook events."
                            },
                            "call_session_id": {
                                "type": "string",
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1",
                                "description": "ID that is unique to the call session and can be used to correlate webhook events."
                            },
                            "client_state": {
                                "type": "string",
                                "example": "aGF2ZSBhIG5pY2UgZGF5ID1d",
                                "description": "State received from a command."
                            },
                            "media_url": {
                                "type": "string",
                                "example": "http://example.com/audio.wav",
                                "description": "The audio URL being played back."
                            },
                            "overlay": {
                                "type": "boolean",
                                "example": "false",
                                "description": "Whether the audio is going to be played in overlay mode or not."
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "valid",
                                    "invalid",
                                    "call_hangup"
                                ],
                                "example": "valid",
                                "description": "Reflects how command ended."
                            }
                        }
                    }
                },
                "example": {
                    "record_type": "event",
                    "event_type": "call.playback.ended",
                    "id": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0",
                    "occurred_at": "2018-02-02T22:25:27.521992Z",
                    "payload": {
                        "call_control_id": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX",
                        "connection_id": "7267xxxxxxxxxxxxxx",
                        "call_leg_id": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                        "call_session_id": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                        "client_state": "aGF2ZSBhIG5pY2UgZGF5ID1d",
                        "media_url": "http://example.com/audio.wav",
                        "overlay": false,
                        "status": "valid"
                    }
                }
            },
            "CallSpeakStarted": {
                "type": "object",
                "title": "Call Speak Started",
                "properties": {
                    "record_type": {
                        "type": "string",
                        "example": "event",
                        "enum": [
                            "event"
                        ],
                        "description": "Identifies the type of the resource."
                    },
                    "event_type": {
                        "type": "string",
                        "example": "call.speak.started",
                        "enum": [
                            "call.speak.started"
                        ],
                        "description": "The type of event being delivered."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0",
                        "description": "Identifies the type of resource."
                    },
                    "occurred_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-02-02T22:25:27.521992Z",
                        "description": "ISO 8601 datetime of when the event occurred."
                    },
                    "payload": {
                        "type": "object",
                        "properties": {
                            "call_control_id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX",
                                "description": "Call ID used to issue commands via Call Control API."
                            },
                            "connection_id": {
                                "type": "string",
                                "example": "7267xxxxxxxxxxxxxx",
                                "description": "Telnyx connection ID used in the call."
                            },
                            "call_leg_id": {
                                "type": "string",
                                "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                                "description": "ID that is unique to the call and can be used to correlate webhook events."
                            },
                            "call_session_id": {
                                "type": "string",
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1",
                                "description": "ID that is unique to the call session and can be used to correlate webhook events."
                            },
                            "client_state": {
                                "type": "string",
                                "example": "aGF2ZSBhIG5pY2UgZGF5ID1d",
                                "description": "State received from a command."
                            }
                        }
                    }
                },
                "example": {
                    "record_type": "event",
                    "event_type": "call.speak.started",
                    "id": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0",
                    "occurred_at": "2018-02-02T22:25:27.521992Z",
                    "payload": {
                        "call_control_id": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX",
                        "connection_id": "7267xxxxxxxxxxxxxx",
                        "call_leg_id": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                        "call_session_id": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                        "client_state": "aGF2ZSBhIG5pY2UgZGF5ID1d"
                    }
                }
            },
            "CallSpeakEnded": {
                "type": "object",
                "title": "Call Speak Ended",
                "properties": {
                    "record_type": {
                        "type": "string",
                        "example": "event",
                        "enum": [
                            "event"
                        ],
                        "description": "Identifies the type of the resource."
                    },
                    "event_type": {
                        "type": "string",
                        "example": "call.speak.ended",
                        "enum": [
                            "call.speak.ended"
                        ],
                        "description": "The type of event being delivered."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0",
                        "description": "Identifies the type of resource."
                    },
                    "occurred_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-02-02T22:25:27.521992Z",
                        "description": "ISO 8601 datetime of when the event occurred."
                    },
                    "payload": {
                        "type": "object",
                        "properties": {
                            "call_control_id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX",
                                "description": "Call ID used to issue commands via Call Control API."
                            },
                            "connection_id": {
                                "type": "string",
                                "example": "7267xxxxxxxxxxxxxx",
                                "description": "Telnyx connection ID used in the call."
                            },
                            "call_leg_id": {
                                "type": "string",
                                "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                                "description": "ID that is unique to the call and can be used to correlate webhook events."
                            },
                            "call_session_id": {
                                "type": "string",
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1",
                                "description": "ID that is unique to the call session and can be used to correlate webhook events."
                            },
                            "client_state": {
                                "type": "string",
                                "example": "aGF2ZSBhIG5pY2UgZGF5ID1d",
                                "description": "State received from a command."
                            },
                            "status": {
                                "type": "string",
                                "example": "completed",
                                "enum": [
                                    "completed",
                                    "call_hangup"
                                ],
                                "description": "Reflects how `speak` ended."
                            }
                        }
                    }
                },
                "example": {
                    "record_type": "event",
                    "event_type": "call.speak.ended",
                    "id": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0",
                    "occurred_at": "2018-02-02T22:25:27.521992Z",
                    "payload": {
                        "call_control_id": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX",
                        "connection_id": "7267xxxxxxxxxxxxxx",
                        "call_leg_id": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                        "call_session_id": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                        "client_state": "aGF2ZSBhIG5pY2UgZGF5ID1d",
                        "status": "completed"
                    }
                }
            },
            "CallRecordingSaved": {
                "type": "object",
                "title": "Call Recording Saved",
                "properties": {
                    "record_type": {
                        "type": "string",
                        "example": "event",
                        "enum": [
                            "event"
                        ],
                        "description": "Identifies the type of the resource."
                    },
                    "event_type": {
                        "type": "string",
                        "example": "call.recording.saved",
                        "enum": [
                            "call.recording.saved"
                        ],
                        "description": "The type of event being delivered."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0",
                        "description": "Identifies the type of resource."
                    },
                    "occurred_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-02-02T22:25:27.521992Z",
                        "description": "ISO 8601 datetime of when the event occurred."
                    },
                    "payload": {
                        "type": "object",
                        "properties": {
                            "call_leg_id": {
                                "type": "string",
                                "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                                "description": "ID that is unique to the call and can be used to correlate webhook events."
                            },
                            "call_session_id": {
                                "type": "string",
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1",
                                "description": "ID that is unique to the call session and can be used to correlate webhook events."
                            },
                            "connection_id": {
                                "type": "string",
                                "example": "7267xxxxxxxxxxxxxx",
                                "description": "Telnyx connection ID used in the call."
                            },
                            "client_state": {
                                "type": "string",
                                "example": "aGF2ZSBhIG5pY2UgZGF5ID1d",
                                "description": "State received from a command."
                            },
                            "recording_started_at": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2018-02-02T22:20:27.521992Z",
                                "description": "ISO 8601 datetime of when recording started."
                            },
                            "recording_ended_at": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2018-02-02T22:25:27.521992Z",
                                "description": "ISO 8601 datetime of when recording ended."
                            },
                            "channels": {
                                "type": "string",
                                "example": "single",
                                "enum": [
                                    "single",
                                    "dual"
                                ],
                                "description": "Whether recording was recorded in `single` or `dual` channel."
                            },
                            "recording_urls": {
                                "type": "object",
                                "description": "Recording URLs in requested format valid for 10 minutes. After 10 minutes, you may retrieve recordings via API using Reports -> Call Recordings documentation, or via Mission Control under Reporting -> Recordings.",
                                "properties": {
                                    "mp3": {
                                        "type": "string",
                                        "nullable": true,
                                        "example": "http://example.com/recording.mp3",
                                        "description": "Recording URL in requested `mp3` format."
                                    },
                                    "wav": {
                                        "type": "string",
                                        "nullable": true,
                                        "example": "http://example.com/recording.wav",
                                        "description": "Recording URL in requested `wav` format."
                                    }
                                }
                            },
                            "public_recording_urls": {
                                "type": "object",
                                "description": "Recording URLs in requested format. The URL is valid for as long as the file exists. For security purposes, this feature is activated on a per request basis.  Please contact customer support with your Account ID to request activation.",
                                "properties": {
                                    "mp3": {
                                        "type": "string",
                                        "nullable": true,
                                        "example": "http://example.com/recording.mp3",
                                        "description": "Recording URL in requested `mp3` format."
                                    },
                                    "wav": {
                                        "type": "string",
                                        "nullable": true,
                                        "example": "http://example.com/recording.wav",
                                        "description": "Recording URL in requested `wav` format."
                                    }
                                }
                            }
                        }
                    }
                },
                "example": {
                    "record_type": "event",
                    "event_type": "call.recording.started",
                    "id": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0",
                    "occurred_at": "2018-02-02T22:25:27.521992Z",
                    "payload": {
                        "call_control_id": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX",
                        "connection_id": "7267xxxxxxxxxxxxxx",
                        "call_leg_id": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                        "call_session_id": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                        "client_state": "aGF2ZSBhIG5pY2UgZGF5ID1d",
                        "recording_started_at": "2018-02-02T22:20:27.521992Z",
                        "recording_ended_at": "2018-02-02T22:20:27.521992Z",
                        "channels": "single",
                        "recording_urls": {
                            "mp3": "http://example.com/recording.mp3",
                            "wav": "http://example.com/recording.wav"
                        },
                        "public_recording_urls": {
                            "mp3": "http://example.com/recording.mp3",
                            "wav": "http://example.com/recording.wav"
                        }
                    }
                }
            },
            "ConferenceRecordingSaved": {
                "type": "object",
                "title": "Conference Recording Saved",
                "properties": {
                    "record_type": {
                        "type": "string",
                        "example": "event",
                        "enum": [
                            "event"
                        ],
                        "description": "Identifies the type of the resource."
                    },
                    "event_type": {
                        "type": "string",
                        "example": "conference.recording.saved",
                        "enum": [
                            "conference.recording.saved"
                        ],
                        "description": "The type of event being delivered."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0",
                        "description": "Identifies the type of resource."
                    },
                    "occurred_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-02-02T22:25:27.521992Z",
                        "description": "ISO 8601 datetime of when the event occurred."
                    },
                    "payload": {
                        "type": "object",
                        "properties": {
                            "conference_id": {
                                "type": "string",
                                "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                                "description": "ID that is unique to the conference and can be used to correlate webhook events."
                            },
                            "connection_id": {
                                "type": "string",
                                "example": "7267xxxxxxxxxxxxxx",
                                "description": "Telnyx connection ID used in the call."
                            },
                            "recording_id": {
                                "type": "string",
                                "example": "11111111-1111-1111-1111-111111111112",
                                "description": "ID of the recording."
                            },
                            "recording_started_at": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2018-02-02T22:20:27.521992Z",
                                "description": "ISO 8601 datetime of when recording started."
                            },
                            "recording_ended_at": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2018-02-02T22:25:27.521992Z",
                                "description": "ISO 8601 datetime of when recording ended."
                            },
                            "channels": {
                                "type": "string",
                                "example": "single",
                                "enum": [
                                    "single",
                                    "dual"
                                ],
                                "description": "Whether recording was recorded in `single` or `dual` channel."
                            },
                            "recording_urls": {
                                "type": "object",
                                "description": "Recording URLs in requested format valid for 10 minutes. After 10 minutes, you may retrieve recordings via API using Reports -> Call Recordings documentation, or via Mission Control under Reporting -> Recordings.",
                                "properties": {
                                    "mp3": {
                                        "type": "string",
                                        "nullable": true,
                                        "example": "http://example.com/recording.mp3",
                                        "description": "Recording URL in requested `mp3` format."
                                    },
                                    "wav": {
                                        "type": "string",
                                        "nullable": true,
                                        "example": "http://example.com/recording.wav",
                                        "description": "Recording URL in requested `wav` format."
                                    }
                                }
                            },
                            "public_recording_urls": {
                                "type": "object",
                                "description": "Recording URLs in requested format. The URL is valid for as long as the file exists. For security purposes, this feature is activated on a per request basis.  Please contact customer support with your Account ID to request activation.",
                                "properties": {
                                    "mp3": {
                                        "type": "string",
                                        "nullable": true,
                                        "example": "http://example.com/recording.mp3",
                                        "description": "Recording URL in requested `mp3` format."
                                    },
                                    "wav": {
                                        "type": "string",
                                        "nullable": true,
                                        "example": "http://example.com/recording.wav",
                                        "description": "Recording URL in requested `wav` format."
                                    }
                                }
                            }
                        }
                    }
                },
                "example": {
                    "record_type": "event",
                    "event_type": "conference.recording.started",
                    "id": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0",
                    "occurred_at": "2018-02-02T22:25:27.521992Z",
                    "payload": {
                        "connection_id": "7267xxxxxxxxxxxxxx",
                        "conference_id": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                        "recording_id": "11111111-1111-1111-1111-111111111112",
                        "recording_started_at": "2018-02-02T22:20:27.521992Z",
                        "recording_ended_at": "2018-02-02T22:20:27.521992Z",
                        "channels": "single",
                        "recording_urls": {
                            "mp3": "http://example.com/recording.mp3",
                            "wav": "http://example.com/recording.wav"
                        },
                        "public_recording_urls": {
                            "mp3": "http://example.com/recording.mp3",
                            "wav": "http://example.com/recording.wav"
                        }
                    }
                }
            },
            "CallForkStarted": {
                "type": "object",
                "title": "Call Fork Started",
                "properties": {
                    "record_type": {
                        "type": "string",
                        "example": "event",
                        "enum": [
                            "event"
                        ],
                        "description": "Identifies the type of the resource."
                    },
                    "event_type": {
                        "type": "string",
                        "example": "call.fork.started",
                        "enum": [
                            "call.fork.started"
                        ],
                        "description": "The type of event being delivered."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0",
                        "description": "Identifies the type of resource."
                    },
                    "occurred_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-02-02T22:25:27.521992Z",
                        "description": "ISO 8601 datetime of when the event occurred."
                    },
                    "payload": {
                        "type": "object",
                        "properties": {
                            "connection_id": {
                                "type": "string",
                                "example": "7267xxxxxxxxxxxxxx",
                                "description": "Telnyx connection ID used in the call."
                            },
                            "call_leg_id": {
                                "type": "string",
                                "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                                "description": "ID that is unique to the call and can be used to correlate webhook events."
                            },
                            "call_session_id": {
                                "type": "string",
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1",
                                "description": "ID that is unique to the call session and can be used to correlate webhook events."
                            }
                        }
                    }
                },
                "example": {
                    "record_type": "event",
                    "event_type": "call.fork.started",
                    "id": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0",
                    "occurred_at": "2018-02-02T22:25:27.521992Z",
                    "payload": {
                        "connection_id": "7267xxxxxxxxxxxxxx",
                        "call_leg_id": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                        "call_session_id": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1"
                    }
                }
            },
            "CallForkStopped": {
                "type": "object",
                "title": "Call Fork Stopped",
                "properties": {
                    "record_type": {
                        "type": "string",
                        "example": "event",
                        "enum": [
                            "event"
                        ],
                        "description": "Identifies the type of the resource."
                    },
                    "event_type": {
                        "type": "string",
                        "example": "call.fork.stopped",
                        "enum": [
                            "call.fork.stopped"
                        ],
                        "description": "The type of event being delivered."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0",
                        "description": "Identifies the type of resource."
                    },
                    "occurred_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-02-02T22:25:27.521992Z",
                        "description": "ISO 8601 datetime of when the event occurred."
                    },
                    "payload": {
                        "type": "object",
                        "properties": {
                            "connection_id": {
                                "type": "string",
                                "example": "7267xxxxxxxxxxxxxx",
                                "description": "Telnyx connection ID used in the call."
                            },
                            "call_leg_id": {
                                "type": "string",
                                "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                                "description": "ID that is unique to the call and can be used to correlate webhook events."
                            },
                            "call_session_id": {
                                "type": "string",
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1",
                                "description": "ID that is unique to the call session and can be used to correlate webhook events."
                            }
                        }
                    }
                },
                "example": {
                    "record_type": "event",
                    "event_type": "call.fork.stopped",
                    "id": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0",
                    "occurred_at": "2018-02-02T22:25:27.521992Z",
                    "payload": {
                        "connection_id": "7267xxxxxxxxxxxxxx",
                        "call_leg_id": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                        "call_session_id": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1"
                    }
                }
            },
            "CallMachineDetectionEnded": {
                "type": "object",
                "title": "Call Machine Detection Ended",
                "properties": {
                    "record_type": {
                        "type": "string",
                        "example": "event",
                        "enum": [
                            "event"
                        ],
                        "description": "Identifies the type of the resource."
                    },
                    "event_type": {
                        "type": "string",
                        "example": "call.machine.detection.ended",
                        "enum": [
                            "call.machine.detection.ended"
                        ],
                        "description": "The type of event being delivered."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0",
                        "description": "Identifies the type of resource."
                    },
                    "occurred_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-02-02T22:25:27.521992Z",
                        "description": "ISO 8601 datetime of when the event occurred."
                    },
                    "payload": {
                        "type": "object",
                        "properties": {
                            "call_control_id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX",
                                "description": "Call ID used to issue commands via Call Control API."
                            },
                            "connection_id": {
                                "type": "string",
                                "example": "7267xxxxxxxxxxxxxx",
                                "description": "Telnyx connection ID used in the call."
                            },
                            "call_leg_id": {
                                "type": "string",
                                "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                                "description": "ID that is unique to the call and can be used to correlate webhook events."
                            },
                            "call_session_id": {
                                "type": "string",
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1",
                                "description": "ID that is unique to the call session and can be used to correlate webhook events."
                            },
                            "client_state": {
                                "type": "string",
                                "example": "aGF2ZSBhIG5pY2UgZGF5ID1d",
                                "description": "State received from a command."
                            },
                            "from": {
                                "type": "string",
                                "example": "+35319605860",
                                "description": "Number or SIP URI placing the call."
                            },
                            "to": {
                                "type": "string",
                                "example": "+13129457420",
                                "description": "Destination number or SIP URI of the call."
                            },
                            "result": {
                                "type": "string",
                                "example": "machine",
                                "enum": [
                                    "human",
                                    "machine",
                                    "not_sure"
                                ],
                                "description": "Answering machine detection result."
                            }
                        }
                    }
                },
                "example": {
                    "record_type": "event",
                    "event_type": "call.detection.ended",
                    "id": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0",
                    "occurred_at": "2018-02-02T22:25:27.521992Z",
                    "payload": {
                        "connection_id": "7267xxxxxxxxxxxxxx",
                        "call_leg_id": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                        "call_session_id": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                        "client_state": "aGF2ZSBhIG5pY2UgZGF5ID1d",
                        "from": "+35319605860",
                        "to": "+35319605860",
                        "result": "human"
                    }
                }
            },
            "CallMachineGreetingEnded": {
                "type": "object",
                "title": "Call Machine Greeting Ended",
                "properties": {
                    "record_type": {
                        "type": "string",
                        "example": "event",
                        "enum": [
                            "event"
                        ],
                        "description": "Identifies the type of the resource."
                    },
                    "event_type": {
                        "type": "string",
                        "example": "call.machine.greeting.ended",
                        "enum": [
                            "call.machine.greeting.ended"
                        ],
                        "description": "The type of event being delivered."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0",
                        "description": "Identifies the type of resource."
                    },
                    "occurred_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-02-02T22:25:27.521992Z",
                        "description": "ISO 8601 datetime of when the event occurred."
                    },
                    "payload": {
                        "type": "object",
                        "properties": {
                            "call_control_id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX",
                                "description": "Call ID used to issue commands via Call Control API."
                            },
                            "connection_id": {
                                "type": "string",
                                "example": "7267xxxxxxxxxxxxxx",
                                "description": "Telnyx connection ID used in the call."
                            },
                            "call_leg_id": {
                                "type": "string",
                                "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                                "description": "ID that is unique to the call and can be used to correlate webhook events."
                            },
                            "call_session_id": {
                                "type": "string",
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1",
                                "description": "ID that is unique to the call session and can be used to correlate webhook events."
                            },
                            "client_state": {
                                "type": "string",
                                "example": "aGF2ZSBhIG5pY2UgZGF5ID1d",
                                "description": "State received from a command."
                            },
                            "from": {
                                "type": "string",
                                "example": "+35319605860",
                                "description": "Number or SIP URI placing the call."
                            },
                            "to": {
                                "type": "string",
                                "example": "+13129457420",
                                "description": "Destination number or SIP URI of the call."
                            },
                            "result": {
                                "type": "string",
                                "example": "ended",
                                "enum": [
                                    "ended",
                                    "not_sure"
                                ],
                                "description": "Answering machine greeting ended result."
                            }
                        }
                    }
                },
                "example": {
                    "record_type": "event",
                    "event_type": "call.machine.greeting.ended",
                    "id": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0",
                    "occurred_at": "2018-02-02T22:25:27.521992Z",
                    "payload": {
                        "connection_id": "7267xxxxxxxxxxxxxx",
                        "call_leg_id": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                        "call_session_id": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                        "client_state": "aGF2ZSBhIG5pY2UgZGF5ID1d",
                        "from": "+35319605860",
                        "to": "+35319605860",
                        "result": "ended"
                    }
                }
            },
            "Conference": {
                "type": "object",
                "title": "Conference",
                "required": [
                    "record_type",
                    "id",
                    "name",
                    "created_at",
                    "expires_at"
                ],
                "properties": {
                    "record_type": {
                        "type": "string",
                        "enum": [
                            "conference"
                        ],
                        "example": "conference"
                    },
                    "id": {
                        "type": "string",
                        "description": "Uniquely identifies the conference",
                        "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the conference",
                        "example": "All hands meeting"
                    },
                    "created_at": {
                        "type": "string",
                        "description": "ISO 8601 formatted date of when the conference was created",
                        "example": "2019-01-23T18:10:02.574Z"
                    },
                    "expires_at": {
                        "type": "string",
                        "description": "ISO 8601 formatted date of when the conference will expire",
                        "example": "2019-01-23T18:10:02.574Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "description": "ISO 8601 formatted date of when the conference was last updated",
                        "example": "2019-01-23T18:10:02.574Z"
                    },
                    "region": {
                        "type": "string",
                        "description": "Region where the conference is hosted",
                        "example": "sv1"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "init",
                            "in_progress",
                            "completed"
                        ],
                        "description": "Status of the conference",
                        "example": "completed"
                    },
                    "end_reason": {
                        "type": "string",
                        "enum": [
                            "all_left",
                            "ended_via_api",
                            "host_left",
                            "time_exceeded"
                        ],
                        "description": "Reason why the conference ended",
                        "example": "all_left"
                    },
                    "ended_by": {
                        "type": "object",
                        "description": "IDs related to who ended the conference. It is expected for them to all be there or all be null",
                        "properties": {
                            "call_control_id": {
                                "type": "string",
                                "description": "Call Control ID which ended the conference",
                                "example": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfXczRrZvZakpWxBlpw48KyZQ=="
                            },
                            "call_session_id": {
                                "type": "string",
                                "description": "Call Session ID which ended the conference",
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1"
                            }
                        }
                    }
                },
                "example": {
                    "record_type": "conference",
                    "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "name": "All hands meeting",
                    "created_at": "2019-01-23T18:10:02.574Z",
                    "expires_at": "2019-01-23T18:10:02.574Z",
                    "updated_at": "2019-01-23T18:10:02.574Z",
                    "region": "sv1",
                    "status": "completed",
                    "end_reason": "all_left",
                    "ended_by": {
                        "call_control_id": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfXczRrZvZakpWxBlpw48KyZQ==",
                        "call_session_id": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1"
                    }
                }
            },
            "Participant": {
                "type": "object",
                "title": "Participant",
                "required": [
                    "record_type",
                    "id",
                    "call_leg_id",
                    "call_control_id",
                    "conference",
                    "whisper_call_control_ids",
                    "created_at",
                    "updated_at",
                    "end_conference_on_exit",
                    "soft_end_conference_on_exit",
                    "status",
                    "muted",
                    "on_hold"
                ],
                "properties": {
                    "record_type": {
                        "type": "string",
                        "enum": [
                            "participant"
                        ],
                        "example": "participant"
                    },
                    "id": {
                        "type": "string",
                        "description": "Uniquely identifies the participant",
                        "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                    },
                    "call_leg_id": {
                        "type": "string",
                        "description": "Uniquely identifies the call leg associated with the participant",
                        "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                    },
                    "call_control_id": {
                        "type": "string",
                        "description": "Call Control ID associated with the partiipant of the conference",
                        "example": "v2:AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfXczRrZvZakpWxBlpw48KyZQ"
                    },
                    "conference": {
                        "type": "object",
                        "description": "Info about the conference that the participant is in",
                        "properties": {
                            "id": {
                                "type": "string",
                                "description": "Uniquely identifies the conference",
                                "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                            },
                            "name": {
                                "type": "string",
                                "description": "Name of the conference",
                                "example": "All hands meeting"
                            }
                        }
                    },
                    "whisper_call_control_ids": {
                        "description": "Array of unique call_control_ids the participant can whisper to..",
                        "example": [
                            "v2:Sg1xxxQ_U3ixxxyXT_VDNI3xxxazZdg6Vxxxs4-GNYxxxVaJPOhFMRQ",
                            "v2:qqpb0mmvd-ovhhBr0BUQQn0fld5jIboaaX3-De0DkqXHzbf8d75xkw"
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "description": "ISO 8601 formatted date of when the participant was created",
                        "example": "2019-01-23T18:10:02.574Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "description": "ISO 8601 formatted date of when the participant was last updated",
                        "example": "2019-01-23T18:10:02.574Z"
                    },
                    "end_conference_on_exit": {
                        "type": "boolean",
                        "description": "Whether the conference will end and all remaining participants be hung up after the participant leaves the conference.",
                        "example": true
                    },
                    "soft_end_conference_on_exit": {
                        "type": "boolean",
                        "description": "Whether the conference will end after the participant leaves the conference.",
                        "example": true
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "joining",
                            "joined",
                            "left"
                        ],
                        "description": "The status of the participant with respect to the lifecycle within the conference",
                        "example": "joining"
                    },
                    "muted": {
                        "type": "boolean",
                        "description": "Whether the participant is muted.",
                        "example": true
                    },
                    "on_hold": {
                        "type": "boolean",
                        "description": "Whether the participant is put on_hold.",
                        "example": true
                    }
                },
                "example": {
                    "record_type": "participant",
                    "id": "dfadada7-af74-47bc-83a4-554275f55f5c",
                    "call_leg_id": "3a15df2d-c801-4729-adf5-b56dd42e2abb",
                    "conference": {
                        "id": "41b9acd4-f4da-4ff5-a85c-e07e90b53f46",
                        "name": "1"
                    }
                }
            },
            "CreateConferenceRequest": {
                "required": [
                    "call_control_id",
                    "name"
                ],
                "type": "object",
                "title": "Create conference request",
                "properties": {
                    "call_control_id": {
                        "description": "Unique identifier and token for controlling the call",
                        "example": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfXczRrZvZakpWxBlpw48KyZQ==",
                        "type": "string"
                    },
                    "name": {
                        "description": "Name of the conference",
                        "example": "Business",
                        "type": "string"
                    },
                    "beep_enabled": {
                        "description": "Whether a beep sound should be played when participants join and/or leave the conference.",
                        "enum": [
                            "always",
                            "never",
                            "on_enter",
                            "on_exit"
                        ],
                        "example": "on_exit",
                        "type": "string"
                    },
                    "client_state": {
                        "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.",
                        "example": "aGF2ZSBhIG5pY2UgZGF5ID1d",
                        "type": "string"
                    },
                    "command_id": {
                        "description": "Use this field to avoid execution of duplicate commands. Telnyx will ignore subsequent commands with the same `command_id` as one that has already been executed.",
                        "example": "891510ac-f3e4-11e8-af5b-de00688a4901",
                        "type": "string"
                    },
                    "duration_minutes": {
                        "description": "Time length (minutes) after which the conference will end.",
                        "example": 5,
                        "type": "integer"
                    },
                    "hold_audio_url": {
                        "description": "The URL to an audio file to be played to participants joining the conference. Takes effect only when \"start_conference_on_create\" is set to \"false\".",
                        "example": "http://www.example.com/audio.wav",
                        "type": "string"
                    },
                    "start_conference_on_create": {
                        "description": "Whether the conference should be started on creation. If the conference isn't started all participants that join are automatically put on hold. Defaults to \"true\".",
                        "example": false,
                        "type": "boolean"
                    }
                },
                "example": {
                    "call_control_id": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX",
                    "name": "Business",
                    "beep_enabled": "always",
                    "client_state": "aGF2ZSBhIG5pY2UgZGF5ID1d",
                    "command_id": "891510ac-f3e4-11e8-af5b-de00688a4901",
                    "duration_minutes": 5,
                    "hold_audio_url": "http://www.example.com/audio.wav",
                    "start_conference_on_create": false
                }
            },
            "JoinConferenceRequest": {
                "required": [
                    "call_control_id"
                ],
                "type": "object",
                "title": "Join a conference request",
                "properties": {
                    "call_control_id": {
                        "description": "Unique identifier and token for controlling the call",
                        "example": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfXczRrZvZakpWxBlpw48KyZQ==",
                        "type": "string"
                    },
                    "client_state": {
                        "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.",
                        "example": "aGF2ZSBhIG5pY2UgZGF5ID1d",
                        "type": "string"
                    },
                    "command_id": {
                        "description": "Use this field to avoid execution of duplicate commands. Telnyx will ignore subsequent commands with the same `command_id` as one that has already been executed.",
                        "example": "891510ac-f3e4-11e8-af5b-de00688a4901",
                        "type": "string"
                    },
                    "end_conference_on_exit": {
                        "description": "Whether the conference should end and all remaining participants be hung up after the participant leaves the conference. Defaults to \"false\".",
                        "example": true,
                        "type": "boolean"
                    },
                    "soft_end_conference_on_exit": {
                        "description": "Whether the conference should end after the participant leaves the conference. NOTE this doesn't hang up the other participants. Defaults to \"false\".",
                        "example": true,
                        "type": "boolean"
                    },
                    "hold": {
                        "description": "Whether the participant should be put on hold immediately after joining the conference. Defaults to \"false\".",
                        "example": true,
                        "type": "boolean"
                    },
                    "hold_audio_url": {
                        "description": "The URL of an audio file to be played to the participant when they are put on hold after joining the conference. This property takes effect only if \"hold\" is set to \"true\".",
                        "example": "http://www.example.com/audio.wav",
                        "type": "string"
                    },
                    "mute": {
                        "description": "Whether the participant should be muted immediately after joining the conference. Defaults to \"false\".",
                        "example": true,
                        "type": "boolean"
                    },
                    "start_conference_on_enter": {
                        "description": "Whether the conference should be started after the participant joins the conference. Defaults to \"false\".",
                        "example": true,
                        "type": "boolean"
                    },
                    "supervisor_role": {
                        "description": "Sets the joining participant as a supervisor for the conference. A conference can have multiple supervisors. \"barge\" means the supervisor enters the conference as a normal participant. This is the same as \"none\". \"monitor\" means the supervisor is muted but can hear all participants. \"whisper\" means that only the specified \"whisper_call_control_ids\" can hear the supervisor. Defaults to \"none\".",
                        "example": "whisper",
                        "type": "string",
                        "enum": [
                            "barge",
                            "monitor",
                            "none",
                            "whisper"
                        ]
                    },
                    "whisper_call_control_ids": {
                        "description": "Array of unique call_control_ids the joining supervisor can whisper to. If none provided, the supervisor will join the conference as a monitoring participant only.",
                        "example": [
                            "v2:Sg1xxxQ_U3ixxxyXT_VDNI3xxxazZdg6Vxxxs4-GNYxxxVaJPOhFMRQ",
                            "v2:qqpb0mmvd-ovhhBr0BUQQn0fld5jIboaaX3-De0DkqXHzbf8d75xkw"
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "example": {
                    "call_control_id": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX",
                    "client_state": "aGF2ZSBhIG5pY2UgZGF5ID1d",
                    "command_id": "891510ac-f3e4-11e8-af5b-de00688a4901",
                    "end_conference_on_exit": true,
                    "hold": true,
                    "hold_audio_url": "http://www.example.com/audio.wav",
                    "mute": true,
                    "start_conference_on_enter": true,
                    "supervisor_role": "whisper",
                    "whisper_call_control_ids": [
                        "v2:Sg1xxxQ_U3ixxxyXT_VDNI3xxxazZdg6Vxxxs4-GNYxxxVaJPOhFMRQ",
                        "v2:qqpb0mmvd-ovhhBr0BUQQn0fld5jIboaaX3-De0DkqXHzbf8d75xkw"
                    ]
                }
            },
            "ConferenceMuteRequest": {
                "type": "object",
                "title": "Mute Conference participants request",
                "properties": {
                    "call_control_ids": {
                        "description": "Array of unique identifiers and tokens for controlling the call. When empty all participants will be muted.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "example": {
                    "call_control_ids": [
                        "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX"
                    ]
                }
            },
            "ConferenceUnmuteRequest": {
                "type": "object",
                "title": "Unmute Conference participants request",
                "properties": {
                    "call_control_ids": {
                        "description": "List of unique identifiers and tokens for controlling the call. Enter each call control ID to be unmuted. When empty all participants will be unmuted.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "example": {
                    "call_control_ids": [
                        "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX"
                    ]
                }
            },
            "ConferenceHoldRequest": {
                "type": "object",
                "title": "Hold Conference participants request",
                "properties": {
                    "call_control_ids": {
                        "description": "List of unique identifiers and tokens for controlling the call. When empty all participants will be placed on hold.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "audio_url": {
                        "type": "string",
                        "example": "http://example.com/message.wav",
                        "description": "The URL of a file to be played back at the beginning of each prompt. The URL can point to either a WAV or MP3 file."
                    }
                },
                "example": {
                    "call_control_ids": [
                        "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX"
                    ],
                    "audio_url": "http://example.com/message.wav"
                }
            },
            "ConferenceUnholdRequest": {
                "required": [
                    "call_control_ids"
                ],
                "type": "object",
                "title": "Unhold Conference participants request",
                "properties": {
                    "call_control_ids": {
                        "description": "List of unique identifiers and tokens for controlling the call. Enter each call control ID to be unheld.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "example": {
                    "call_control_ids": [
                        "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX"
                    ]
                }
            },
            "ConferenceCommandResult": {
                "type": "object",
                "title": "Command result",
                "required": [
                    "result"
                ],
                "properties": {
                    "result": {
                        "type": "string",
                        "example": "ok"
                    }
                },
                "example": {
                    "result": "ok"
                }
            },
            "ConferenceParticipantJoined": {
                "type": "object",
                "title": "Conference Participant Joined",
                "properties": {
                    "record_type": {
                        "type": "string",
                        "example": "event",
                        "enum": [
                            "event"
                        ],
                        "description": "Identifies the type of the resource."
                    },
                    "event_type": {
                        "type": "string",
                        "example": "conference.participant.joined",
                        "enum": [
                            "conference.participant.joined"
                        ],
                        "description": "The type of event being delivered."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0",
                        "description": "Identifies the type of resource."
                    },
                    "occurred_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-02-02T22:25:27.521Z",
                        "description": "ISO 8601 datetime of when the event occurred."
                    },
                    "payload": {
                        "type": "object",
                        "properties": {
                            "call_control_id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX",
                                "description": "Call ID used to issue commands via Call Control API."
                            },
                            "connection_id": {
                                "type": "string",
                                "example": "7267xxxxxxxxxxxxxx",
                                "description": "Telnyx connection ID used in the call."
                            },
                            "call_leg_id": {
                                "type": "string",
                                "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                                "description": "ID that is unique to the call and can be used to correlate webhook events."
                            },
                            "call_session_id": {
                                "type": "string",
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1",
                                "description": "ID that is unique to the call session and can be used to correlate webhook events."
                            },
                            "client_state": {
                                "type": "string",
                                "example": "aGF2ZSBhIG5pY2UgZGF5ID1d",
                                "description": "State received from a command."
                            },
                            "conference_id": {
                                "type": "string",
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1",
                                "description": "Conference ID that the participant joined."
                            }
                        }
                    }
                },
                "example": {
                    "record_type": "event",
                    "event_type": "conference.participant.joined",
                    "id": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0",
                    "occurred_at": "2018-02-02T22:25:27.521992Z",
                    "payload": {
                        "call_control_id": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX",
                        "connection_id": "7267xxxxxxxxxxxxxx",
                        "call_leg_id": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                        "call_session_id": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                        "client_state": "aGF2ZSBhIG5pY2UgZGF5ID1d",
                        "conference_id": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1"
                    }
                }
            },
            "ConferenceCreated": {
                "type": "object",
                "title": "Conference Created",
                "example": {
                    "record_type": "event",
                    "event_type": "conference.created",
                    "id": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0",
                    "occurred_at": "2018-02-02T22:25:27.521992Z",
                    "payload": {
                        "call_control_id": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX",
                        "connection_id": "7267xxxxxxxxxxxxxx",
                        "call_leg_id": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                        "call_session_id": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                        "client_state": "aGF2ZSBhIG5pY2UgZGF5ID1d",
                        "conference_id": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1",
                        "occured_at": "2018-02-02T22:25:27.521Z"
                    }
                },
                "properties": {
                    "record_type": {
                        "type": "string",
                        "example": "event",
                        "enum": [
                            "event"
                        ],
                        "description": "Identifies the type of the resource."
                    },
                    "event_type": {
                        "type": "string",
                        "example": "conference.created",
                        "enum": [
                            "conference.created"
                        ],
                        "description": "The type of event being delivered."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0",
                        "description": "Identifies the type of resource."
                    },
                    "payload": {
                        "type": "object",
                        "properties": {
                            "call_control_id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX",
                                "description": "Call ID used to issue commands via Call Control API."
                            },
                            "connection_id": {
                                "type": "string",
                                "example": "7267xxxxxxxxxxxxxx",
                                "description": "Telnyx connection ID used in the call."
                            },
                            "call_leg_id": {
                                "type": "string",
                                "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                                "description": "ID that is unique to the call and can be used to correlate webhook events."
                            },
                            "call_session_id": {
                                "type": "string",
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1",
                                "description": "ID that is unique to the call session and can be used to correlate webhook events."
                            },
                            "client_state": {
                                "type": "string",
                                "example": "aGF2ZSBhIG5pY2UgZGF5ID1d",
                                "description": "State received from a command."
                            },
                            "conference_id": {
                                "type": "string",
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1",
                                "description": "Conference ID that the participant joined."
                            },
                            "occurred_at": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2018-02-02T22:25:27.521Z",
                                "description": "ISO 8601 datetime of when the event occurred."
                            }
                        }
                    }
                }
            },
            "ConferenceEnded": {
                "type": "object",
                "title": "Conference Ended",
                "properties": {
                    "record_type": {
                        "type": "string",
                        "example": "event",
                        "enum": [
                            "event"
                        ],
                        "description": "Identifies the type of the resource."
                    },
                    "event_type": {
                        "type": "string",
                        "example": "conference.ended",
                        "enum": [
                            "conference.ended"
                        ],
                        "description": "The type of event being delivered."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0",
                        "description": "Identifies the type of resource."
                    },
                    "payload": {
                        "type": "object",
                        "properties": {
                            "call_control_id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX",
                                "description": "Call ID used to issue commands via Call Control API."
                            },
                            "connection_id": {
                                "type": "string",
                                "example": "7267xxxxxxxxxxxxxx",
                                "description": "Telnyx connection ID used in the call."
                            },
                            "call_leg_id": {
                                "type": "string",
                                "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                                "description": "ID that is unique to the call and can be used to correlate webhook events."
                            },
                            "call_session_id": {
                                "type": "string",
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1",
                                "description": "ID that is unique to the call session and can be used to correlate webhook events."
                            },
                            "client_state": {
                                "type": "string",
                                "example": "aGF2ZSBhIG5pY2UgZGF5ID1d",
                                "description": "State received from a command."
                            },
                            "conference_id": {
                                "type": "string",
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1",
                                "description": "Conference ID that the participant joined."
                            },
                            "occurred_at": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2018-02-02T22:25:27.521Z",
                                "description": "ISO 8601 datetime of when the event occurred."
                            },
                            "reason": {
                                "type": "string",
                                "enum": [
                                    "all_left",
                                    "host_left",
                                    "time_exceeded"
                                ],
                                "description": "Reason the conference ended."
                            }
                        }
                    }
                },
                "example": {
                    "record_type": "event",
                    "event_type": "conference.ended",
                    "id": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0",
                    "occurred_at": "2018-02-02T22:25:27.521992Z",
                    "payload": {
                        "call_control_id": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX",
                        "connection_id": "7267xxxxxxxxxxxxxx",
                        "call_leg_id": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                        "call_session_id": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                        "client_state": "aGF2ZSBhIG5pY2UgZGF5ID1d",
                        "conference_id": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1",
                        "occured_at": "2018-02-02T22:25:27.521Z",
                        "reason": "host_left"
                    }
                }
            },
            "ConferenceParticipantLeft": {
                "type": "object",
                "title": "Conference Participant Left",
                "example": {
                    "record_type": "event",
                    "event_type": "conference.participant.left",
                    "id": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0",
                    "occurred_at": "2018-02-02T22:25:27.521992Z",
                    "payload": {
                        "call_control_id": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX",
                        "connection_id": "7267xxxxxxxxxxxxxx",
                        "call_leg_id": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                        "call_session_id": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                        "client_state": "aGF2ZSBhIG5pY2UgZGF5ID1d",
                        "conference_id": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1"
                    }
                },
                "properties": {
                    "record_type": {
                        "type": "string",
                        "example": "event",
                        "enum": [
                            "event"
                        ],
                        "description": "Identifies the type of the resource."
                    },
                    "event_type": {
                        "type": "string",
                        "example": "conference.participant.left",
                        "enum": [
                            "conference.participant.left"
                        ],
                        "description": "The type of event being delivered."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0",
                        "description": "Identifies the type of resource."
                    },
                    "occurred_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-02-02T22:25:27.521Z",
                        "description": "ISO 8601 datetime of when the event occurred."
                    },
                    "payload": {
                        "type": "object",
                        "properties": {
                            "call_control_id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX",
                                "description": "Call ID used to issue commands via Call Control API."
                            },
                            "connection_id": {
                                "type": "string",
                                "example": "7267xxxxxxxxxxxxxx",
                                "description": "Telnyx connection ID used in the call."
                            },
                            "call_leg_id": {
                                "type": "string",
                                "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
                                "description": "ID that is unique to the call and can be used to correlate webhook events."
                            },
                            "call_session_id": {
                                "type": "string",
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1",
                                "description": "ID that is unique to the call session and can be used to correlate webhook events."
                            },
                            "client_state": {
                                "type": "string",
                                "example": "aGF2ZSBhIG5pY2UgZGF5ID1d",
                                "description": "State received from a command."
                            },
                            "conference_id": {
                                "type": "string",
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1",
                                "description": "Conference ID that the participant joined."
                            }
                        }
                    }
                }
            },
            "IntId": {
                "type": "string",
                "format": "int64",
                "description": "Identifies the resource.",
                "example": "1293384261075731499",
                "readOnly": true
            },
            "PhoneNumberResponse": {
                "type": "object",
                "example": {
                    "id": "1293384261075731499",
                    "record_type": "phone_number",
                    "phone_number": "+19705555098",
                    "status": "active",
                    "tags": [
                        "tag_1",
                        "tag_2"
                    ],
                    "external_pin": "1234",
                    "connection_id": "1293384261075731499",
                    "connection_name": "connection-name",
                    "messaging_profile_id": "abc85f64-5717-4562-b3fc-2c9600000000",
                    "messaging_profile_name": "regional-customers",
                    "billing_group_id": "86f58db9-0fe3-4adc-9d1f-46e66e6e9323",
                    "emergency_enabled": true,
                    "emergency_address_id": "1315261609962112019",
                    "call_forwarding_enabled": true,
                    "cnam_listing_enabled": true,
                    "caller_id_name_enabled": true,
                    "call_recording_enabled": true,
                    "t38_fax_gateway_enabled": true,
                    "purchased_at": "2019-10-23T18:10:00.000Z",
                    "created_at": "2019-10-23T18:10:00.000Z",
                    "updated_at": "2019-10-24T18:10:00.000Z"
                },
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/IntId"
                    },
                    "record_type": {
                        "type": "string",
                        "example": "phone_number",
                        "description": "Identifies the type of the resource.",
                        "readOnly": true
                    },
                    "phone_number": {
                        "type": "string",
                        "description": "The +E.164-formatted phone number associated with this record",
                        "readOnly": true
                    },
                    "status": {
                        "type": "string",
                        "description": "The phone number's current status",
                        "enum": [
                            "purchase-pending",
                            "purchase-failed",
                            "port-pending",
                            "port-failed",
                            "active",
                            "deleted",
                            "emergency-only",
                            "ported-out",
                            "port-out-pending"
                        ],
                        "readOnly": true
                    },
                    "tags": {
                        "type": "array",
                        "description": "A list of user-assigned tags to help manage the phone number.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "external_pin": {
                        "type": "string",
                        "description": "If someone attempts to port your phone number away from Telnyx and your phone number has an external PIN set, Telnyx will attempt to verify that you provided the correct external PIN to the winning carrier. Note that not all carriers cooperate with this security mechanism."
                    },
                    "connection_name": {
                        "type": "string",
                        "description": "The user-assigned name of the connection to be associated with this phone number.",
                        "readOnly": true
                    },
                    "connection_id": {
                        "type": "string",
                        "description": "Identifies the connection associated with the phone number."
                    },
                    "messaging_profile_id": {
                        "type": "string",
                        "description": "Identifies the messaging profile associated with the phone number."
                    },
                    "messaging_profile_name": {
                        "type": "string",
                        "description": "The name of the messaging profile associated with the phone number.",
                        "example": "regional-customers"
                    },
                    "billing_group_id": {
                        "type": "string",
                        "description": "Identifies the billing group associated with the phone number."
                    },
                    "emergency_enabled": {
                        "type": "boolean",
                        "description": "Indicates whether emergency services are enabled for this number.",
                        "readOnly": true
                    },
                    "emergency_address_id": {
                        "type": "string",
                        "format": "int64",
                        "description": "Identifies the emergency address associated with the phone number.",
                        "readOnly": true
                    },
                    "call_forwarding_enabled": {
                        "type": "boolean",
                        "default": true,
                        "description": "Indicates if call forwarding will be enabled for this number if forwards_to and forwarding_type are filled in. Defaults to true for backwards compatibility with APIV1 use of numbers endpoints.",
                        "readOnly": true
                    },
                    "cnam_listing_enabled": {
                        "type": "boolean",
                        "description": "Indicates whether a CNAM listing is enabled for this number.",
                        "readOnly": true
                    },
                    "caller_id_name_enabled": {
                        "type": "boolean",
                        "description": "Indicates whether caller ID is enabled for this number.",
                        "readOnly": true
                    },
                    "call_recording_enabled": {
                        "type": "boolean",
                        "description": "Indicates whether call recording is enabled for this number.",
                        "readOnly": true
                    },
                    "t38_fax_gateway_enabled": {
                        "type": "boolean",
                        "description": "Indicates whether T38 Fax Gateway for inbound calls to this number.",
                        "readOnly": true
                    },
                    "purchased_at": {
                        "type": "string",
                        "description": "ISO 8601 formatted date indicating when the resource was purchased.",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "description": "ISO 8601 formatted date indicating when the resource was created.",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "description": "ISO 8601 formatted date indicating when the resource was updated.",
                        "readOnly": true
                    }
                }
            },
            "PhoneNumberUpdate": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Identifies the type of resource.",
                        "readOnly": true
                    },
                    "tags": {
                        "type": "array",
                        "description": "A list of user-assigned tags to help organize phone numbers.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "external_pin": {
                        "type": "string",
                        "description": "If someone attempts to port your phone number away from Telnyx and your phone number has an external PIN set, we will attempt to verify that you provided the correct external PIN to the winning carrier. Note that not all carriers cooperate with this security mechanism."
                    },
                    "connection_id": {
                        "type": "string",
                        "description": "Identifies the connection associated with the phone number."
                    },
                    "billing_group_id": {
                        "type": "string",
                        "description": "Identifies the billing group associated with the phone number."
                    }
                },
                "example": {
                    "id": "dc8e4d67-33a0-4cbb-af74-7b58f05bd494",
                    "tags": [
                        "tag"
                    ],
                    "address_id": "dc8f39ac-953d-4520-b93b-786ae87db0da",
                    "external_pin": "1234",
                    "connection_id": "dc8e4d67-33a0-4cbb-af74-7b58f05bd494",
                    "billing_group_id": "dc8e4d67-33a0-4cbb-af74-7b58f05bd494"
                }
            },
            "NumberReservation": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "12ade33a-21c0-473b-b055-b3c836e1c292",
                        "readOnly": true
                    },
                    "record_type": {
                        "type": "string",
                        "example": "number_reservation",
                        "readOnly": true
                    },
                    "phone_numbers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReservedPhoneNumber"
                        }
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "success",
                            "failure"
                        ],
                        "description": "The status of the entire reservation",
                        "readOnly": true
                    },
                    "customer_reference": {
                        "type": "string",
                        "description": "A customer reference string for customer look ups",
                        "example": "MY REF 001"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime",
                        "description": "An ISO 8901 datetime string denoting when the numbers reservation was created",
                        "example": "2018-01-01T00:00:00.000000Z",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "datetime",
                        "description": "An ISO 8901 datetime string for when the number reservation was updated",
                        "example": "2018-01-01T00:00:00.000000Z",
                        "readOnly": true
                    }
                },
                "example": {
                    "id": "12ade33a-21c0-473b-b055-b3c836e1c292",
                    "record_type": "number_reservation",
                    "phone_numbers": [
                        {
                            "id": "12ade33a-21c0-473b-b055-b3c836e1c292",
                            "record_type": "reserved_phone_number",
                            "phone_number": "+19705555098",
                            "status": "pending",
                            "created_at": "2018-01-01T00:00:00.000000Z",
                            "updated_at": "2018-01-01T00:00:00.000000Z",
                            "expired_at": "2018-01-01T00:00:00.000000Z"
                        }
                    ],
                    "status": "pending",
                    "customer_reference": "MY REF 001",
                    "created_at": "2018-01-01T00:00:00.000000Z",
                    "updated_at": "2018-01-01T00:00:00.000000Z"
                }
            },
            "ReservedPhoneNumber": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "12ade33a-21c0-473b-b055-b3c836e1c292",
                        "readOnly": true
                    },
                    "record_type": {
                        "type": "string",
                        "example": "reserved_phone_number",
                        "readOnly": true
                    },
                    "phone_number": {
                        "type": "string",
                        "format": "e164_phone_number",
                        "example": "+19705555098"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "success",
                            "failure"
                        ],
                        "description": "The status of the phone number's reservation",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime",
                        "description": "An ISO 8901 datetime string denoting when the individual number reservation was created",
                        "example": "2018-01-01T00:00:00.000000Z",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "datetime",
                        "description": "An ISO 8901 datetime string for when the the individual number reservation was updated",
                        "example": "2018-01-01T00:00:00.000000Z",
                        "readOnly": true
                    },
                    "expired_at": {
                        "type": "string",
                        "format": "datetime",
                        "description": "An ISO 8901 datetime string for when the individual number reservation is going to expire",
                        "example": "2018-01-01T00:00:00.000000Z",
                        "readOnly": true
                    }
                },
                "example": {
                    "id": "12ade33a-21c0-473b-b055-b3c836e1c292",
                    "record_type": "reserved_phone_number",
                    "phone_number": "+19705555098",
                    "status": "pending",
                    "created_at": "2018-01-01T00:00:00.000000Z",
                    "updated_at": "2018-01-01T00:00:00.000000Z",
                    "expired_at": "2018-01-01T00:00:00.000000Z"
                }
            },
            "NumberOrder": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "12ade33a-21c0-473b-b055-b3c836e1c292",
                        "readOnly": true
                    },
                    "record_type": {
                        "type": "string",
                        "example": "number_order",
                        "readOnly": true
                    },
                    "phone_numbers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PhoneNumber"
                        },
                        "writeOnly": true
                    },
                    "phone_numbers_count": {
                        "type": "integer",
                        "description": "The count of phone numbers in the number order",
                        "example": 1,
                        "readOnly": true
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "success",
                            "failure"
                        ],
                        "description": "The status of the order",
                        "readOnly": true
                    },
                    "customer_reference": {
                        "type": "string",
                        "description": "A customer reference string for customer look ups",
                        "example": "MY REF 001"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime",
                        "description": "An ISO 8901 datetime string denoting when the number order was created",
                        "example": "2018-01-01T00:00:00.000000Z",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "datetime",
                        "description": "An ISO 8901 datetime string for when the number order was updated",
                        "example": "2018-01-01T00:00:00.000000Z",
                        "readOnly": true
                    },
                    "requirements_met": {
                        "type": "boolean",
                        "description": "True if all requirements are met for every phone number, false otherwise",
                        "example": true,
                        "readOnly": true
                    }
                },
                "example": {
                    "id": "12ade33a-21c0-473b-b055-b3c836e1c292",
                    "record_type": "number_order",
                    "phone_numbers_count": 1,
                    "status": "pending",
                    "customer_reference": "MY REF 001",
                    "created_at": "2018-01-01T00:00:00.000000Z",
                    "updated_at": "2018-01-01T00:00:00.000000Z",
                    "requirements_met": true
                }
            },
            "NumberOrderDetailed": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/NumberOrder"
                    }
                ],
                "properties": {
                    "phone_numbers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PhoneNumber"
                        },
                        "writeOnly": false
                    }
                },
                "example": {
                    "id": "12ade33a-21c0-473b-b055-b3c836e1c292",
                    "record_type": "number_order",
                    "phone_numbers": [
                        {
                            "id": "dc8e4d67-33a0-4cbb-af74-7b58f05bd494",
                            "record_type": "number_order_phone_number",
                            "phone_number": "+19705555098",
                            "regulatory_group_id": "dc8e4d67-33a0-4cbb-af74-7b58f05bd494",
                            "regulatory_requirements": [
                                {
                                    "record_type": "phone_number_regulatory_requirement",
                                    "requirement_id": "8ffb3622-7c6b-4ccc-b65f-7a3dc0099576",
                                    "field_value": "45f45a04-b4be-4592-95b1-9306b9db2b21",
                                    "field_type": "address_id"
                                }
                            ],
                            "requirements_met": true,
                            "status": "success"
                        }
                    ],
                    "phone_numbers_count": 1,
                    "status": "pending",
                    "customer_reference": "MY REF 001",
                    "connection_id": "442191469269222625",
                    "messaging_profile_id": "730911e3-8488-40a8-a818-dc0a5df8bc03",
                    "created_at": "2018-01-01T00:00:00.000000Z",
                    "updated_at": "2018-01-01T00:00:00.000000Z",
                    "requirements_met": true
                }
            },
            "PhoneNumber": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "dc8e4d67-33a0-4cbb-af74-7b58f05bd494",
                        "readOnly": true
                    },
                    "record_type": {
                        "type": "string",
                        "example": "number_order_phone_number",
                        "readOnly": true
                    },
                    "phone_number": {
                        "type": "string",
                        "format": "e164_phone_number",
                        "example": "+19705555098"
                    },
                    "regulatory_group_id": {
                        "type": "string",
                        "example": "dc8e4d67-33a0-4cbb-af74-7b58f05bd494",
                        "readOnly": true
                    },
                    "regulatory_requirements": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PhoneNumberRegulatoryRequirement"
                        }
                    },
                    "requirements_met": {
                        "type": "boolean",
                        "description": "True if all requirements are met for a phone number, false otherwise",
                        "example": true,
                        "readOnly": true
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "success",
                            "failure"
                        ],
                        "description": "The status of the phone number in the order",
                        "readOnly": true
                    }
                },
                "example": {
                    "id": "dc8e4d67-33a0-4cbb-af74-7b58f05bd494",
                    "record_type": "number_order_phone_number",
                    "phone_number": "+19705555098",
                    "regulatory_group_id": "dc8e4d67-33a0-4cbb-af74-7b58f05bd494",
                    "regulatory_requirements": [
                        {
                            "record_type": "phone_number_regulatory_requirement",
                            "requirement_id": "8ffb3622-7c6b-4ccc-b65f-7a3dc0099576",
                            "field_value": "45f45a04-b4be-4592-95b1-9306b9db2b21",
                            "field_type": "address_id"
                        }
                    ],
                    "requirements_met": true,
                    "status": "success"
                }
            },
            "NumberOrderDocument": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "387d1e31-a218-4375-8151-103f2d5e2d2c",
                        "readOnly": true
                    },
                    "record_type": {
                        "type": "string",
                        "example": "number_order_document",
                        "readOnly": true
                    },
                    "file_id": {
                        "type": "string",
                        "description": "The id of the file to associate as a number order document",
                        "example": "1e3c5822-0362-4702-8e46-5a129f0d3976"
                    },
                    "requirements_id": {
                        "type": "string",
                        "description": "Unique id for a requirement",
                        "example": "36aaf27d-986b-493c-bd1b-de16af2e4292"
                    },
                    "customer_reference": {
                        "type": "string",
                        "description": "A customer reference string for customer look ups",
                        "example": "MY REF 001"
                    },
                    "requirement_type": {
                        "type": "string",
                        "enum": [
                            "address_proof",
                            "identification",
                            "reg_form"
                        ],
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime",
                        "description": "An ISO 8901 datetime string denoting when the number order document was uploaded",
                        "example": "2018-01-01T00:00:00.000000Z",
                        "readOnly": true
                    }
                },
                "example": {
                    "id": "387d1e31-a218-4375-8151-103f2d5e2d2c",
                    "record_type": "number_order_document",
                    "file_id": "1e3c5822-0362-4702-8e46-5a129f0d3976",
                    "requirements_id": "36aaf27d-986b-493c-bd1b-de16af2e4292",
                    "customer_reference": "MY REF 001",
                    "requirement_type": "address_proof",
                    "created_at": "2018-01-01T00:00:00.000000Z"
                }
            },
            "PhoneNumberRegulatoryRequirement": {
                "properties": {
                    "record_type": {
                        "type": "string",
                        "example": "phone_number_regulatory_requirement",
                        "readOnly": true
                    },
                    "requirement_id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Unique id for a requirement",
                        "example": "8ffb3622-7c6b-4ccc-b65f-7a3dc0099576"
                    },
                    "field_value": {
                        "type": "string",
                        "description": "The value of the requirement, this could be an id to a resource or a string value",
                        "example": "45f45a04-b4be-4592-95b1-9306b9db2b21"
                    },
                    "field_type": {
                        "type": "string",
                        "enum": [
                            "string",
                            "datetime",
                            "address_id",
                            "number_order_document_id"
                        ],
                        "example": "address_id",
                        "readOnly": true
                    }
                },
                "example": {
                    "record_type": "phone_number_regulatory_requirement",
                    "requirement_id": "8ffb3622-7c6b-4ccc-b65f-7a3dc0099576",
                    "field_value": "45f45a04-b4be-4592-95b1-9306b9db2b21",
                    "field_type": "address_id"
                }
            },
            "RegulatoryRequirement": {
                "properties": {
                    "record_type": {
                        "type": "string",
                        "description": "Identifies the type of the resource.",
                        "example": "regulatory_requirement",
                        "readOnly": true
                    },
                    "requirement_type": {
                        "type": "string",
                        "enum": [
                            "end user proof of address",
                            "entity identification",
                            "end user address"
                        ]
                    },
                    "label": {
                        "type": "string",
                        "example": "Proof of Address"
                    },
                    "field_type": {
                        "type": "string",
                        "enum": [
                            "file upload",
                            "text field",
                            "address",
                            "datetime"
                        ]
                    },
                    "description": {
                        "type": "string",
                        "example": "Requirement for providing Proof of Address"
                    }
                },
                "example": {
                    "record_type": "regulatory_requirement",
                    "requirement_type": "end user proof of address",
                    "label": "Proof of Address",
                    "field_type": "address",
                    "description": "Requirement for providing Proof of Address"
                }
            },
            "PhoneNumberRegulatoryGroup": {
                "properties": {
                    "record_type": {
                        "type": "string",
                        "example": "phone_number_regulatory_requirement",
                        "readOnly": true
                    },
                    "phone_number": {
                        "type": "string",
                        "format": "e164_phone_number",
                        "example": "+19705555098"
                    },
                    "regulatory_group_id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "d70873cd-7c98-401a-81b6-b1ae08246995"
                    },
                    "regulatory_requirements": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RegulatoryRequirement"
                        }
                    }
                },
                "example": {
                    "record_type": "phone_number_regulatory_requirement",
                    "phone_number": "+19705555098",
                    "regulatory_group_id": "d70873cd-7c98-401a-81b6-b1ae08246995",
                    "regulatory_requirements": [
                        {
                            "record_type": "regulatory_requirement",
                            "requirement_type": "end user proof of address",
                            "label": "Proof of Address",
                            "field_type": "address",
                            "description": "Requirement for providing Proof of Address"
                        }
                    ]
                }
            },
            "RegulatoryRequirementCriteria": {
                "properties": {
                    "record_type": {
                        "type": "string",
                        "example": "phone_number_regulatory_requirement_criteria",
                        "readOnly": true
                    },
                    "criteria_type": {
                        "type": "string",
                        "enum": [
                            "country",
                            "phone_number_type"
                        ],
                        "readOnly": true
                    },
                    "criteria_value": {
                        "type": "string",
                        "example": "AU",
                        "readOnly": true
                    }
                },
                "example": {
                    "record_type": "phone_number_regulatory_requirement_criteria",
                    "criteria_type": "country",
                    "criteria_value": "AU"
                }
            },
            "RegionInformation": {
                "properties": {
                    "region_type": {
                        "type": "string",
                        "example": "country_code",
                        "enum": [
                            "country_code",
                            "rate_center",
                            "state",
                            "location"
                        ]
                    },
                    "region_name": {
                        "type": "string",
                        "example": "US"
                    }
                },
                "example": {
                    "region_type": "country_code",
                    "region_name": "US"
                }
            },
            "CostInformation": {
                "type": "object",
                "properties": {
                    "upfront_cost": {
                        "type": "string",
                        "example": "3.21"
                    },
                    "monthly_cost": {
                        "type": "string",
                        "example": "6.54"
                    },
                    "currency": {
                        "type": "string",
                        "description": "The ISO 4217 code for the currency",
                        "example": "USD"
                    }
                },
                "example": {
                    "upfront_cost": "3.21",
                    "monthly_cost": "6.54",
                    "currency": "USD"
                }
            },
            "AvailablePhoneNumber": {
                "type": "object",
                "properties": {
                    "record_type": {
                        "type": "string",
                        "example": "available_phone_number",
                        "enum": [
                            "available_phone_number"
                        ]
                    },
                    "phone_number": {
                        "type": "string",
                        "example": "+19705555098"
                    },
                    "vanity_format": {
                        "type": "string"
                    },
                    "best_effort": {
                        "type": "boolean",
                        "description": "Specifies whether the phone number is an exact match based on the search criteria or not.",
                        "example": false
                    },
                    "quickship": {
                        "type": "boolean",
                        "description": "Specifies whether the phone number can receive calls immediately after purchase or not.",
                        "example": true
                    },
                    "reservable": {
                        "type": "boolean",
                        "description": "Specifies whether the phone number can be reserved before purchase or not.",
                        "example": true
                    },
                    "region_information": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RegionInformation"
                        }
                    },
                    "cost_information": {
                        "$ref": "#/components/schemas/CostInformation"
                    },
                    "regulatory_requirements": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RegulatoryRequirement"
                        }
                    }
                },
                "example": {
                    "record_type": "available_phone_number",
                    "phone_number": "+19705555098",
                    "vanity_format": "",
                    "best_effort": false,
                    "quickship": true,
                    "reservable": true,
                    "region_information": [
                        {
                            "region_type": "country_code",
                            "region_name": "US"
                        }
                    ],
                    "cost_information": {
                        "upfront_cost": "3.21",
                        "monthly_cost": "6.54",
                        "currency": "USD"
                    },
                    "regulatory_requirements": [
                        {
                            "requirement_type": "end user proof of address",
                            "label": "Proof of Address",
                            "field_type": "address",
                            "description": "Requirement for providing Proof of Address"
                        }
                    ]
                }
            },
            "AvailablePhoneNumbersMetadata": {
                "type": "object",
                "example": {
                    "total_results": 100,
                    "best_effort_results": 50
                },
                "properties": {
                    "total_results": {
                        "type": "integer",
                        "example": 1
                    },
                    "best_effort_results": {
                        "type": "integer",
                        "example": 0
                    }
                }
            },
            "PhoneNumberVoice": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "1293384261075731499",
                        "description": "Identifies the type of resource.",
                        "readOnly": true
                    },
                    "record_type": {
                        "type": "string",
                        "example": "voice_settings",
                        "description": "Identifies the type of the resource.",
                        "readOnly": true
                    },
                    "phone_number": {
                        "type": "string",
                        "example": "+13035551234",
                        "description": "The phone number in +E164 format.",
                        "readOnly": true
                    },
                    "connection_id": {
                        "type": "string",
                        "example": "1d0e6cb8-8668-462e-94c6-49ae0f0ed48b",
                        "description": "Identifies the connection associated with this phone number."
                    },
                    "tech_prefix_enabled": {
                        "type": "boolean",
                        "default": false,
                        "example": false,
                        "description": "Controls whether a tech prefix is enabled for this phone number."
                    },
                    "translated_number": {
                        "type": "string",
                        "example": "+13035559999",
                        "default": "",
                        "description": "This field allows you to rewrite the destination number of an inbound call before the call is routed to you. The value of this field may be any alphanumeric value, and the value will replace the number originally dialed."
                    },
                    "call_forwarding": {
                        "$ref": "#/components/schemas/CallForwarding"
                    },
                    "cnam_listing": {
                        "$ref": "#/components/schemas/CnamListing"
                    },
                    "emergency": {
                        "$ref": "#/components/schemas/EmergencySettings"
                    },
                    "usage_payment_method": {
                        "type": "string",
                        "enum": [
                            "pay-per-minute",
                            "channel"
                        ],
                        "default": "pay-per-minute",
                        "example": "pay-per-minute",
                        "description": "Controls whether a number is billed per minute or uses your concurrent channels."
                    },
                    "media_features": {
                        "$ref": "#/components/schemas/MediaFeatures"
                    },
                    "call_recording": {
                        "$ref": "#/components/schemas/CallRecording"
                    }
                },
                "example": {
                    "id": "1293384261075731499",
                    "record_type": "voice_settings",
                    "connection_id": "1d0e6cb8-8668-462e-94c6-49ae0f0ed48b",
                    "tech_prefix_enabled": false,
                    "translated_number": "+13035559999",
                    "call_forwarding": {
                        "call_forwarding_enabled": true,
                        "forwards_to": "+13035559123",
                        "forwarding_type": "always"
                    },
                    "cnam_listing": {
                        "cnam_listing_enabled": true,
                        "cnam_listing_details": "example"
                    },
                    "emergency": {
                        "emergency_enabled": true,
                        "emergency_address_id": "1315261609962112019"
                    },
                    "usage_payment_method": "pay-per-minute",
                    "media_features": {
                        "rtp_auto_adjust_enabled": true,
                        "media_handling_mode": "default",
                        "accept_any_rtp_packets_enabled": true,
                        "t38_fax_gateway_enabled": true
                    },
                    "call_recording": {
                        "inbound_call_recording_enabled": true,
                        "inbound_call_recording_format": "wav",
                        "inbound_call_recording_channels": "single"
                    }
                }
            },
            "CallRecording": {
                "description": "The call recording settings for a phone number.",
                "type": "object",
                "properties": {
                    "inbound_call_recording_enabled": {
                        "type": "boolean",
                        "default": false,
                        "description": "When enabled, any inbound call to this number will be recorded."
                    },
                    "inbound_call_recording_format": {
                        "type": "string",
                        "enum": [
                            "wav",
                            "mp3"
                        ],
                        "default": "wav",
                        "description": "The audio file format for calls being recorded."
                    },
                    "inbound_call_recording_channels": {
                        "type": "string",
                        "enum": [
                            "single",
                            "dual"
                        ],
                        "default": "single",
                        "description": "When using 'dual' channels, final audio file will be stereo recorded with the first leg on channel A, and the rest on channel B."
                    }
                },
                "example": {
                    "inbound_call_recording_enabled": true,
                    "inbound_call_recording_format": "wav",
                    "inbound_call_recording_channels": "single"
                }
            },
            "VoiceUpdate": {
                "type": "object",
                "properties": {
                    "tech_prefix_enabled": {
                        "type": "boolean",
                        "default": false,
                        "description": "Controls whether a tech prefix is enabled for this phone number."
                    },
                    "translated_number": {
                        "type": "string",
                        "description": "This field allows you to rewrite the destination number of an inbound call before the call is routed to you. The value of this field may be any alphanumeric value, and the value will replace the number originally dialed."
                    },
                    "call_forwarding": {
                        "$ref": "#/components/schemas/CallForwarding"
                    },
                    "cnam_listing": {
                        "$ref": "#/components/schemas/CnamListing"
                    },
                    "usage_payment_method": {
                        "type": "string",
                        "enum": [
                            "pay-per-minute",
                            "channel"
                        ],
                        "default": "pay-per-minute",
                        "description": "Controls whether a number is billed per minute or uses your concurrent channels."
                    },
                    "media_features": {
                        "$ref": "#/components/schemas/MediaFeatures"
                    },
                    "call_recording": {
                        "$ref": "#/components/schemas/CallRecording"
                    }
                },
                "example": {
                    "tech_prefix_enabled": true,
                    "translated_number": "+13035559999",
                    "call_forwarding": {
                        "call_forwarding_enabled": true,
                        "forwards_to": "+13035559123",
                        "forwarding_type": "always"
                    },
                    "cnam_listing": {
                        "cnam_listing_enabled": true,
                        "cnam_listing_details": "example"
                    },
                    "usage_payment_method": "pay-per-minute",
                    "media_features": {
                        "rtp_auto_adjust_enabled": true,
                        "media_handling_mode": "default",
                        "accept_any_rtp_packets_enabled": true,
                        "t38_fax_gateway_enabled": true
                    },
                    "call_recording": {
                        "inbound_call_recording_enabled": true,
                        "inbound_call_recording_format": "wav",
                        "inbound_call_recording_channels": "single"
                    }
                }
            },
            "PhoneNumberEnableEmergency": {
                "type": "object",
                "required": [
                    "emergency_enabled",
                    "emergency_address_id"
                ],
                "properties": {
                    "emergency_enabled": {
                        "type": "boolean",
                        "description": "Indicates whether to enable emergency services on this number."
                    },
                    "emergency_address_id": {
                        "type": "string",
                        "format": "int64",
                        "description": "Identifies the address to be used with emergency services."
                    }
                },
                "example": {
                    "emergency_enabled": true,
                    "emergency_address_id": "53829456729313"
                }
            },
            "CallForwarding": {
                "description": "The call forwarding settings for a phone number.",
                "type": "object",
                "properties": {
                    "call_forwarding_enabled": {
                        "type": "boolean",
                        "default": true,
                        "description": "Indicates if call forwarding will be enabled for this number if forwards_to and forwarding_type are filled in. Defaults to true for backwards compatibility with APIV1 use of numbers endpoints.",
                        "example": true
                    },
                    "forwards_to": {
                        "type": "string",
                        "description": "The phone number to which inbound calls to this number are forwarded. Inbound calls will not be forwarded if this field is left blank. If set, must be a +E.164-formatted phone number."
                    },
                    "forwarding_type": {
                        "type": "string",
                        "description": "Call forwarding type. 'forwards_to' must be set for this to have an effect.",
                        "enum": [
                            "always",
                            "on_failure"
                        ],
                        "example": "always"
                    }
                },
                "example": {
                    "call_forwarding_enabled": true,
                    "forwards_to": "+13035559123",
                    "forwarding_type": "always"
                }
            },
            "CnamListing": {
                "description": "The CNAM listing settings for a phone number.",
                "type": "object",
                "properties": {
                    "cnam_listing_enabled": {
                        "type": "boolean",
                        "default": false,
                        "description": "Enables CNAM listings for this number. Requires cnam_listing_details to also be set."
                    },
                    "cnam_listing_details": {
                        "type": "string",
                        "description": "The CNAM listing details for this number. Must be alphanumeric characters or spaces with a maximum length of 15. Requires cnam_listing_enabled to also be set to true."
                    }
                },
                "example": {
                    "cnam_listing_enabled": true,
                    "cnam_listing_details": "example"
                }
            },
            "EmergencySettings": {
                "description": "The emergency services settings for a phone number.",
                "type": "object",
                "properties": {
                    "emergency_enabled": {
                        "type": "boolean",
                        "default": false,
                        "description": "Allows you to enable or disable emergency services on the phone number. In order to enable emergency services, you must also set an emergency_address_id."
                    },
                    "emergency_address_id": {
                        "type": "string",
                        "format": "int64",
                        "description": "Identifies the address to be used with emergency services."
                    },
                    "emergency_status": {
                        "type": "string",
                        "description": "Represents the state of the number regarding emergency activation.",
                        "default": "disabled",
                        "enum": [
                            "disabled",
                            "active",
                            "provisioning",
                            "deprovisioning"
                        ]
                    }
                },
                "example": {
                    "emergency_enabled": true,
                    "emergency_address_id": "1315261609962112019"
                }
            },
            "MediaFeatures": {
                "description": "The media features settings for a phone number.",
                "type": "object",
                "properties": {
                    "rtp_auto_adjust_enabled": {
                        "type": "boolean",
                        "default": true,
                        "description": "When RTP Auto-Adjust is enabled, the destination RTP address port will be automatically changed to match the source of the incoming RTP packets."
                    },
                    "media_handling_mode": {
                        "type": "string",
                        "default": "default",
                        "enum": [
                            "default",
                            "proxy"
                        ],
                        "description": "Controls how media is handled for the phone number. default: media routed through Telnyx with transcode support. proxy: media routed through Telnyx with no transcode support."
                    },
                    "accept_any_rtp_packets_enabled": {
                        "type": "boolean",
                        "default": false,
                        "description": "When enabled, Telnyx will accept RTP packets from any customer-side IP address and port, not just those to which Telnyx is sending RTP."
                    },
                    "t38_fax_gateway_enabled": {
                        "type": "boolean",
                        "default": false,
                        "description": "Controls whether Telnyx will accept a T.38 re-INVITE for this phone number. Note that Telnyx will not send a T.38 re-INVITE; this option only controls whether one will be accepted."
                    }
                },
                "example": {
                    "rtp_auto_adjust_enabled": true,
                    "media_handling_mode": "default",
                    "accept_any_rtp_packets_enabled": true,
                    "t38_fax_gateway_enabled": true
                }
            },
            "CsvDownload": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "42587e44-3a3e-46de-9255-0c9a7a1d1ec7",
                        "description": "Identifies the resource.",
                        "readOnly": true
                    },
                    "record_type": {
                        "type": "string",
                        "example": "csv_download",
                        "description": "Identifies the type of the resource.",
                        "readOnly": true
                    },
                    "url": {
                        "type": "string",
                        "example": "https://www.telnyx.com/sample/42587e44-3a3e-46de-9255-0c9a7a1d1ec7",
                        "description": "The URL at which the CSV file can be retrieved."
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "complete",
                            "failed",
                            "expired"
                        ],
                        "default": "pending",
                        "example": "pending",
                        "description": "Indicates the completion level of the CSV report. Only complete CSV download requests will be able to be retrieved."
                    }
                },
                "example": {
                    "id": "42587e44-3a3e-46de-9255-0c9a7a1d1ec7",
                    "record_type": "csv_download",
                    "url": "https://www.telnyx.com/sample/42587e44-3a3e-46de-9255-0c9a7a1d1ec7",
                    "status": "pending"
                }
            }
        },
        "responses": {
            "GenericErrorResponse": {
                "description": "Unexpected error",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Errors"
                        }
                    }
                }
            },
            "ListMessagingProfilesResponse": {
                "description": "A paginated array of Messaging Profiles",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "title": "List Messaging Profiles Response",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MessagingProfile"
                                    }
                                },
                                "meta": {
                                    "$ref": "#/components/schemas/PaginationMeta"
                                }
                            }
                        }
                    }
                }
            },
            "CreateMessagingProfileResponse": {
                "description": "Expected messaging profile response to a valid request",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "title": "Create Messaging Profiles Response",
                            "properties": {
                                "data": {
                                    "$ref": "#/components/schemas/MessagingProfile"
                                }
                            }
                        }
                    }
                }
            },
            "RetrieveMessagingProfileResponse": {
                "description": "Expected messaging profile response to a valid request",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "title": "Retrieve Messaging Profile Response",
                            "properties": {
                                "data": {
                                    "$ref": "#/components/schemas/MessagingProfile"
                                }
                            }
                        }
                    }
                }
            },
            "UpdateMessagingProfileResponse": {
                "description": "Expected messaging profile response to a valid request",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "title": "Update Messaging Profile Response",
                            "properties": {
                                "data": {
                                    "$ref": "#/components/schemas/MessagingProfile"
                                }
                            }
                        }
                    }
                }
            },
            "DeleteMessagingProfileResponse": {
                "description": "Expected messaging profile response to a valid request",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "title": "Delete Messaging Profile Response",
                            "properties": {
                                "data": {
                                    "$ref": "#/components/schemas/MessagingProfile"
                                }
                            }
                        }
                    }
                }
            },
            "RetrieveMessagingProfilePhoneNumbersResponse": {
                "description": "Paginated array of phone numbers associated with the messaging profile",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "title": "Retrieve Messaging Profile Phone Numbers Response",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MessagingPhoneNumber"
                                    }
                                },
                                "meta": {
                                    "$ref": "#/components/schemas/PaginationMeta"
                                }
                            }
                        }
                    }
                }
            },
            "RetrieveMessagingProfileShortCodesResponse": {
                "description": "Paginated array of short codes associated with the messaging profile",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "title": "Retrieve Messaging Profile Short Codes Response",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ShortCode"
                                    }
                                },
                                "meta": {
                                    "$ref": "#/components/schemas/PaginationMeta"
                                }
                            }
                        }
                    }
                }
            },
            "ListMessagingProfileMetrics": {
                "description": "Paginated array of high-level metrics for messaging profiles",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "title": "List Messaging Profile Metrics Response",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MessagingProfileHighLevelMetrics"
                                    }
                                },
                                "meta": {
                                    "$ref": "#/components/schemas/PaginationMeta"
                                }
                            }
                        }
                    }
                }
            },
            "RetrieveMessagingProfileMetrics": {
                "description": "Detailed messaging metrics for the messaging profile",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "title": "Retrieve Messaging Profile Metrics Response",
                            "properties": {
                                "data": {
                                    "$ref": "#/components/schemas/MessagingProfileDetailedMetrics"
                                }
                            }
                        }
                    }
                }
            },
            "ListMessagingUrlDomains": {
                "description": "Returns a list of all available messaging URL shortener domains.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "title": "List Messaging Profile URL Domains Response",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MessagingUrlDomain"
                                    }
                                },
                                "meta": {
                                    "$ref": "#/components/schemas/PaginationMeta"
                                }
                            }
                        }
                    }
                }
            },
            "ListMessagingSettingsResponse": {
                "description": "A paginated array of the phone numbers",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "title": "List Messaging Settings Response",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MessagingSettings"
                                    }
                                },
                                "meta": {
                                    "$ref": "#/components/schemas/PaginationMeta"
                                }
                            }
                        }
                    }
                }
            },
            "RetrieveMessagingSettingsResponse": {
                "description": "Expected phone number response to a valid request",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "title": "Retrieve Messaging Settings Response",
                            "properties": {
                                "data": {
                                    "$ref": "#/components/schemas/MessagingSettings"
                                }
                            }
                        }
                    }
                }
            },
            "ListShortCodesResponse": {
                "description": "A paginated array of the short codes",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "title": "List Short Codes Response",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ShortCode"
                                    }
                                },
                                "meta": {
                                    "$ref": "#/components/schemas/PaginationMeta"
                                }
                            }
                        }
                    }
                }
            },
            "RetrieveShortCodeResponse": {
                "description": "Expected short code detail response to a valid request",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "title": "Retrieve Short Code Response",
                            "properties": {
                                "data": {
                                    "$ref": "#/components/schemas/ShortCode"
                                }
                            }
                        }
                    }
                }
            },
            "UpdateShortCodeResponse": {
                "description": "Expected update response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "title": "Update Short Code Response",
                            "properties": {
                                "data": {
                                    "$ref": "#/components/schemas/ShortCode"
                                }
                            }
                        }
                    }
                }
            },
            "CreateMessageResponse": {
                "description": "Detailed message object",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "title": "Create Message Response",
                            "properties": {
                                "data": {
                                    "$ref": "#/components/schemas/OutboundMessage"
                                }
                            }
                        }
                    }
                }
            },
            "RetrieveMessageResponse": {
                "description": "Detailed message object",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "title": "Retrieve Message Response",
                            "properties": {
                                "data": {
                                    "$ref": "#/components/schemas/OutboundMessage"
                                }
                            }
                        }
                    }
                }
            },
            "ListMessagingHostedNumberOrder": {
                "description": "Expected messaging hosted numbers order to a valid request",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "title": "List Messaging Hosted Number Order Response",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MessagingHostedNumberOrder"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "RetrieveMessagingHostedNumberOrder": {
                "description": "Expected messaging hosted numbers order to a valid request",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "title": "Retrieve Messaging Hosted Number Order Response",
                            "properties": {
                                "data": {
                                    "$ref": "#/components/schemas/MessagingHostedNumberOrder"
                                }
                            }
                        }
                    }
                }
            },
            "RetrieveMessagingHostedNumber": {
                "description": "Expected messaging hosted number to a valid request",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "title": "Retrieve Messaging Hosted Number Response",
                            "properties": {
                                "data": {
                                    "$ref": "#/components/schemas/HostedNumber"
                                }
                            }
                        }
                    }
                }
            },
            "CallControlCommandResponse": {
                "description": "Command response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "title": "Call Control Command Response",
                            "properties": {
                                "data": {
                                    "$ref": "#/components/schemas/CallControlCommandResult"
                                }
                            }
                        }
                    }
                }
            },
            "RetrieveCallStatusResponse": {
                "description": "Retrieve call status response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "title": "Retrieve Call Status Response",
                            "properties": {
                                "data": {
                                    "$ref": "#/components/schemas/Call"
                                }
                            }
                        }
                    }
                }
            },
            "ListCallEventsResponse": {
                "description": "An array of call events",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "title": "List Call Events Response",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CallEvent"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "CreateConferenceResponse": {
                "description": "Expected response to successful conference creation",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "title": "Create Conference Response",
                            "properties": {
                                "data": {
                                    "$ref": "#/components/schemas/Conference"
                                }
                            }
                        }
                    }
                }
            },
            "GetConferenceResponse": {
                "description": "A conference",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "title": "Get Conference Response",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/Conference"
                                }
                            }
                        }
                    }
                }
            },
            "ListConferencesResponse": {
                "description": "A paginated array of conferences",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "title": "List Conference Response",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Conference"
                                    }
                                },
                                "meta": {
                                    "$ref": "#/components/schemas/PaginationMetaSimple"
                                }
                            }
                        }
                    }
                }
            },
            "ListParticipantsResponse": {
                "description": "A paginated array of conference participants",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "title": "List Participants Response",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Participant"
                                    }
                                },
                                "meta": {
                                    "$ref": "#/components/schemas/PaginationMetaSimple"
                                }
                            }
                        }
                    }
                }
            },
            "ConferenceCommandResponse": {
                "description": "Conference command response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "title": "Conference Command Response",
                            "properties": {
                                "data": {
                                    "$ref": "#/components/schemas/ConferenceCommandResult"
                                }
                            }
                        }
                    }
                }
            },
            "UnauthorizedResponse": {
                "description": "Unauthorized"
            },
            "NotFoundResponse": {
                "description": "Conference does not exist"
            },
            "UnprocessableEntityResponse": {
                "description": "Unprocessable entity"
            },
            "ListPhoneNumbersResponse": {
                "description": "A paginated array of PhoneNumbers.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "title": "List Phone Numbers Response",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PhoneNumberResponse"
                                    }
                                },
                                "meta": {
                                    "$ref": "#/components/schemas/PaginationMeta"
                                }
                            }
                        }
                    }
                }
            },
            "RetrievePhoneNumberResponse": {
                "description": "The details for a single phone number.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "title": "Retrieve Phone Number Response",
                            "properties": {
                                "data": {
                                    "$ref": "#/components/schemas/PhoneNumberResponse"
                                }
                            }
                        }
                    }
                }
            },
            "DeletePhoneNumberResponse": {
                "description": "The details for the phone number that was just deleted.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "title": "Delete Phone Number Response",
                            "properties": {
                                "data": {
                                    "$ref": "#/components/schemas/PhoneNumberResponse"
                                }
                            }
                        }
                    }
                }
            },
            "ListNumberReservationsResponse": {
                "description": "Returns a list of number reservations",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "title": "List Number Reservations Response",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NumberReservation"
                                    }
                                },
                                "meta": {
                                    "$ref": "#/components/schemas/PaginationMeta"
                                }
                            }
                        }
                    }
                }
            },
            "CreateNumberReservationsResponse": {
                "description": "Number reservation has been created successfully",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "title": "Create Number Reservations Response",
                            "properties": {
                                "data": {
                                    "$ref": "#/components/schemas/NumberReservation"
                                }
                            }
                        }
                    }
                }
            },
            "RetrieveNumberReservationResponse": {
                "description": "Number reservation was found",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "title": "Retrieve Number Reservation Response",
                            "properties": {
                                "data": {
                                    "$ref": "#/components/schemas/NumberReservation"
                                }
                            }
                        }
                    }
                }
            },
            "ListNumberOrdersResponse": {
                "description": "Returns a list of number orders",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "title": "List Number Orders Response",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NumberOrder"
                                    }
                                },
                                "meta": {
                                    "$ref": "#/components/schemas/PaginationMeta"
                                }
                            }
                        }
                    }
                }
            },
            "CreateNumberOrderResponse": {
                "description": "Number order has been created successfully",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "title": "Create Number Order Response",
                            "properties": {
                                "data": {
                                    "$ref": "#/components/schemas/NumberOrderDetailed"
                                }
                            }
                        }
                    }
                }
            },
            "RetrieveNumberOrderResponse": {
                "description": "Number order was found",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "title": "Retrieve Number Order Response",
                            "properties": {
                                "data": {
                                    "$ref": "#/components/schemas/NumberOrderDetailed"
                                }
                            }
                        }
                    }
                }
            },
            "UpdateNumberOrderResponse": {
                "description": "Number order has been updated succesfully",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "title": "Update Number Order Response",
                            "properties": {
                                "data": {
                                    "$ref": "#/components/schemas/NumberOrderDetailed"
                                }
                            }
                        }
                    }
                }
            },
            "ListNumberOrderDocumentsResponse": {
                "description": "Returns a list of number order documents",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "title": "List Number Order Documents Response",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NumberOrderDocument"
                                    }
                                },
                                "meta": {
                                    "$ref": "#/components/schemas/PaginationMeta"
                                }
                            }
                        }
                    }
                }
            },
            "CreateNumberOrderDocumentResponse": {
                "description": "Number order document has been uploaded successfully",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "title": "Create Number Order Document Response",
                            "properties": {
                                "data": {
                                    "$ref": "#/components/schemas/NumberOrderDocument"
                                }
                            }
                        }
                    }
                }
            },
            "UpdateNumberOrderDocumentResponse": {
                "description": "Number order document has been updated successfully",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "title": "Update Number Order Document Response",
                            "properties": {
                                "data": {
                                    "$ref": "#/components/schemas/NumberOrderDocument"
                                }
                            }
                        }
                    }
                }
            },
            "RetrieveNumberOrderDocumentResponse": {
                "description": "Number order document was found",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "title": "Retrieve Number Order Document Response",
                            "properties": {
                                "data": {
                                    "$ref": "#/components/schemas/NumberOrderDocument"
                                }
                            }
                        }
                    }
                }
            },
            "ListNumberOrderRegulatoryRequirementsResponse": {
                "description": "Returns a list of number order regulatory requirements",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "title": "List Number Order Regulatory Requirements Response",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/RegulatoryRequirement"
                                    }
                                },
                                "meta": {
                                    "$ref": "#/components/schemas/PaginationMeta"
                                }
                            }
                        }
                    }
                }
            },
            "RetrieveNumberOrderRegulatoryRequirementResponse": {
                "description": "Number order regulatory requirement was found",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "title": "Retrieve Number Order Regulatory Requirement Response",
                            "properties": {
                                "data": {
                                    "$ref": "#/components/schemas/RegulatoryRequirement"
                                }
                            }
                        }
                    }
                }
            },
            "ListPhoneNumberRegulatoryRequirementsResponse": {
                "description": "Returns a list of number order regulatory requirements",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "title": "List Phone Number Regulatory Requirements Response",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PhoneNumberRegulatoryGroup"
                                    }
                                },
                                "meta": {
                                    "$ref": "#/components/schemas/PaginationMeta"
                                }
                            }
                        }
                    }
                }
            },
            "ListAvailablePhoneNumbersResponse": {
                "description": "An array of phone numbers. This is not paginated. The limit filter can be used to control the amount of results returned.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "title": "List Available Phone Numbers Response",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AvailablePhoneNumber"
                                    }
                                },
                                "meta": {
                                    "$ref": "#/components/schemas/AvailablePhoneNumbersMetadata"
                                }
                            }
                        }
                    }
                }
            },
            "ListPhoneNumberVoicesResponse": {
                "description": "A paginated array of phone number voice information.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "title": "List Phone Number Voices Response",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PhoneNumberVoice"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "RetrievePhoneNumberVoiceResponse": {
                "description": "The voice attributes and information for a phone number.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "title": "Retrieve Phone Number Voice Response",
                            "properties": {
                                "data": {
                                    "$ref": "#/components/schemas/PhoneNumberVoice"
                                }
                            }
                        }
                    }
                }
            },
            "RetrieveCsvDownloadResponse": {
                "description": "The details for a single CSV download request.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "title": "Retrieve Csv Download Response",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CsvDownload"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "ListCsvDownloadsResponse": {
                "description": "A paginated array of CSV download requests.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "title": "List Csv Downloads Response",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CsvDownload"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "parameters": {
            "PageSize": {
                "name": "page[size]",
                "in": "query",
                "description": "The size of the page",
                "schema": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 250,
                    "default": 20
                }
            },
            "PageNumber": {
                "name": "page[number]",
                "in": "query",
                "description": "The page number to load",
                "schema": {
                    "type": "integer",
                    "minimum": 1,
                    "default": 1
                }
            },
            "MessagingProfileId": {
                "name": "id",
                "in": "path",
                "description": "The id of the messaging profile to retrieve",
                "required": true,
                "schema": {
                    "type": "string",
                    "format": "uuid"
                }
            },
            "MessagingProfileMetric": {
                "name": "id",
                "in": "query",
                "description": "The id of the messaging profile(s) to retrieve",
                "required": false,
                "schema": {
                    "type": "string",
                    "format": "uuid"
                }
            },
            "MessagingProfileMetricTimeFrame": {
                "name": "time_frame",
                "in": "query",
                "description": "The timeframe for which you'd like to retrieve metrics.",
                "required": false,
                "schema": {
                    "type": "string",
                    "default": "24h",
                    "enum": [
                        "1h",
                        "3h",
                        "24h",
                        "3d",
                        "7d",
                        "30d"
                    ]
                }
            },
            "ShortCodeId": {
                "name": "id",
                "in": "path",
                "description": "The id of the short code",
                "required": true,
                "schema": {
                    "type": "string",
                    "format": "uuid"
                }
            },
            "CallControlId": {
                "name": "call_control_id",
                "description": "Unique identifier and token for controlling the call",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "IntId": {
                "name": "id",
                "description": "Identifies the resource.",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "string",
                    "format": "int64",
                    "example": "1293384261075731499"
                }
            }
        },
        "examples": {},
        "links": {},
        "requestBodies": {}
    }
}